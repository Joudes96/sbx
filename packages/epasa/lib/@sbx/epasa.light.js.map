{"version":3,"sources":["webpack://@sbx/epasa/webpack/universalModuleDefinition","webpack://@sbx/epasa/webpack/bootstrap","webpack://@sbx/epasa//home/ben/Code/crypto/pascalcoin/untitled/node_modules/murmur-hash/index.js","webpack://@sbx/epasa//home/ben/Code/crypto/pascalcoin/untitled/node_modules/murmur-hash/lib/v3/index.js","webpack://@sbx/epasa//home/ben/Code/crypto/pascalcoin/untitled/node_modules/murmur-hash/lib/v3/murmur.js","webpack://@sbx/epasa/(webpack)/buildin/module.js","webpack://@sbx/epasa/./index.js","webpack://@sbx/epasa/./src/EPasa.js","webpack://@sbx/epasa/./src/Parser.js","webpack://@sbx/epasa/./src/Types/Ascii.js","webpack://@sbx/epasa/./src/Types/Base58.js","webpack://@sbx/epasa/external \"@sbx/common\""],"names":["module","exports","Parser","require","EPasa","Types","Ascii","Base58","AccountNumber","AccountName","MurmurHash3","v3","BC","P_ACCOUNT_NUMBER","Symbol","P_ACCOUNT_NAME","P_PAYLOAD","P_PAYLOAD_TYPE","P_PASSWORD","NON_DETERMISTIC","ENC_PUBLIC","ENC_RECEIVER","ENC_SENDER","ENC_PASSWORD","FORMAT_ASCII","FORMAT_HEX","FORMAT_BASE58","ADDRESSED_BY_NAME","MAX_PUBLIC_ASCII","MAX_ECIES_ASCII","MAX_AES_ASCII","MAX_PUBLIC_HEX","MAX_ECIES_HEX","MAX_AES_HEX","MAX_PUBLIC_BASE58","MAX_ECIES_BASE58","MAX_AES_BASE58","constructor","accountNumber","undefined","Error","accountName","hasFormat","isFormatBase58","isFormatAscii","isFormatHex","hasEncryption","isEncryptionPublic","isEncryptionPassword","isEncryptionSender","isEncryptionReceiver","isNonDetermistic","password","payload","checksum","calculateChecksum","compile","format","toString","fromHex","fromString","validatePayloadLength","payloadCompare","typeIdent","toHex","maxIdent","length","encryption","omitChecksum","data","account","enc_marker_start","enc_marker_end","toStringEscaped","toLowerCase","asciiPayload","epasa","ePasaString","fromInt","x86","hash32","switchEndian","parse","state","inAccount","inPayload","inPassword","inChecksum","checksumIdentFound","asciiOpen","asciiClosed","encOpen","encClosed","position","next","escaped","isEscape","char","curr","indexOf","substr","test","exAccNumber","exAccName","message","Util","P_VALUE","CHARS_TO_ESCAPE","split","REGEX_TO_ESCAPE","map","c","escapeRegex","join","value","validate","pos","charCodeAt","replace","RegExp","c1","c2","ALLOWED"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA,8CAAa;;AAEb;AACA,MAAM,mBAAO,CAAC,gEAAU;AACxB;;AAEA;AACA,IAAI,4CAAY;AAChB;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;ACXa;;AAEb,iBAAiB,mBAAO,CAAC,iEAAU;;;;;;;;;;;;ACFnC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAAC;AACD;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","file":"@sbx/epasa.light.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@sbx/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@sbx/epasa\", [\"@sbx/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@sbx/epasa\"] = factory(require(\"@sbx/common\"));\n\telse\n\t\troot[\"@sbx/epasa\"] = factory(root[\"@sbx/common\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__sbx_common__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nmodule.exports =  {\n  v3: require('./lib/v3')\n};\n\n// -- Test Code ---------------------------------------------------------\nif (require.main === module) {\n  (function () {\n    console.log(module.exports.v3);\n  })();\n}\n","'use strict';\n\nmodule.exports = require('./murmur');\n","// +----------------------------------------------------------------------+\n// | murmurHash3.js v2.1.2 (http://github.com/karanlyons/murmurHash.js)   |\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012 Karan Lyons                                       |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n\n;(function (root, undefined) {\n  'use strict';\n\n  // Create a local object that'll be exported or referenced globally.\n  var library = {\n    'version': '2.1.2',\n    'x86': {},\n    'x64': {}\n  };\n\n\n\n\n  // PRIVATE FUNCTIONS\n  // -----------------\n\n  function _x86Multiply(m, n) {\n    //\n    // Given two 32bit ints, returns the two multiplied together as a\n    // 32bit int.\n    //\n\n    return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n  }\n\n\n  function _x86Rotl(m, n) {\n    //\n    // Given a 32bit int and an int representing a number of bit positions,\n    // returns the 32bit int rotated left by that number of positions.\n    //\n\n    return (m << n) | (m >>> (32 - n));\n  }\n\n\n  function _x86Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x86 mix of that block.\n    //\n\n    h ^= h >>> 16;\n    h  = _x86Multiply(h, 0x85ebca6b);\n    h ^= h >>> 13;\n    h  = _x86Multiply(h, 0xc2b2ae35);\n    h ^= h >>> 16;\n\n    return h;\n  }\n\n\n  function _x64Add(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // added together as a 64bit int (as an array of two 32bit ints).\n    //\n\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    var o = [0, 0, 0, 0];\n\n    o[3] += m[3] + n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n\n    o[2] += m[2] + n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n\n    o[1] += m[1] + n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n\n    o[0] += m[0] + n[0];\n    o[0] &= 0xffff;\n\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n  }\n\n\n  function _x64Multiply(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // multiplied together as a 64bit int (as an array of two 32bit ints).\n    //\n\n    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n    var o = [0, 0, 0, 0];\n\n    o[3] += m[3] * n[3];\n    o[2] += o[3] >>> 16;\n    o[3] &= 0xffff;\n\n    o[2] += m[2] * n[3];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n\n    o[2] += m[3] * n[2];\n    o[1] += o[2] >>> 16;\n    o[2] &= 0xffff;\n\n    o[1] += m[1] * n[3];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n\n    o[1] += m[2] * n[2];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n\n    o[1] += m[3] * n[1];\n    o[0] += o[1] >>> 16;\n    o[1] &= 0xffff;\n\n    o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n    o[0] &= 0xffff;\n\n    return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n  }\n\n\n  function _x64Rotl(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) rotated left by that number of positions.\n    //\n\n    n %= 64;\n\n    if (n === 32) {\n      return [m[1], m[0]];\n    }\n\n    else if (n < 32) {\n      return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n    }\n\n    else {\n      n -= 32;\n      return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n    }\n  }\n\n\n  function _x64LeftShift(m, n) {\n    //\n    // Given a 64bit int (as an array of two 32bit ints) and an int\n    // representing a number of bit positions, returns the 64bit int (as an\n    // array of two 32bit ints) shifted left by that number of positions.\n    //\n\n    n %= 64;\n\n    if (n === 0) {\n      return m;\n    }\n\n    else if (n < 32) {\n      return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n    }\n\n    else {\n      return [m[1] << (n - 32), 0];\n    }\n  }\n\n\n  function _x64Xor(m, n) {\n    //\n    // Given two 64bit ints (as an array of two 32bit ints) returns the two\n    // xored together as a 64bit int (as an array of two 32bit ints).\n    //\n\n    return [m[0] ^ n[0], m[1] ^ n[1]];\n  }\n\n\n  function _x64Fmix(h) {\n    //\n    // Given a block, returns murmurHash3's final x64 mix of that block.\n    // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n    // only place where we need to right shift 64bit ints.)\n    //\n\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n    h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n    h = _x64Xor(h, [0, h[0] >>> 1]);\n\n    return h;\n  }\n\n\n\n\n  // PUBLIC FUNCTIONS\n  // ----------------\n\n  library.x86.hash32 = function (key, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 32 bit hash\n    // using the x86 flavor of MurmurHash3, as an unsigned int.\n    //\n\n    key = key || '';\n    seed = seed || 0;\n\n    var remainder = key.length % 4;\n    var bytes = key.length - remainder;\n\n    var h1 = seed;\n\n    var k1 = 0;\n\n    var c1 = 0xcc9e2d51;\n    var c2 = 0x1b873593;\n\n    for (var i = 0; i < bytes; i = i + 4) {\n      k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n\n      k1 = _x86Multiply(k1, c1);\n      k1 = _x86Rotl(k1, 15);\n      k1 = _x86Multiply(k1, c2);\n\n      h1 ^= k1;\n      h1 = _x86Rotl(h1, 13);\n      h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3:\n        k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\n      case 2:\n        k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\n      case 1:\n        k1 ^= (key.charCodeAt(i) & 0xff);\n        k1 = _x86Multiply(k1, c1);\n        k1 = _x86Rotl(k1, 15);\n        k1 = _x86Multiply(k1, c2);\n        h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n    h1 = _x86Fmix(h1);\n\n    return h1 >>> 0;\n  };\n\n\n  library.x86.hash128 = function (key, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 128 bit\n    // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n    //\n\n    key = key || '';\n    seed = seed || 0;\n\n    var remainder = key.length % 16;\n    var bytes = key.length - remainder;\n\n    var h1 = seed;\n    var h2 = seed;\n    var h3 = seed;\n    var h4 = seed;\n\n    var k1 = 0;\n    var k2 = 0;\n    var k3 = 0;\n    var k4 = 0;\n\n    var c1 = 0x239b961b;\n    var c2 = 0xab0e9789;\n    var c3 = 0x38b34ae5;\n    var c4 = 0xa1e38b93;\n\n    for (var i = 0; i < bytes; i = i + 16) {\n      k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n      k2 = ((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24);\n      k3 = ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i + 9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24);\n      k4 = ((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24);\n\n      k1 = _x86Multiply(k1, c1);\n      k1 = _x86Rotl(k1, 15);\n      k1 = _x86Multiply(k1, c2);\n      h1 ^= k1;\n\n      h1 = _x86Rotl(h1, 19);\n      h1 += h2;\n      h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n      k2 = _x86Multiply(k2, c2);\n      k2 = _x86Rotl(k2, 16);\n      k2 = _x86Multiply(k2, c3);\n      h2 ^= k2;\n\n      h2 = _x86Rotl(h2, 17);\n      h2 += h3;\n      h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n      k3 = _x86Multiply(k3, c3);\n      k3 = _x86Rotl(k3, 17);\n      k3 = _x86Multiply(k3, c4);\n      h3 ^= k3;\n\n      h3 = _x86Rotl(h3, 15);\n      h3 += h4;\n      h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n      k4 = _x86Multiply(k4, c4);\n      k4 = _x86Rotl(k4, 18);\n      k4 = _x86Multiply(k4, c1);\n      h4 ^= k4;\n\n      h4 = _x86Rotl(h4, 13);\n      h4 += h1;\n      h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n    }\n\n    k1 = 0;\n    k2 = 0;\n    k3 = 0;\n    k4 = 0;\n\n    switch (remainder) {\n      case 15:\n        k4 ^= key.charCodeAt(i + 14) << 16;\n\n      case 14:\n        k4 ^= key.charCodeAt(i + 13) << 8;\n\n      case 13:\n        k4 ^= key.charCodeAt(i + 12);\n        k4 = _x86Multiply(k4, c4);\n        k4 = _x86Rotl(k4, 18);\n        k4 = _x86Multiply(k4, c1);\n        h4 ^= k4;\n\n      case 12:\n        k3 ^= key.charCodeAt(i + 11) << 24;\n\n      case 11:\n        k3 ^= key.charCodeAt(i + 10) << 16;\n\n      case 10:\n        k3 ^= key.charCodeAt(i + 9) << 8;\n\n      case 9:\n        k3 ^= key.charCodeAt(i + 8);\n        k3 = _x86Multiply(k3, c3);\n        k3 = _x86Rotl(k3, 17);\n        k3 = _x86Multiply(k3, c4);\n        h3 ^= k3;\n\n      case 8:\n        k2 ^= key.charCodeAt(i + 7) << 24;\n\n      case 7:\n        k2 ^= key.charCodeAt(i + 6) << 16;\n\n      case 6:\n        k2 ^= key.charCodeAt(i + 5) << 8;\n\n      case 5:\n        k2 ^= key.charCodeAt(i + 4);\n        k2 = _x86Multiply(k2, c2);\n        k2 = _x86Rotl(k2, 16);\n        k2 = _x86Multiply(k2, c3);\n        h2 ^= k2;\n\n      case 4:\n        k1 ^= key.charCodeAt(i + 3) << 24;\n\n      case 3:\n        k1 ^= key.charCodeAt(i + 2) << 16;\n\n      case 2:\n        k1 ^= key.charCodeAt(i + 1) << 8;\n\n      case 1:\n        k1 ^= key.charCodeAt(i);\n        k1 = _x86Multiply(k1, c1);\n        k1 = _x86Rotl(k1, 15);\n        k1 = _x86Multiply(k1, c2);\n        h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n    h2 ^= key.length;\n    h3 ^= key.length;\n    h4 ^= key.length;\n\n    h1 += h2;\n    h1 += h3;\n    h1 += h4;\n    h2 += h1;\n    h3 += h1;\n    h4 += h1;\n\n    h1 = _x86Fmix(h1);\n    h2 = _x86Fmix(h2);\n    h3 = _x86Fmix(h3);\n    h4 = _x86Fmix(h4);\n\n    h1 += h2;\n    h1 += h3;\n    h1 += h4;\n    h2 += h1;\n    h3 += h1;\n    h4 += h1;\n\n    return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n  };\n\n\n  library.x64.hash128 = function (key, seed) {\n    //\n    // Given a string and an optional seed as an int, returns a 128 bit\n    // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n    //\n\n    key = key || '';\n    seed = seed || 0;\n\n    var remainder = key.length % 16;\n    var bytes = key.length - remainder;\n\n    var h1 = [0, seed];\n    var h2 = [0, seed];\n\n    var k1 = [0, 0];\n    var k2 = [0, 0];\n\n    var c1 = [0x87c37b91, 0x114253d5];\n    var c2 = [0x4cf5ad43, 0x2745937f];\n\n    for (var i = 0; i < bytes; i = i + 16) {\n      k1 = [((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24), ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24)];\n      k2 = [((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24), ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i + 9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24)];\n\n      k1 = _x64Multiply(k1, c1);\n      k1 = _x64Rotl(k1, 31);\n      k1 = _x64Multiply(k1, c2);\n      h1 = _x64Xor(h1, k1);\n\n      h1 = _x64Rotl(h1, 27);\n      h1 = _x64Add(h1, h2);\n      h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n      k2 = _x64Multiply(k2, c2);\n      k2 = _x64Rotl(k2, 33);\n      k2 = _x64Multiply(k2, c1);\n      h2 = _x64Xor(h2, k2);\n\n      h2 = _x64Rotl(h2, 31);\n      h2 = _x64Add(h2, h1);\n      h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n    }\n\n    k1 = [0, 0];\n    k2 = [0, 0];\n\n    switch(remainder) {\n      case 15:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 14)], 48));\n\n      case 14:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 13)], 40));\n\n      case 13:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 12)], 32));\n\n      case 12:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 11)], 24));\n\n      case 11:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 10)], 16));\n\n      case 10:\n        k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 9)], 8));\n\n      case 9:\n        k2 = _x64Xor(k2, [0, key.charCodeAt(i + 8)]);\n        k2 = _x64Multiply(k2, c2);\n        k2 = _x64Rotl(k2, 33);\n        k2 = _x64Multiply(k2, c1);\n        h2 = _x64Xor(h2, k2);\n\n      case 8:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 7)], 56));\n\n      case 7:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 6)], 48));\n\n      case 6:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 5)], 40));\n\n      case 5:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 4)], 32));\n\n      case 4:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 3)], 24));\n\n      case 3:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 2)], 16));\n\n      case 2:\n        k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 1)], 8));\n\n      case 1:\n        k1 = _x64Xor(k1, [0, key.charCodeAt(i)]);\n        k1 = _x64Multiply(k1, c1);\n        k1 = _x64Rotl(k1, 31);\n        k1 = _x64Multiply(k1, c2);\n        h1 = _x64Xor(h1, k1);\n    }\n\n    h1 = _x64Xor(h1, [0, key.length]);\n    h2 = _x64Xor(h2, [0, key.length]);\n\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n\n    h1 = _x64Fmix(h1);\n    h2 = _x64Fmix(h2);\n\n    h1 = _x64Add(h1, h2);\n    h2 = _x64Add(h2, h1);\n\n    return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n  };\n\n\n\n\n  // INITIALIZATION\n  // --------------\n\n  // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n  // of the global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = library;\n    }\n\n    exports.murmurHash3 = library;\n  }\n\n  else if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return library;\n    });\n  }\n\n  else {\n    // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n    // original value. Returns a reference to the library object, to allow\n    // it to be used under a different name.\n    library._murmurHash3 = root.murmurHash3\n\n    library.noConflict = function () {\n      root.murmurHash3 = library._murmurHash3;\n      library._murmurHash3 = undefined;\n      library.noConflict = undefined;\n\n      return library;\n    };\n\n    root.murmurHash3 = library;\n  }\n})(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = {\n  Parser: require('./src/Parser'),\n  EPasa: require('./src/EPasa'),\n  Types: {\n    Ascii: require('./src/Types/Ascii'),\n    Base58: require('./src/Types/Base58')\n  }\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst AccountName = require('@sbx/common').Types.AccountName;\nconst MurmurHash3 = require('murmur-hash').v3;\nconst Ascii = require('./Types/Ascii');\nconst Base58 = require('./Types/Base58');\nconst BC = require('@sbx/common').BC;\n\nconst P_ACCOUNT_NUMBER = Symbol('account_number');\nconst P_ACCOUNT_NAME = Symbol('account_name');\nconst P_PAYLOAD = Symbol('payload');\nconst P_PAYLOAD_TYPE = Symbol('payload_type');\nconst P_PASSWORD = Symbol('password');\n\n/**\n * Represents an EPasa.\n */\nclass EPasa {\n\n  /**\n   * Payload encryption and encoding method not specified.\n   *\n   * @returns {number}\n   */\n  static get NON_DETERMISTIC() {\n    return 0;\n  }\n\n  /**\n   * Unencrypted, public payload.\n   *\n   * @returns {number}\n   */\n  static get ENC_PUBLIC() {\n    return 1;\n  }\n\n  /**\n   * ECIES encrypted using recipient accounts public key.\n   *\n   * @returns {number}\n   */\n  static get ENC_RECEIVER() {\n    return 2;\n  }\n\n  /**\n   * ECIES encrypted using sender accounts public key.\n   *\n   * @returns {number}\n   */\n  static get ENC_SENDER() {\n    return 4;\n  }\n\n  /**\n   * AES encrypted using pwd param\n   *\n   * @returns {number}\n   */\n  static get ENC_PASSWORD() {\n    return 8;\n  }\n\n  /**\n   * Payload data encoded in ASCII\n   *\n   * @returns {number}\n   */\n  static get FORMAT_ASCII() {\n    return 16;\n  }\n\n  /**\n   * Payload data encoded in HEX\n   *\n   * @returns {number}\n   */\n  static get FORMAT_HEX() {\n    return 32;\n  }\n\n  /**\n   * Payload data encoded in Base58\n   *\n   * @returns {number}\n   */\n  static get FORMAT_BASE58() {\n    return 64;\n  }\n\n  /**\n   * E-PASA addressed by account name (not number).\n   *\n   * @returns {number}\n   */\n  static get ADDRESSED_BY_NAME() {\n    return 128;\n  }\n\n  /**\n   * The max payload length for PUBLIC payloads in ASCII form.\n   *\n   * @returns {number}\n   */\n  static get MAX_PUBLIC_ASCII() {\n    return 255;\n  }\n\n  /**\n   * The max payload length for ECIES payloads in ASCII form.\n   *\n   * @returns {number}\n   */\n  static get MAX_ECIES_ASCII() {\n    return 144;\n  }\n\n  /**\n   * The max payload length for AES payloads in ASCII form.\n   *\n   * @returns {number}\n   */\n  static get MAX_AES_ASCII() {\n    return 223;\n  }\n\n  /**\n   * The max payload length for PUBLIC payloads in HEX form.\n   *\n   * @returns {number}\n   */\n  static get MAX_PUBLIC_HEX() {\n    return 510;\n  }\n\n  /**\n   * The max payload length for ECIES payloads in HEX form.\n   *\n   * @returns {number}\n   */\n  static get MAX_ECIES_HEX() {\n    return 288;\n  }\n\n  /**\n   * The max payload length for AES payloads in HEX form.\n   *\n   * @returns {number}\n   */\n  static get MAX_AES_HEX() {\n    return 446;\n  }\n\n  /**\n   * The max payload length for PUBLIC payloads in BASE58 form.\n   *\n   * @returns {number}\n   */\n  static get MAX_PUBLIC_BASE58() {\n    return 348;\n  }\n\n  /**\n   * The max payload length for ECIES payloads in BASE58 form.\n   *\n   * @returns {number}\n   */\n  static get MAX_ECIES_BASE58() {\n    return 196;\n  }\n\n  /**\n   * The max payload length for AES payloads in BASE58 form.\n   *\n   * @returns {number}\n   */\n  static get MAX_AES_BASE58() {\n    return 304;\n  }\n\n  /**\n   * Constructor.\n   */\n  constructor() {\n    this[P_PAYLOAD_TYPE] = EPasa.NON_DETERMISTIC;\n  }\n\n  /**\n   * Sets the account number.\n   *\n   * @param accountNumber\n   */\n  set accountNumber(accountNumber) {\n    if (this[P_ACCOUNT_NAME] !== undefined) {\n      throw new Error('Either set the account name or the account number. Both is not possible.');\n    }\n\n    this[P_ACCOUNT_NUMBER] = new AccountNumber(accountNumber);\n  }\n\n  /**\n   * Gets the account number if set.\n   *\n   * @returns {null|AccountNumber}\n   */\n  get accountNumber() {\n    return this[P_ACCOUNT_NUMBER];\n  }\n\n  /**\n   * Gets the account name if set.\n   *\n   * @returns {null|AccountName}\n   */\n  get accountName() {\n    return this[P_ACCOUNT_NAME];\n  }\n\n  /**\n   * Gets a value indicating whether the epasa has an assigned format.\n   */\n  hasFormat() {\n    return (this.isFormatBase58() || this.isFormatAscii() || this.isFormatHex());\n  }\n\n  /**\n   * Gets a value indicating whether the epasa has an encryption assigned.\n   */\n  hasEncryption() {\n    return (this.isEncryptionPublic() || this.isEncryptionPassword() ||\n        this.isEncryptionSender() || this.isEncryptionReceiver());\n  }\n\n  /**\n   * Gets a value indicating the the payload format is base58.\n   *\n   * @returns {boolean}\n   */\n  isFormatBase58() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_BASE58) === EPasa.FORMAT_BASE58);\n  }\n\n  /**\n   * Gets a value indicating the the payload format is base58.\n   *\n   * @returns {boolean}\n   */\n  isFormatAscii() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_ASCII) === EPasa.FORMAT_ASCII);\n  }\n\n  /**\n   * Gets a value indicating the the payload format is base58.\n   *\n   * @returns {boolean}\n   */\n  isFormatHex() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_HEX) === EPasa.FORMAT_HEX);\n  }\n\n  /**\n   * Gets a value indicating that the encryption method is the receivers public key.\n   *\n   * @returns {boolean}\n   */\n  isEncryptionReceiver() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.ENC_RECEIVER) === EPasa.ENC_RECEIVER);\n  }\n\n  /**\n   * Gets a value indicating that the encryption method is the senders public key.\n   *\n   * @returns {boolean}\n   */\n  isEncryptionSender() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.ENC_SENDER) === EPasa.ENC_SENDER);\n  }\n\n  /**\n   * Gets a value indicating that the encryption method is aes.\n   *\n   * @returns {boolean}\n   */\n  isEncryptionPassword() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.ENC_PASSWORD) === EPasa.ENC_PASSWORD);\n  }\n\n  /**\n   * Gets a value indicating that there is no encryption (public payloads).\n   *\n   * @returns {boolean}\n   */\n  isEncryptionPublic() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.ENC_PUBLIC) === EPasa.ENC_PUBLIC);\n  }\n\n  /**\n   * Gets a value indicating that the encryption method is not set.\n   *\n   * @returns {boolean}\n   */\n  isNonDetermistic() {\n    return ((this[P_PAYLOAD_TYPE] & EPasa.NON_DETERMISTIC) === EPasa.NON_DETERMISTIC);\n  }\n\n  /**\n   * Gets the password of the epasa.\n   *\n   * @returns {null|String}\n   */\n  get password() {\n    return this[P_PASSWORD];\n  }\n\n  /**\n   * Gets the payload of the epasa.\n   *\n   * @returns {null|Payload}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the extended checksum.\n   *\n   * @returns {string}\n   */\n  get checksum() {\n    return EPasa.calculateChecksum(this.compile(true));\n  }\n\n  /**\n   * Sets the account name.\n   *\n   * @param {AccountName} accountName\n   */\n  set accountName(accountName) {\n    if (this[P_ACCOUNT_NUMBER] !== undefined) {\n      throw new Error('Either set the account name or the account number. Both is not possible.');\n    }\n\n    this[P_ACCOUNT_NAME] = new AccountName(accountName);\n    this[P_PAYLOAD_TYPE] |= EPasa.ADDRESSED_BY_NAME;\n  }\n\n  /**\n   * Sets the payload.\n   *\n   * @param {BC} payload\n   */\n  set payload(payload) {\n\n    if (!this.hasFormat()) {\n      this.format = EPasa.FORMAT_ASCII;\n    }\n\n    if ((!this.hasFormat() || !this.hasEncryption()) && payload.toString() !== '') {\n      throw new Error('EPasa payloads can only be set when the encryption and format is defined.');\n    }\n\n    if (!(payload instanceof BC)) {\n      if (this.isFormatHex()) {\n        payload = BC.fromHex(payload);\n      } else {\n        payload = BC.fromString(payload);\n      }\n    }\n\n    this.validatePayloadLength(payload);\n    this[P_PAYLOAD] = payload;\n\n    return this;\n  }\n\n  /**\n   * Vaidates the length of an unencrypted payload.\n   *\n   * @param {BC} payload\n   * @returns {boolean}\n   */\n  validatePayloadLength(payload) {\n    // TODO: Oh yes, wanted to be smart, but now im unreadable.\n    let payloadCompare = '';\n    let typeIdent = 'ASCII';\n\n    if (this.isFormatAscii()) {\n      payloadCompare = payload.toString();\n    } else if (this.isFormatHex()) {\n      payloadCompare = payload.toHex();\n      typeIdent = 'HEX';\n    } else if (this.isFormatBase58()) {\n      payloadCompare = payload.toString();\n      typeIdent = 'BASE58';\n    }\n\n    let maxIdent = 'PUBLIC';\n\n    if (this.isEncryptionReceiver() || this.isEncryptionSender()) {\n      maxIdent = 'ECIES';\n    } else if (this.isEncryptionPassword()) {\n      maxIdent = 'AES';\n    }\n\n    if (payloadCompare.length > EPasa[`MAX_${maxIdent}_${typeIdent}`]) {\n      throw new Error(\n        `Invalid payload length ${payloadCompare.length} for ${maxIdent}_${typeIdent}. \n        Max is ${EPasa[`MAX_${maxIdent}_${typeIdent}`]}`\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets the payload\n   *\n   * @param {String} password\n   */\n  set password(password) {\n    this[P_PASSWORD] = password;\n  }\n\n  /**\n   * Sets the payload\n   *\n   * @param {Number} encryption\n   */\n  set encryption(encryption) {\n    if (encryption === EPasa.ENC_PASSWORD && this[P_PASSWORD] === undefined) {\n      throw new Error('Set password before setting the password encryption flag.');\n    }\n\n    this[P_PAYLOAD_TYPE] |= encryption;\n  }\n\n  /**\n   * Sets the payload\n   *\n   * @param {Number} format\n   */\n  set format(format) {\n    this[P_PAYLOAD_TYPE] |= format;\n  }\n\n  /**\n   * Creates a new E-PASA string.\n   *\n   * @param {Boolean} omitChecksum\n   * @returns {string}\n   */\n  compile(omitChecksum = false) {\n    let data = {\n      account: null,\n      enc_marker_start: null,\n      enc_marker_end: null,\n      payload: ''\n    };\n\n    // determine and validate account info\n    if ((this[P_PAYLOAD_TYPE] & EPasa.ADDRESSED_BY_NAME) === EPasa.ADDRESSED_BY_NAME) {\n      data.account = this[P_ACCOUNT_NAME].toStringEscaped();\n    } else {\n      data.account = this[P_ACCOUNT_NUMBER].toString();\n    }\n\n    // if there is a payload, we need to format it\n    if (this[P_PAYLOAD] !== undefined) {\n      if ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_HEX) === EPasa.FORMAT_HEX) {\n        data.payload = `0x${this[P_PAYLOAD].toHex().toLowerCase()}`;\n      } else if ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_BASE58) === EPasa.FORMAT_BASE58) {\n        data.payload = new Base58(this[P_PAYLOAD].toString()).toString();\n      } else if ((this[P_PAYLOAD_TYPE] & EPasa.FORMAT_ASCII) === EPasa.FORMAT_ASCII) {\n        let asciiPayload = new Ascii(this[P_PAYLOAD].toString()).toStringEscaped();\n\n        if (asciiPayload.length > 0) {\n          data.payload = `\"${asciiPayload}\"`;\n        }\n      }\n\n      // now we need to determine the wanted encryption of the payload.\n      if ((this[P_PAYLOAD_TYPE] & EPasa.ENC_PUBLIC) === EPasa.ENC_PUBLIC) {\n        data.enc_marker_start = '[';\n        data.enc_marker_end = ']';\n      } else if ((this[P_PAYLOAD_TYPE] & EPasa.ENC_RECEIVER) === EPasa.ENC_RECEIVER) {\n        data.enc_marker_start = '(';\n        data.enc_marker_end = ')';\n      } else if ((this[P_PAYLOAD_TYPE] & EPasa.ENC_SENDER) === EPasa.ENC_SENDER) {\n        data.enc_marker_start = '<';\n        data.enc_marker_end = '>';\n      } else if ((this[P_PAYLOAD_TYPE] & EPasa.ENC_PASSWORD) === EPasa.ENC_PASSWORD) {\n        data.enc_marker_start = '{';\n        data.enc_marker_end = '}';\n        // append password\n        let password = new Ascii(this[P_PASSWORD]);\n\n        data.payload += `:${password.toStringEscaped()}`;\n      }\n    } else {\n      // no payload, no marker\n      data.payload = '';\n      data.enc_marker_start = '';\n      data.enc_marker_end = '';\n    }\n\n    // combine collected data\n    let epasa = `${data.account}${data.enc_marker_start}${data.payload}${data.enc_marker_end}`;\n\n    // no checksum\n    if (omitChecksum) {\n      return epasa;\n    }\n\n    // calculate the checksum\n    return `${epasa}:${EPasa.calculateChecksum(epasa)}`;\n  }\n\n  /**\n   * Calculates the checksum of the epasa.\n   *\n   * @param {String} ePasaString\n   * @returns {string}\n   */\n  static calculateChecksum(ePasaString) {\n    return BC.fromInt(MurmurHash3.x86.hash32(ePasaString) % 65536)\n      .switchEndian()\n      .toHex(true);\n  }\n}\n\nmodule.exports = EPasa;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst EPasa = require('./EPasa');\nconst Ascii = require('./Types/Ascii');\nconst BC = require('@sbx/common').BC;\nconst AccountName = require('@sbx/common').Types.AccountName;\n\n/**\n * A small parser for the EPASA format.\n */\nclass Parser {\n  /**\n   * Tries to parse an EPASA string.\n   *\n   * @param {String} ePasaString\n   * @returns {EPasa}\n   */\n  static parse(ePasaString) {\n    let state = {\n      inAccount: true,\n      inPayload: false,\n      inPassword: false,\n      inChecksum: false,\n      checksumIdentFound: false,\n      account: '',\n      payload: '',\n      format: null,\n      encryption: null,\n      checksum: '',\n      password: '',\n      asciiOpen: false,\n      asciiClosed: false,\n      encOpen: false,\n      encClosed: false\n    };\n\n    let position = 0;\n\n    /**\n         * Gets information of the current char in the loop as well as a flag\n         * identifiying an escaped character (position +2) and the next char.\n         *\n         * @param {Boolean} inAccount\n         * @param {Boolean} inPayload\n         * @returns {Object}\n         */\n    const next = function (inAccount, inPayload) {\n      // check if we are at the end\n      if (position > ePasaString.length - 1) {\n        return false;\n      }\n\n      // flag identifying an escaped character\n      let escaped = false;\n\n      if (inAccount) {\n        // account names have special escaping rules\n        escaped = AccountName.isEscape(ePasaString[position], ePasaString[position + 1]);\n      } else if (inPayload) {\n        // payload has special escaping rules\n        escaped = Ascii.isEscape(ePasaString[position], ePasaString[position + 1]);\n      }\n\n      // increment position, if escaped increment twice to skip the escape\n      position++;\n      if (escaped) {\n        position++;\n      }\n\n      return {\n        escaped,\n        char: ePasaString[position - 1],\n        next: ePasaString[position]\n      };\n    };\n\n    // current char info in the loop\n    let curr;\n\n    // loop the epasa string\n    while ((curr = next(state.inAccount, state.inPayload)) !== false) {\n\n      // we are in the account, now check for an payload open identifier\n      // and toggle the position\n      if (state.inAccount) {\n        if (curr.escaped === false && ['[', '(', '{', '<'].indexOf(curr.char) > -1) {\n          state.inAccount = false;\n          state.inPayload = true;\n        }\n      }\n\n      // if we are in the payload, no encryption was determined\n      // and the character is an encryption type open tag\n      if (state.encryption === null && curr.escaped === false && state.inPayload &&\n                ['[', '(', '{', '<'].indexOf(curr.char) > -1\n      ) {\n        if (curr.char === '[') {\n          state.encryption = EPasa.ENC_PUBLIC;\n        } else if (curr.char === '(') {\n          state.encryption = EPasa.ENC_RECEIVER;\n        } else if (curr.char === '<') {\n          state.encryption = EPasa.ENC_SENDER;\n        } else if (curr.char === '{') {\n          state.encryption = EPasa.ENC_PASSWORD;\n        }\n\n        state.encOpen = curr.char;\n        // we omit the character\n        continue;\n      }\n\n      // when we are in the payload or the account and find a \":\" it is an\n      // password identifier but only if its a password encryption, otherwise it identifies the\n      // checksum\n      if (curr.escaped === false && (state.inPayload || state.inAccount) && curr.char === ':') {\n        if (state.encryption === EPasa.ENC_PASSWORD) {\n          state.inPassword = true;\n        } else {\n          state.inPassword = false;\n          state.inChecksum = true;\n          state.inAccount = false;\n          state.checksumIdentFound = true;\n        }\n\n        // we ignore it then\n        continue;\n      }\n\n      // determine the format, a \" identifies ascii, 0x hex, otherwise its probably base58\n      if (curr.escaped === false && curr.char === '\"' && state.inPayload && state.format === null) {\n        state.format = EPasa.FORMAT_ASCII;\n        state.asciiOpen = true;\n        continue;\n      } else if (curr.escaped === false && curr.char === '0' && curr.next === 'x' &&\n                state.inPayload && state.format === null) {\n        state.format = EPasa.FORMAT_HEX;\n      } else if (curr.escaped === false && state.inPayload && state.format === null) {\n        state.format = EPasa.FORMAT_BASE58;\n      } else if (curr.escaped === false && curr.char === '\"' && state.inPayload &&\n                state.format === EPasa.FORMAT_ASCII) {\n        state.asciiClosed = true;\n        continue;\n      }\n\n      // check closing encryption\n      if (curr.escaped === false && state.inPayload && [']', ')', '}', '>'].indexOf(curr.char) > -1) {\n        state.inPayload = false;\n        state.inChecksum = true;\n        state.encClosed = curr.char;\n        // omit\n        continue;\n      }\n\n      // append to account\n      if (state.inAccount) {\n        state.account += curr.char;\n        continue;\n      }\n\n      // if (state.inPayload && curr.escaped === false && curr.char === ':') {\n      //  state.inPassword = true;\n      // }\n\n      // payload\n      if (state.inPayload && !state.inPassword) {\n        state.payload += curr.char;\n      }\n      // password\n      if (state.inPayload && state.inPassword) {\n        state.password += curr.char;\n      }\n\n      // checksum\n      if (state.inChecksum && curr.char !== ':') {\n        state.checksum += curr.char;\n      }\n    }\n\n    if (state.asciiOpen && !state.asciiClosed) {\n      throw new Error('Invalid EPasa - missing closing ascii');\n    }\n\n    if (state.encOpen !== false && state.encClosed === false) {\n      throw new Error('Invalid EPasa - missing closing encryption identifier');\n    }\n\n    if ((state.encOpen === '[' && state.encClosed !== ']') ||\n            (state.encOpen === '(' && state.encClosed !== ')') ||\n            (state.encOpen === '<' && state.encClosed !== '>') ||\n            (state.encOpen === '{' && state.encClosed !== '}')) {\n      throw new Error('Invalid EPasa - wrong closing encryption identifier');\n    }\n\n    if (state.inChecksum && state.checksum.length < 4 && state.checksumIdentFound) {\n      throw new Error('Invalid EPasa - missing or too short checksum');\n    }\n\n    if (state.inChecksum && state.checksum.length > 4 && state.checksumIdentFound) {\n      throw new Error('Invalid EPasa - missing or too long checksum');\n    }\n\n    if (state.format === EPasa.FORMAT_HEX && state.payload.substr(2).length > 0 &&\n            /^[0-9a-f]+$/.test(state.payload.substr(2)) === false) {\n      throw new Error('Invalid EPasa - only lowercase hex allowed.');\n    }\n\n    // create a new epasa and trigger the validation\n    let epasa = new EPasa();\n\n    try {\n      epasa.accountNumber = state.account;\n    } catch (exAccNumber) {\n      try {\n        epasa.accountName = state.account;\n      } catch (exAccName) {\n        throw new Error(\n          `Bad account for epasa: ${exAccNumber.message} - ${exAccName.message}`\n        );\n      }\n    }\n\n    if (state.encryption === EPasa.ENC_PASSWORD) {\n      epasa.password = state.password;\n    }\n\n    if (state.format === EPasa.FORMAT_BASE58 && state.payload !== '') {\n      epasa.format = state.format;\n    }\n    epasa.encryption = state.encryption;\n\n    if (state.format === EPasa.FORMAT_HEX) {\n      epasa.payload = BC.fromHex(state.payload.substr(2));\n    } else if (state.format !== null) {\n      epasa.payload = BC.fromString(state.payload);\n    }\n\n    // validate checksum\n    if (state.checksum !== '' && EPasa.calculateChecksum(epasa.compile(true)) !== state.checksum) {\n      throw new Error('Invalid checksum provided');\n    }\n\n    return epasa;\n  }\n}\n\nmodule.exports = Parser;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Util = require('@sbx/common').Util;\n\nconst P_VALUE = Symbol('value');\n\n// the list of characters to escape.\nconst CHARS_TO_ESCAPE = '\"():<>[\\\\]{}'.split('');\nconst REGEX_TO_ESCAPE = `(${CHARS_TO_ESCAPE.map(c => Util.escapeRegex(c)).join('|')})`;\n\n/**\n * Small class that holds, validated and outputs an EPasa ascii string.\n */\nclass Ascii {\n  /**\n   * Constructor\n   *\n   * @param {String|Ascii} value\n   */\n  constructor(value) {\n    if (value instanceof Ascii) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = Ascii.validate(value);\n    }\n  }\n\n  /**\n   * Validates an ascii string.\n   *\n   * @param {String} value\n   * @return {String}\n   */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (value.charCodeAt(pos) < 32 || value.charCodeAt(pos) > 126) {\n        throw new Error(`Invalid ascii - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value itself.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n\n  /**\n   * Gets an escaped string representation for EPasa usage.\n   *\n   * @returns {*}\n   */\n  toStringEscaped() {\n    return this[P_VALUE].replace(new RegExp(REGEX_TO_ESCAPE, 'gm'), '\\\\$1');\n  }\n\n  /**\n   * Gets a value indicating whether the current char c1 is an escape modifier\n   * and the second is in the list of chars to escape.\n   *\n   * @param {String} c1\n   * @param {String} c2\n   * @returns {boolean}\n   */\n  static isEscape(c1, c2) {\n    return c1 === '\\\\' && CHARS_TO_ESCAPE.indexOf(c2) > -1;\n  }\n}\n\nmodule.exports = Ascii;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_VALUE = Symbol('value');\n\nconst ALLOWED = '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split('');\n\n/**\n * Small class to initialize and validate a base58 value.\n */\nclass Base58 {\n  /**\n   * Constructor\n   * @param {String|AccountName} value\n   */\n  constructor(value) {\n    if (value instanceof Base58) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = Base58.validate(value);\n    }\n  }\n\n  /**\n   * Validates a string.\n   *\n   * @param {String} value\n   * @return {String}\n   */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (ALLOWED.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid base58 - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n}\n\nmodule.exports = Base58;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__sbx_common__;"],"sourceRoot":""}