{"version":3,"sources":["webpack://@pascalcoin-sbx/json-rpc/webpack/universalModuleDefinition","webpack://@pascalcoin-sbx/json-rpc/webpack/bootstrap","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base-x/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base64-js/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bn.js/lib/bn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bs58/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/buffer/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/ieee754/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/isarray/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/client/browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/generateRequest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_Symbol.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_apply.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_arrayLikeKeys.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_assignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseAssignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseGetTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseSetToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseTimes.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseUnary.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_copyObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_coreJsData.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_createAssigner.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_defineProperty.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_freeGlobal.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getRawTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIndex.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIterateeCall.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isMasked.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isPrototype.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nativeKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nodeUtil.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_objectToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_overRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_root.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_setToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_shortOut.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_toSource.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/assignIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/constant.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/eq.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/extend.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/identity.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArrayLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isBuffer.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isFunction.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isLength.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObjectLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isUndefined.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/keysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/negate.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/stubFalse.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/base.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha256.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha512.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/node-fetch/browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/safe-buffer/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/bytesToUuid.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/rng-browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/v4.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/global.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/module.js","webpack://@pascalcoin-sbx/json-rpc/../common/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/BC.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Base58.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/AbstractType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/CompositeType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/AbstractInt.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesFixedLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int16.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int32.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int64.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int8.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Decissive.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Currency.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/NOperation.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OpType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Repeating.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Endian.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/PascalCoinInfo.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Sha.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Currency.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/KeyPair.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Util.js","webpack://@pascalcoin-sbx/json-rpc/./index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/BaseAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/OperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/PagedAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/SignOperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Caller.js","webpack://@pascalcoin-sbx/json-rpc/./src/Client.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ConnectionError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ResultError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Executor.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Abstract.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Account.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Block.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Changer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Connection.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetProtocol.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetStats.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeServer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeStatus.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Operation.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Receiver.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Sender.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/SignedMessage.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/WalletPublicKey.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/index.js","webpack://@pascalcoin-sbx/json-rpc/buffer (ignored)"],"names":["module","exports","Base58","require","BC","Endian","PascalCoinInfo","Sha","Util","Types","Coding","P_BUFFER","Symbol","constructor","buffer","Buffer","from","data","stringType","Uint8Array","fromHex","e","fromString","empty","hex","strict","length","Error","test","str","fromInt","int","nBytes","parseInt","toString","instance","prepend","repeat","toBinary","toHex","lowerCase","toLowerCase","toUpperCase","toInt","hexLength","slice","start","end","concat","bytes","reduce","prev","curr","Object","append","equals","bc","compare","readInt8","offset","unsigned","readInt16","endian","detect","method","readInt32","fromInt8","value","buf","allocUnsafe","fromInt16","fromInt32","split","size","pos","splitted","push","bs58","encode","decode","P_ID","P_FIXED_VALUE","P_HAS_FIXED_VALUE","P_DESCRIPTION","AbstractType","id","hasFixedValue","fixedValue","encodedSize","decodeFromBytes","options","all","encodeToBytes","withFixedValue","description","undefined","canDecode","P_SUBTYPES","P_SIZE_ENCODED","CompositeType","subTypes","addSubType","field","toArray","obj","forEach","subType","values","objOrArray","idx","subTypeValue","Array","isArray","P_ENDIAN","P_UNSIGNED","AbstractInt","P_SIZE","BytesFixedLength","Int8","Int16","Int32","BytesWithoutLength","P_LENGTH_FIELD","P_BYTES_FIELD","P_HAS_LEADING_ZB","BytesWithLength","byteSize","lengthId","lengthDesc","LITTLE_ENDIAN","hasLeadingZeroByte","lengthField","encoded","BN","validate64Bit","isUnsigned","isNeg","gt","lt","Int64","fromTwos","toTwos","toBuffer","StringWithoutLength","P_STRING_FIELD","StringWithLength","P_SUBTYPE_RESOLVER","P_MARKER_FIELD","Decissive","markerField","subTypeResolver","AccountNameType","AccountName","AccountNumberType","AccountNumber","account","CurrencyType","Currency","fromMolina","bn","CurveType","Curve","PrivateKeyType","PrivateKey","decoded","key","curve","PublicKeyType","PublicKey","omitXYLenghts","x","y","encodeToBase58","publicKey","prefix","aux","sha256","suffix","raw","decodeFromBase58","base58","NOperation","P_INT_TYPE","OpType","intType","BytesWithFixedLength","OperationHashType","OperationHash","block","nOperation","md160","P_REPEAT_LIMIT","P_REPEAT_MARKER","P_TYPE","Repeating","type","repeatLimit","repeatMarker","result","limit","counter","arr","item","repeatingType","Core","Pascal","Keys","detected","BIG_ENDIAN","b","ArrayBuffer","a","Uint32Array","c","isLittleEndian","isBigEndian","MIN_FEE","PIP_0010","INFLATION_REDUCTION","isInflationReduction","PIP_0009","RANDOM_HASH","isRandomHash","PIP_0011","DEVELOPER_REWARD","isDeveloperReward","MAX_PAYLOAD_LENGTH","sha512","buffers","hasher","SHA256","update","digest","SHA512","P_VALUE","CHARS_TO_ESCAPE","REGEX_TO_ESCAPE","map","escapeRegex","join","ALLOWED_ALL","ALLOWED_START","validate","indexOf","toStringEscaped","replace","RegExp","isEscape","c1","c2","P_ACCOUNT","P_CHECKSUM","P_CREATED_IN_BLOCK","P_IS_FOUNDATION_REWARD","s","isNaN","calculateChecksum","Math","floor","checksum","createdInBlock","isFoundationReward","accountNumber","toFixed","base","pow","dm","divmod","mod","m","div","isNegative","substr","pasc","isBN","ten","negative","substring","comps","whole","fraction","molina","mul","add","neg","isVague","toStringOpt","decimals","toMolina","addValue","val","sub","subValue","toPositive","eq","lteq","lte","gteq","gte","serialize","pascal","CURVES","XYL_PUBKEYS","L_PRIVKEYS","ID","NAME","CN_SECP256K1","CN_P384","CN_SECT283K1","CN_P521","CI_SECP256K1","CI_P384","CI_SECT283K1","CI_P521","keys","name","getDefaultCurve","xylPublicKey","xOrY","lPrivateKey","supported","P_PRIVATE_KEY","P_PUBLIC_KEY","P_CURVE","KeyPair","privateKey","P_KEY","privateKeyLength","ec","P_X","P_XL","P_Y","P_YL","yl","xl","ecdh","P_BLOCK","P_N_OPERATION","P_MD160","opHash","ignoreBlock","blockResult","string","Client","Executor","Caller","Actions","Errors","P_PARAMS","P_METHOD","P_EXECUTOR","P_DESTINATION_TYPE","P_RETURNS_ARRAY","BaseAction","params","executor","DestinationType","returnsArray","destinationType","changeParam","execute","isValid","OperationAction","fee","payload","payload_method","withPayload","payloadMethod","password","pubkey","pwd","withFee","withMinFee","lastKnownBlock","PagedAction","max","executeAll","restEach","restSeconds","restCallback","report","transformCallback","executeAllReport","transform","reporter","reports","Promise","resolve","setTimeout","SignOperationAction","last_n_operation","rawoperations","withLastNOperation","lastNOperation","withRawOperations","jaysonBrowserClient","fetch","ConnectionError","ResultError","P_CLIENT","host","request","callback","body","headers","then","res","text","catch","err","call","reject","error","code","message","RPCCaller","Account","Block","SignedMessage","NodeStatus","Operation","Sender","Receiver","Changer","Connection","WalletPublicKey","factory","rpcHostAddress","addNode","nodes","Number","getAccount","findAccounts","onlyAccountsForSale","exact","minBalance","maxBalance","only_accounts_for_sale","min_balance","max_balance","getWalletAccounts","getWalletAccountsCount","getWalletCoins","getWalletPubKeys","getWalletPubKey","inportPubKey","getBlock","getBlocks","last","getBlockCount","getBlockOperation","opblock","getBlockOperations","getAccountOperations","depth","startblock","getPendings","getPendingsCount","decodeOpHash","ophash","findOperation","findNOperation","n_operation","findNOperations","nOperationMin","nOperationMax","n_operation_min","n_operation_max","sendTo","sender","target","amount","signSendTo","senderPubkey","targetPubkey","sender_pubkey","target_pubkey","changeKey","newPubkey","accountSigner","new_pubkey","account_signer","changeKeys","accounts","acc","signChangeKey","oldPubkey","old_pubkey","listAccountForSale","accountTarget","sellerAccount","lockedUntilBlock","price","account_target","seller_account","locked_until_block","signListAccountForSale","signerPubkey","signer_pubkey","DelistAccountForSale","signDelistAccountForSale","buyAccount","buyerAccount","accountToPurchase","buyer_account","account_to_purchase","signBuyAccount","changeAccountInfo","newName","newType","new_name","new_type","signChangeAccountInfo","signMessage","verifySign","signature","operationsDelete","index","operationsInfo","executeOperations","nodeStatus","encodePubKey","ecNid","ec_nid","decodePubKey","payloadEncrypt","payloadDecrypt","pwds","getConnections","addNewKey","lock","Boolean","unlock","setWalletPassword","stopNode","startNode","cleanBlackList","nodeIPStats","multiOperationAddOperation","autoNOperation","senders","receivers","changesinfo","auto_n_operation","sen","rec","chng","multiOperationSignOffline","accountsAndKeys","accounts_and_keys","multiOperationSignOnline","P_ORIGINAL","P_MESSAGE","originalFetchError","original","P_CODE","P_CALLER","OperationHashCoder","PublicKeyCoder","publicKeyCoder","opHashCoder","transformRpcParams","newParams","newField","senderItem","o","receiverItem","changerItem","newPublicKey","new_b58_pubkey","transformRpcResult","caller","action","response","v","P_INITIALIZATION_DATA","Abstract","initializationData","new","TypeError","__initializationData","pkCoder","P_ENC_PUBKEY","P_BALANCE","P_UPDATED_B","P_STATE","P_NAME","P_LOCKED_UNTIL_BLOCK","P_PRICE","P_SELLER_ACCOUNT","P_PRIVATE_SALE","P_NEW_ENC_PUBKEY","STATE_LISTED","STATE_NORMAL","enc_pubkey","balance","updated_b","state","private_sale","new_enc_pubkey","updatedB","privateSale","isForSale","P_REWARD","P_FEE","P_VER","P_VER_A","P_TIMESTAMP","P_TARGET","P_NONCE","P_PAYLOAD","P_SBH","P_OPH","P_POW","P_HASHRATEKHS","P_MATURATION","P_OPERATIONS","reward","ver","ver_a","timestamp","nonce","sbh","oph","hashratekhs","maturation","operations","verA","createdAccounts","P_NEW_NAME","P_NEW_TYPE","P_ACCOUNT_PRICE","account_price","accountPrice","P_RECV","P_TIMEDIFF","P_NETVER_A","P_SECS","P_SERVER","P_IP","P_NETVER","P_SENT","P_APPVER","P_PORT","recv","timediff","netver_a","secs","server","ip","netver","sent","appver","port","timeDiff","netVerA","netVer","appVer","NetProtocol","P_BRECEIVED","P_SERVERS_T","P_TSERVERS","P_TOTAL","P_BSEND","P_SERVERS","P_CLIENTS","P_ACTIVE","P_TCLIENTS","NetStats","breceived","servers_t","tservers","total","bsend","servers","clients","active","tclients","serversT","P_LASTCON","P_ATTEMPTS","NodeServer","lastcon","attempts","P_READY","P_READY_S","P_STATUS_S","P_LOCKED","P_BLOCKS","P_NODESERVERS","P_NETSTATS","P_VERSION","P_NETPROTOCOL","P_OPENSSL","ready","ready_s","status_s","locked","blocks","version","openssl","netprotocol","netstats","nodeservers","ns","readyS","statusS","P_VALID","P_ERRORS","P_TIME","P_OPBLOCK","P_OPTYPE","P_OPTXT","P_AMOUNT","P_OPHASH","P_OLD_OPHASH","P_SUBTYPE","P_SIGNER_ACCOUNT","P_CHANGERS","P_SENDERS","P_RECEIVERS","BLOCKCHAIN_REWARD","TRANSACTION","CHANGE_KEY","RECOVER_FUNDS","LIST_FOR_SALE","DELIST","BUY","CHANGE_KEY_ACCOUNT","CHANGE_ACCOUNT_INFO","MULTI_OPERATION","DATA","SUBTYPE_MINER","SUBTYPE_DEVELOPER","SUBTYPE_TX_SENDER","SUBTYPE_TX_RECEIVER","SUBTYPE_TX_BUY_BUYER","SUBTYPE_TX_BUY_TARGET","SUBTYPE_TX_BUY_SELLER","SUBTYPE_CHANGE_KEY","SUBTYPE_RECOVER","SUBTYPE_LIST_PUBLIC","SUBTYPE_LIST_PRIVATE","SUBTYPE_DELIST","SUBTYPE_BUY_BUYER","SUBTYPE_BUY_TARGET","SUBTYPE_BUY_SELLER","SUBTYPE_CHANGE_KEY_SIGNED","SUBTYPE_CHANGE_ACCOUNT_INFO","SUBTYPE_MULTI_GLOBAL","SUBTYPE_MULTI_ACCOUNT_INFO","SUBTYPE_DATA_GLOBAL","SUBTYPE_DATA_SENDER","SUBTYPE_DATA_SIGNER","SUBTYPE_DATA_RECEIVER","valid","errors","time","optype","optxt","old_ophash","subtype","signer_account","r","changers","opBlock","opType","opTxt","oldOpHash","signerAccount","isBlockchainReward","isTransaction","isChangeKey","isRecoverFunds","isListForSale","isDelist","isBuy","isChangeKeyAccount","isChangeAccountInfo","isMultiOperation","isData","isPending","isZeroFeeError","P_DIGEST","P_PUBKEY","P_SIGNATURE","b58_pubkey","P_CAN_USE","P_B58_PUBKEY","P_EC_NID","can_use","canUse","base58PublicKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,4DAAa;;AAEpC;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,4CAA4C;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,WAAW;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,4CAA4C;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrJY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,eAAQ;AAC7B,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;;AAEA,kCAAkC;AAClC,sCAAsC;AACtC;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,QAAQ;AACvC;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,MAA6B;;;;;;;;;;;;;;ACl2GhC,YAAY,mBAAO,CAAC,kDAAQ;AAC5B;;AAEA;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,wDAAW;AAChC,cAAc,mBAAO,CAAC,oDAAS;AAC/B,cAAc,mBAAO,CAAC,oDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AA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CnC,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9CA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,eAAe,mBAAO,CAAC,yDAAY;AACnC,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3DA,eAAe,mBAAO,CAAC,yDAAY;AACnC,kBAAkB,mBAAO,CAAC,iEAAgB;AAC1C,mBAAmB,mBAAO,CAAC,mEAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChCA,eAAe,mBAAO,CAAC,yDAAY;AACnC,eAAe,mBAAO,CAAC,2DAAa;AACpC,kBAAkB,mBAAO,CAAC,iEAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChBA,eAAe,mBAAO,CAAC,yDAAY;AACnC,qBAAqB,mBAAO,CAAC,uEAAmB;AAChD,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACbA,kBAAkB,mBAAO,CAAC,iEAAgB;AAC1C,sBAAsB,mBAAO,CAAC,yEAAoB;;AAElD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,OAAO,WAAW;AAC7B,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvCA,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;;ACLA,eAAe,mBAAO,CAAC,2DAAa;AACpC,qBAAqB,mBAAO,CAAC,uEAAmB;;AAEhD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;ACpCA,gBAAgB,mBAAO,CAAC,6DAAc;;AAEtC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;ACVA;AACA;;AAEA;;;;;;;;;;;;;;ACHA,mBAAmB,mBAAO,CAAC,mEAAiB;AAC5C,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChBA,aAAa,mBAAO,CAAC,uDAAW;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACZA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxBA,SAAS,mBAAO,CAAC,6CAAM;AACvB,kBAAkB,mBAAO,CAAC,+DAAe;AACzC,cAAc,mBAAO,CAAC,yDAAY;AAClC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7BA,iBAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnBA,+DAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrBA,YAAY,mBAAO,CAAC,qDAAU;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnCA,iBAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACRA,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;;AAEA;;;;;;;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,qBAAqB,mBAAO,CAAC,uEAAmB;AAChD,aAAa,mBAAO,CAAC,qDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,UAAU;AACV;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpCA,iBAAiB,mBAAO,CAAC,yDAAY;;;;;;;;;;;;;ACArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpBA,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,6DAAc;AACvC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AChCA,yDAAW,mBAAO,CAAC,mDAAS;AAC5B,gBAAgB,mBAAO,CAAC,2DAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACrCA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5BA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,cAAc,mBAAO,CAAC,uDAAW;AACjC,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7BA,uBAAuB,mBAAO,CAAC,2EAAqB;AACpD,gBAAgB,mBAAO,CAAC,6DAAc;AACtC,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrBA,oBAAoB,mBAAO,CAAC,qEAAkB;AAC9C,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,kBAAkB,mBAAO,CAAC,+DAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,wBAAwB,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA,2CAA2C,sBAAsB,EAAE;AACnE;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC,2CAA2C;;;;;;;;;;;;;;ACxW/B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACvMa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;AChSa;;AAEb;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD,qCAAqC,eAAe;AACpD,qCAAqC,eAAe;AACpD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mC;;;;;;;;;;;;ACtBA;AACA,aAAa,mBAAO,CAAC,kDAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,6DAAW;AAC7B,kBAAkB,mBAAO,CAAC,qEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;ACrBAA,MAAM,CAACC,OAAP,GAAiB;AACfC,QAAM,EAAEC,mBAAO,CAAC,6CAAD,CADA;AAEfC,IAAE,EAAED,mBAAO,CAAC,qCAAD,CAFI;AAGfE,QAAM,EAAEF,mBAAO,CAAC,6CAAD,CAHA;AAIfG,gBAAc,EAAEH,mBAAO,CAAC,6DAAD,CAJR;AAKfI,KAAG,EAAEJ,mBAAO,CAAC,u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","file":"@pascalcoin-sbx/json-rpc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@pascalcoin-sbx/json-rpc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@pascalcoin-sbx/json-rpc\"] = factory();\n\telse\n\t\troot[\"@pascalcoin-sbx/json-rpc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nconst Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n\n  const BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n    BASE_MAP[xc] = i\n  }\n\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n\n  function encode (source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n    if (source.length === 0) return ''\n\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (256 * b58[it]) >>> 0\n        b58[it] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      pbegin++\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length\n    while (it !== size && b58[it] === 0) {\n      it++\n    }\n\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n\n    return str\n  }\n\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String')\n    if (source.length === 0) return Buffer.alloc(0)\n\n    let psz = 0\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return\n\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n\n      // Invalid character\n      if (carry === 255) return\n\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (BASE * b256[it]) >>> 0\n        b256[it] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      psz++\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return\n\n    // Skip leading zeroes in b256.\n    let it = size - length\n    while (it !== size && b256[it] === 0) {\n      it++\n    }\n\n    const vch = Buffer.allocUnsafe(zeroes + (size - it))\n    vch.fill(0x00, 0, zeroes)\n\n    let j = zeroes\n    while (it !== size) {\n      vch[j++] = b256[it++]\n    }\n\n    return vch\n  }\n\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","module.exports = require('./assignIn');\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief mipher interface, convert and util functions\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n///////////////////////////////////////////////////////////////////////////////\r\n// V E R S I O N\r\nexports.version = '1.1.4';\r\n///////////////////////////////////////////////////////////////////////////////\r\n// C O N V E R T E R\r\nvar Convert;\r\n(function (Convert) {\r\n    /**\r\n     * Convert a string (UTF-8 encoded) to a byte array\r\n     * @param {String} str UTF-8 encoded string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function str2bin(str) {\r\n        str = str.replace(/\\r\\n/g, '\\n');\r\n        var bin = new Uint8Array(str.length * 3), p = 0;\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if (c < 128) {\r\n                bin[p++] = c;\r\n            }\r\n            else if (c < 2048) {\r\n                bin[p++] = (c >>> 6) | 192;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n            else {\r\n                bin[p++] = (c >>> 12) | 224;\r\n                bin[p++] = ((c >>> 6) & 63) | 128;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n        }\r\n        return bin.subarray(0, p);\r\n    }\r\n    Convert.str2bin = str2bin;\r\n    /**\r\n     * Convert a hex string to byte array\r\n     * @param {String} hex Hex string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function hex2bin(hex) {\r\n        if (hex.indexOf('0x') === 0 || hex.indexOf('0X') === 0) {\r\n            hex = hex.substr(2);\r\n        }\r\n        if (hex.length % 2) {\r\n            hex += '0';\r\n        }\r\n        var bin = new Uint8Array(hex.length >>> 1);\r\n        for (var i = 0, len = hex.length >>> 1; i < len; i++) {\r\n            bin[i] = parseInt(hex.substr(i << 1, 2), 16);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.hex2bin = hex2bin;\r\n    /**\r\n     * Convert a 32 bit integer number to a 4 byte array, LSB is first\r\n     * @param {Number} integer Integer number\r\n     * @return {Uint8Array} bin 4 byte array\r\n     */\r\n    function int2bin(integer) {\r\n        var bin = new Uint8Array(4);\r\n        bin[0] = (integer) & 0xff;\r\n        bin[1] = (integer >>> 8) & 0xff;\r\n        bin[2] = (integer >>> 16) & 0xff;\r\n        bin[3] = (integer >>> 24) & 0xff;\r\n        return bin;\r\n    }\r\n    Convert.int2bin = int2bin;\r\n    /**\r\n     * Convert a number to a 8 byte array, LSB is first\r\n     * @param {Number} value Long number\r\n     * @return {Uint8Array} bin 8 byte array\r\n     */\r\n    function number2bin(value) {\r\n        var bin = new Uint8Array(8);\r\n        if (Math.floor(value) === value) {\r\n            var TWO_PWR_32 = 4294967296;\r\n            var lo = (value % TWO_PWR_32) | 0, hi = (value / TWO_PWR_32) | 0;\r\n            if (value < 0) {\r\n                lo = ~(-value % TWO_PWR_32) | 0, hi = ~(-value / TWO_PWR_32) | 0;\r\n                lo = (lo + 1) & 0xffffffff;\r\n                if (!lo)\r\n                    hi++;\r\n            }\r\n            var i = 0;\r\n            bin[i++] = (lo & 0xff);\r\n            bin[i++] = (lo >>> 8) & 0xff;\r\n            bin[i++] = (lo >>> 16) & 0xff;\r\n            bin[i++] = (lo >>> 24) & 0xff;\r\n            bin[i++] = (hi & 0xff);\r\n            bin[i++] = (hi >>> 8) & 0xff;\r\n            bin[i++] = (hi >>> 16) & 0xff;\r\n            bin[i] = (hi >>> 24) & 0xff;\r\n        }\r\n        else {\r\n            var f = new Float64Array([value]);\r\n            var d = new Uint8Array(f.buffer);\r\n            bin.set(d);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.number2bin = number2bin;\r\n    /**\r\n     * Convert a base64/base64url string to a byte array\r\n     * @param {String} base64 Base64/Base64url encoded string\r\n     * @return {Uint8Array} Byte array or undefined if error\r\n     */\r\n    function base642bin(base64) {\r\n        // remove base64url encoding\r\n        base64 = base64.replace(/-/g, '+').replace(/_/g, '/').replace(/%3d/g, '=');\r\n        // length must be multiple of 4\r\n        if (base64.length % 4 !== 0)\r\n            return;\r\n        var strlen = base64.length / 4 * 3;\r\n        if (base64.charAt(base64.length - 1) === '=')\r\n            strlen--;\r\n        if (base64.charAt(base64.length - 2) === '=')\r\n            strlen--;\r\n        if (typeof atob !== 'undefined') {\r\n            return new Uint8Array(atob(base64).split('').map(function (c) { return c.charCodeAt(0); }));\r\n        }\r\n        else {\r\n            // atob not available\r\n            var decodingTable = new Int8Array([\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, 62, -1, 62, -1, 63,\r\n                52, 53, 54, 55, 56, 57, 58, 59,\r\n                60, 61, -1, -1, -1, -2, -1, -1,\r\n                -1, 0, 1, 2, 3, 4, 5, 6,\r\n                7, 8, 9, 10, 11, 12, 13, 14,\r\n                15, 16, 17, 18, 19, 20, 21, 22,\r\n                23, 24, 25, -1, -1, -1, -1, 63,\r\n                -1, 26, 27, 28, 29, 30, 31, 32,\r\n                33, 34, 35, 36, 37, 38, 39, 40,\r\n                41, 42, 43, 44, 45, 46, 47, 48,\r\n                49, 50, 51, -1, -1, -1, -1, -1 // x y z .  . . . .\r\n            ]);\r\n            var p = 0, bin = new Uint8Array(strlen);\r\n            for (var i = 0, len = base64.length; i < len;) {\r\n                var sextet_a = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_b = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_c = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_d = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var triple = (sextet_a << 18) +\r\n                    (sextet_b << 12) +\r\n                    (sextet_c << 6) +\r\n                    (sextet_d);\r\n                if (base64.charAt(i - 3) !== '=')\r\n                    bin[p++] = (triple >>> 16) & 0xff;\r\n                if (base64.charAt(i - 2) !== '=')\r\n                    bin[p++] = (triple >>> 8) & 0xff;\r\n                if (base64.charAt(i - 1) !== '=')\r\n                    bin[p++] = (triple) & 0xff;\r\n            }\r\n            return bin;\r\n        }\r\n    }\r\n    Convert.base642bin = base642bin;\r\n    /**\r\n     * Convert a byte array to hex string\r\n     * @param {Uint8Array} bin The input byte array\r\n     * @param {Boolean} uppercase True for upper case hex numbers\r\n     * @return {String} Hex sting\r\n     */\r\n    function bin2hex(bin, uppercase) {\r\n        if (uppercase === void 0) { uppercase = false; }\r\n        var hex = uppercase ? '0123456789ABCDEF' : '0123456789abcdef';\r\n        var str = '';\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            str += hex.charAt((bin[i] >>> 4) & 0x0f) + hex.charAt(bin[i] & 0x0f);\r\n            // str += bin[i].toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2hex = bin2hex;\r\n    /**\r\n     * Convert a byte array to string (UTF-8 dedode)\r\n     * @param {Uint8Array} bin UTF-8 text given as array of bytes\r\n     * @return {String} UTF-8 Text string\r\n     */\r\n    function bin2str(bin) {\r\n        var str = '', len = bin.length, i = 0, c, c2, c3;\r\n        while (i < len) {\r\n            c = bin[i];\r\n            if (c < 128) {\r\n                str += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                c2 = bin[i + 1];\r\n                str += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = bin[i + 1];\r\n                c3 = bin[i + 2];\r\n                str += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2str = bin2str;\r\n    /**\r\n     * Convert a byte value array in a long value array\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @return {Uint32Array} bin values in long format\r\n     */\r\n    function bin2longbin(bin) {\r\n        var longbin = new Uint32Array(bin.length >>> 2);\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            longbin[i >>> 2] |= (bin[i] << ((i % 4) << 3));\r\n        }\r\n        return longbin;\r\n    }\r\n    Convert.bin2longbin = bin2longbin;\r\n    /**\r\n     * Convert a 8 byte (int64) array into a number\r\n     * @param {Uint8Array} bin Array of 8 bytes (int64), LSB is [0], MSB is [7]\r\n     * @return {Number} int64 value as number\r\n     */\r\n    function bin2number(bin) {\r\n        var TWO_PWR_32 = 4294967296;\r\n        var i = 0;\r\n        var lo = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i++] << 24;\r\n        var hi = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i] << 24;\r\n        return hi * TWO_PWR_32 + ((lo >= 0) ? lo : TWO_PWR_32 + lo);\r\n    }\r\n    Convert.bin2number = bin2number;\r\n    /**\r\n     * Convert byte array to base64/base64url string\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @param {Boolean} url True if the string should be URL encoded (base64url encoding)\r\n     * @return {String} Base64 encoded string\r\n     */\r\n    function bin2base64(bin, url) {\r\n        if (url === void 0) { url = false; }\r\n        if (typeof btoa !== 'undefined') {\r\n            return url ? btoa(String.fromCharCode.apply(null, bin)).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '%3d') :\r\n                btoa(String.fromCharCode.apply(null, bin));\r\n        }\r\n        else {\r\n            // btoa not available\r\n            var base64 = '', encodingTable = url ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' :\r\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            for (var i = 0, len = bin.length; i < len;) {\r\n                var octet_a = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_b = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_c = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var triple = (octet_a << 0x10) + (octet_b << 0x08) + octet_c;\r\n                base64 += encodingTable.charAt((triple >>> 18) & 0x3F);\r\n                base64 += encodingTable.charAt((triple >>> 12) & 0x3F);\r\n                base64 += (i < bin.length + 2) ? encodingTable.charAt((triple >>> 6) & 0x3F) : (url ? '%3d' : '=');\r\n                base64 += (i < bin.length + 1) ? encodingTable.charAt((triple >>> 0) & 0x3F) : (url ? '%3d' : '=');\r\n            }\r\n            return base64;\r\n        }\r\n    }\r\n    Convert.bin2base64 = bin2base64;\r\n})(Convert = exports.Convert || (exports.Convert = {}));\r\n///////////////////////////////////////////////////////////////////////////////\r\n// U T I L S\r\nvar Util;\r\n(function (Util) {\r\n    /**\r\n     * Time constant comparison of two arrays\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Boolean} True if the arrays are equal (length and content), false otherwise\r\n     */\r\n    function compare(lh, rh) {\r\n        if (lh.length !== rh.length) {\r\n            // abort\r\n            return false;\r\n        }\r\n        var i, d = 0, len = lh.length;\r\n        for (i = 0; i < len; i++) {\r\n            d |= lh[i] ^ rh[i];\r\n        }\r\n        return d === 0;\r\n    }\r\n    Util.compare = compare;\r\n    /**\r\n     * Clear an array\r\n     * @param {Uint8Array | Uint16Array | Uint32Array} Array to clear\r\n     */\r\n    function clear(data) {\r\n        data.fill(0);\r\n    }\r\n    Util.clear = clear;\r\n    /**\r\n     * XOR two arrays and return the result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} XORed result array\r\n     */\r\n    function xor(lh, rh) {\r\n        return lh.map(function (val, ind) { return val ^ rh[ind]; });\r\n    }\r\n    Util.xor = xor;\r\n    /**\r\n     * Concat two arrays and returns a new result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} Concatenated result array\r\n     */\r\n    function concat(lh, rh) {\r\n        var x = new Uint8Array(lh.length + rh.length);\r\n        x.set(lh, 0);\r\n        x.set(rh, lh.length);\r\n        return x;\r\n    }\r\n    Util.concat = concat;\r\n    /**\r\n     * Returns true if LITTLE endian is detected\r\n     * @return {Boolean} True for LE, false for BE\r\n     */\r\n    function litteendian() {\r\n        return (new Uint32Array((new Uint8Array([1, 2, 3, 4])).buffer))[0] === 0x04030201;\r\n    }\r\n    Util.litteendian = litteendian;\r\n})(Util = exports.Util || (exports.Util = {}));\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA256 implementation\r\n//        Generates a 32 byte hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA256 class\r\n */\r\nvar SHA256 = /** @class */ (function () {\r\n    /**\r\n     * SHA256 ctor\r\n     */\r\n    function SHA256() {\r\n        this.hashSize = 32;\r\n        this.buffer = new Uint8Array(64);\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA256.prototype.transform = function () {\r\n        var h = this.H, h0 = h[0], h1 = h[1], h2 = h[2], h3 = h[3], h4 = h[4], h5 = h[5], h6 = h[6], h7 = h[7];\r\n        // convert byte buffer into w[0..15]\r\n        var i, w = new Uint32Array(16);\r\n        for (i = 0; i < 16; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        for (i = 0; i < 64; i++) {\r\n            var tmp = void 0;\r\n            if (i < 16) {\r\n                tmp = w[i];\r\n            }\r\n            else {\r\n                var a = w[(i + 1) & 15];\r\n                var b = w[(i + 14) & 15];\r\n                tmp = w[i & 15] = ((a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[(i + 9) & 15]) | 0;\r\n            }\r\n            tmp = (tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this.K[i]) | 0;\r\n            h7 = h6;\r\n            h6 = h5;\r\n            h5 = h4;\r\n            h4 = h3 + tmp;\r\n            h3 = h2;\r\n            h2 = h1;\r\n            h1 = h0;\r\n            h0 = (tmp + ((h1 & h2) ^ (h3 & (h1 ^ h2))) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10)) | 0;\r\n        }\r\n        h[0] = (h[0] + h0) | 0;\r\n        h[1] = (h[1] + h1) | 0;\r\n        h[2] = (h[2] + h2) | 0;\r\n        h[3] = (h[3] + h3) | 0;\r\n        h[4] = (h[4] + h4) | 0;\r\n        h[5] = (h[5] + h5) | 0;\r\n        h[6] = (h[6] + h6) | 0;\r\n        h[7] = (h[7] + h7) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Array} msg Additional message data as byte array\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 512 bit (64 byte chunks)\r\n        for (var i = 0, len = msg.length; i < len; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 64) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 56\r\n        while (idx !== 56) {\r\n            if (idx === 64) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[56] = (c[1] >>> 24) & 0xff;\r\n        b[57] = (c[1] >>> 16) & 0xff;\r\n        b[58] = (c[1] >>> 8) & 0xff;\r\n        b[59] = (c[1] >>> 0) & 0xff;\r\n        b[60] = (c[0] >>> 24) & 0xff;\r\n        b[61] = (c[0] >>> 16) & 0xff;\r\n        b[62] = (c[0] >>> 8) & 0xff;\r\n        b[63] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var hash = new Uint8Array(32), i;\r\n        for (i = 0; i < 8; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i] >>> 0) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA256.prototype.selftest = function () {\r\n        var cumulative = new SHA256(), sha = new SHA256();\r\n        var toBeHashed = '', hash, i, n;\r\n        for (i = 0; i < 10; i++) {\r\n            for (n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === 'f305c76d5d457ddf04f1927166f5e13429407049a5c5f29021916321fcdcd8b4';\r\n    };\r\n    return SHA256;\r\n}());\r\nexports.SHA256 = SHA256;\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA512 implementation\r\n//        Generates a 64 byte (512 bit) hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA512 class\r\n */\r\nvar SHA512 = /** @class */ (function () {\r\n    /**\r\n     * SHA512 ctor\r\n     */\r\n    function SHA512() {\r\n        this.hashSize = 64;\r\n        this.buffer = new Uint8Array(128); // 128 byte array\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {Object} this\r\n     */\r\n    SHA512.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\r\n            0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA512.prototype.transform = function () {\r\n        var h = this.H, h0h = h[0], h0l = h[1], h1h = h[2], h1l = h[3], h2h = h[4], h2l = h[5], h3h = h[6], h3l = h[7], h4h = h[8], h4l = h[9], h5h = h[10], h5l = h[11], h6h = h[12], h6l = h[13], h7h = h[14], h7l = h[15];\r\n        var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\r\n        // convert byte buffer into w[0..31]\r\n        var i, w = new Uint32Array(160);\r\n        for (i = 0; i < 32; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        // fill w[32..159]\r\n        var gamma0xl, gamma0xh, gamma0l, gamma0h, gamma1xl, gamma1xh, gamma1l, gamma1h, wrl, wrh, wr7l, wr7h, wr16l, wr16h;\r\n        for (i = 16; i < 80; i++) {\r\n            // Gamma0\r\n            gamma0xh = w[(i - 15) * 2];\r\n            gamma0xl = w[(i - 15) * 2 + 1];\r\n            gamma0h = ((gamma0xl << 31) | (gamma0xh >>> 1)) ^\r\n                ((gamma0xl << 24) | (gamma0xh >>> 8)) ^\r\n                ((gamma0xh >>> 7));\r\n            gamma0l = ((gamma0xh << 31) | (gamma0xl >>> 1)) ^\r\n                ((gamma0xh << 24) | (gamma0xl >>> 8)) ^\r\n                ((gamma0xh << 25) | (gamma0xl >>> 7));\r\n            // Gamma1\r\n            gamma1xh = w[(i - 2) * 2];\r\n            gamma1xl = w[(i - 2) * 2 + 1];\r\n            gamma1h = ((gamma1xl << 13) | (gamma1xh >>> 19)) ^\r\n                ((gamma1xh << 3) | (gamma1xl >>> 29)) ^\r\n                ((gamma1xh >>> 6));\r\n            gamma1l = ((gamma1xh << 13) | (gamma1xl >>> 19)) ^\r\n                ((gamma1xl << 3) | (gamma1xh >>> 29)) ^\r\n                ((gamma1xh << 26) | (gamma1xl >>> 6));\r\n            // shortcuts\r\n            wr7h = w[(i - 7) * 2],\r\n                wr7l = w[(i - 7) * 2 + 1],\r\n                wr16h = w[(i - 16) * 2],\r\n                wr16l = w[(i - 16) * 2 + 1];\r\n            // W(round) = gamma0 + W(round - 7) + gamma1 + W(round - 16)\r\n            wrl = gamma0l + wr7l;\r\n            wrh = gamma0h + wr7h + ((wrl >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n            wrl += gamma1l;\r\n            wrh += gamma1h + ((wrl >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n            wrl += wr16l;\r\n            wrh += wr16h + ((wrl >>> 0) < (wr16l >>> 0) ? 1 : 0);\r\n            // store\r\n            w[i * 2] = wrh;\r\n            w[i * 2 + 1] = wrl;\r\n        }\r\n        // compress\r\n        var chl, chh, majl, majh, sig0l, sig0h, sig1l, sig1h, krl, krh, t1l, t1h, t2l, t2h;\r\n        for (i = 0; i < 80; i++) {\r\n            // Ch\r\n            chh = (eh & fh) ^ (~eh & gh);\r\n            chl = (el & fl) ^ (~el & gl);\r\n            // Maj\r\n            majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n            majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n            // Sigma0\r\n            sig0h = ((al << 4) | (ah >>> 28)) ^ ((ah << 30) | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\r\n            sig0l = ((ah << 4) | (al >>> 28)) ^ ((al << 30) | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\r\n            // Sigma1\r\n            sig1h = ((el << 18) | (eh >>> 14)) ^ ((el << 14) | (eh >>> 18)) ^ ((eh << 23) | (el >>> 9));\r\n            sig1l = ((eh << 18) | (el >>> 14)) ^ ((eh << 14) | (el >>> 18)) ^ ((el << 23) | (eh >>> 9));\r\n            // K(round)\r\n            krh = this.K[i * 2];\r\n            krl = this.K[i * 2 + 1];\r\n            // t1 = h + sigma1 + ch + K(round) + W(round)\r\n            t1l = hl + sig1l;\r\n            t1h = hh + sig1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n            t1l += chl;\r\n            t1h += chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n            t1l += krl;\r\n            t1h += krh + ((t1l >>> 0) < (krl >>> 0) ? 1 : 0);\r\n            t1l = t1l + w[i * 2 + 1];\r\n            t1h += w[i * 2] + ((t1l >>> 0) < (w[i * 2 + 1] >>> 0) ? 1 : 0);\r\n            // t2 = sigma0 + maj\r\n            t2l = sig0l + majl;\r\n            t2h = sig0h + majh + ((t2l >>> 0) < (sig0l >>> 0) ? 1 : 0);\r\n            // update working variables\r\n            hh = gh;\r\n            hl = gl;\r\n            gh = fh;\r\n            gl = fl;\r\n            fh = eh;\r\n            fl = el;\r\n            el = (dl + t1l) | 0;\r\n            eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n            dh = ch;\r\n            dl = cl;\r\n            ch = bh;\r\n            cl = bl;\r\n            bh = ah;\r\n            bl = al;\r\n            al = (t1l + t2l) | 0;\r\n            ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n        }\r\n        // intermediate hash\r\n        h0l = h[1] = (h0l + al) | 0;\r\n        h[0] = (h0h + ah + ((h0l >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\r\n        h1l = h[3] = (h1l + bl) | 0;\r\n        h[2] = (h1h + bh + ((h1l >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\r\n        h2l = h[5] = (h2l + cl) | 0;\r\n        h[4] = (h2h + ch + ((h2l >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\r\n        h3l = h[7] = (h3l + dl) | 0;\r\n        h[6] = (h3h + dh + ((h3l >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n        h4l = h[9] = (h4l + el) | 0;\r\n        h[8] = (h4h + eh + ((h4l >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\r\n        h5l = h[11] = (h5l + fl) | 0;\r\n        h[10] = (h5h + fh + ((h5l >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\r\n        h6l = h[13] = (h6l + gl) | 0;\r\n        h[12] = (h6h + gh + ((h6l >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\r\n        h7l = h[15] = (h7l + hl) | 0;\r\n        h[14] = (h7h + hh + ((h7l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {SHA512} this\r\n     */\r\n    SHA512.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 1024 bit (128 byte chunks)\r\n        for (var i = 0; i < msg.length; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 128) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 112\r\n        while (idx !== 112) {\r\n            if (idx === 128) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[112] = b[113] = b[114] = b[115] = b[116] = b[117] = b[118] = b[119] = 0;\r\n        b[120] = (c[1] >>> 24) & 0xff;\r\n        b[121] = (c[1] >>> 16) & 0xff;\r\n        b[122] = (c[1] >>> 8) & 0xff;\r\n        b[123] = (c[1] >>> 0) & 0xff;\r\n        b[124] = (c[0] >>> 24) & 0xff;\r\n        b[125] = (c[0] >>> 16) & 0xff;\r\n        b[126] = (c[0] >>> 8) & 0xff;\r\n        b[127] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var i, hash = new Uint8Array(64);\r\n        for (i = 0; i < 16; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i]) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Additional message data\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA512.prototype.selftest = function () {\r\n        var cumulative = new SHA512(), sha = new SHA512();\r\n        var toBeHashed = '', hash;\r\n        for (var i = 0; i < 10; i++) {\r\n            for (var n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === '602923787640dd6d77a99b101c379577a4054df2d61f39c74172cafa2d9f5b26a11b40b7ba4cdc87e84a4ab91b85391cb3e1c0200f3e3d5e317486aae7bebbf3';\r\n    };\r\n    return SHA512;\r\n}());\r\nexports.SHA512 = SHA512;\r\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = {\n  Base58: require('./src/Base58'),\n  BC: require('./src/BC'),\n  Endian: require('./src/Endian'),\n  PascalCoinInfo: require('./src/PascalCoinInfo'),\n  Sha: require('./src/Sha'),\n  Util: require('./src/Util'),\n  Types: require('./src/Types'),\n  Coding: require('./src/Coding')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./Endian');\n\nconst P_BUFFER = Symbol('buffer');\n\n/**\n * A BC value as defined in PascalCoin. In essence its a wrapper for\n * a buffer.\n */\nclass BC {\n  /**\n     * Constructor\n     *\n   * @param {Buffer|Uint8Array} buffer\n     */\n  constructor(buffer) {\n    this[P_BUFFER] = Buffer.from(buffer);\n  }\n\n  /**\n   * Gets a BC instance from the given value. If a string it expects it to be\n   * in hex format.\n   *\n   * This method it called everywhere, so we make sure that\n   *\n   * @param {Buffer|Uint8Array|BC|String} data\n   * @param {String} stringType\n   * @returns {BC}\n   */\n  static from(data, stringType = 'hex') {\n    if (data instanceof BC) {\n      return data;\n    } else if (data instanceof Buffer) {\n      return new BC(data);\n    } else if (data instanceof Uint8Array) {\n      return new BC(data);\n    }\n\n    if (stringType === 'hex') {\n      try {\n        return BC.fromHex(data);\n      } catch (e) {\n        return BC.fromString(data);\n      }\n    }\n\n    return BC.fromString(data);\n  }\n\n  /**\n   * Gets an empty BC.\n   *\n   * @returns {BC}\n   */\n  static empty() {\n    return BC.from([]);\n  }\n\n  /**\n     * Creates a new BC instance from the given hex string.\n     *\n   * @param {string} hex\n   * @param {Boolean} strict\n     * @returns {BC}\n     */\n  static fromHex(hex, strict = true) {\n    if (hex instanceof BC) {\n      return hex;\n    }\n\n    if (hex.length % 2 === 1) {\n      if (strict) {\n        throw new Error('Invalid hex - number of nibbles need to be divideable by 2');\n      } else {\n        hex = `0${hex}`; // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (hex.length > 0 && /^[0-9a-fA-F]+$/.test(hex) === false) {\n      throw new Error('Invalid hex');\n    }\n\n    return new BC(Buffer.from(hex, 'hex'));\n  }\n\n  /**\n     * Creates a new BC instance from the given string.\n     *\n     * @param {string} str\n     * @returns {BC}\n     */\n  static fromString(str) {\n    if (str instanceof BC) {\n      return str;\n    }\n\n    // TODO: UTF8?\n    return new BC(Buffer.from(str, 'utf8'));\n  }\n\n  /**\n     * Gets a new BC from an integer.\n     *\n     * @param {Number} int\n     * @param {Number} nBytes\n     * @returns {BC}\n     */\n  static fromInt(int, nBytes = null) {\n    let hex = parseInt(int, 10).toString(16);\n\n    const instance = BC.fromHex(hex, false);\n\n    if (nBytes !== null && instance.length < nBytes) {\n      return instance.prepend(BC.fromHex('00'.repeat(nBytes - instance.length)));\n    }\n    return instance;\n  }\n\n  /**\n     * Gets the binary presentation of the hexa string.\n     *\n     * @returns {string}\n     */\n  toBinary() {\n    return this[P_BUFFER].toString('binary');\n  }\n\n  /**\n     * Gets the BC as a string.\n     *\n     * @returns {string}\n     * // TODO: UTF8?\n     */\n  toString() {\n    return this[P_BUFFER].toString('utf8');\n  }\n\n  /**\n   * Gets the BC as hex.\n   *\n   * @returns {string}\n   */\n  toHex(lowerCase = false) {\n    if (lowerCase) {\n      return this[P_BUFFER].toString('hex').toLowerCase();\n    }\n\n    return this[P_BUFFER].toString('hex').toUpperCase();\n  }\n\n  /**\n     * Gets the integer value of the BC.\n     *\n     * @return {Number}\n     */\n  toInt() {\n    return parseInt(this.toHex(), 16);\n  }\n\n  /**\n     * Gets the length of BC bytes.\n     *\n     * @returns {number}\n     */\n  get length() {\n    return this[P_BUFFER].length;\n  }\n\n  /**\n     * Gets the length of the parsed BC (the bytes).\n     *\n     * @returns {number}\n     */\n  get hexLength() {\n    return this.length * 2;\n  }\n\n  /**\n     * Gets a copy of the current buffer.\n     *\n     * @returns {Buffer}\n     */\n  get buffer() {\n    return Buffer.from(this[P_BUFFER].toString('hex'), 'hex');\n  }\n\n  /**\n     * Returns a sub-BC defined by the start and end position.\n     *\n     * @param {Number}start\n     * @param {Number} end\n     * @returns {BC}\n     */\n  slice(start, end = null) {\n    if (end === null) {\n      return new BC(this[P_BUFFER].slice(start));\n    }\n\n    return new BC(this[P_BUFFER].slice(start, end));\n  }\n\n  /**\n     * Concatenates one or more BC instances and returns a new instance.\n     *\n     * @param {...BC} bytes\n     * @returns {BC}\n     */\n  static concat(...bytes) {\n    return BC.fromHex(bytes.reduce((prev, curr) => {\n      if (prev instanceof Object) {\n        return `${prev.toHex()}${curr.toHex()}`;\n      }\n      return `${prev}${curr.toHex()}`;\n    }));\n  }\n\n  /**\n   * Appends a single BC instance to the current BC and\n   * returns a new instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bytes\n   * @returns {BC}\n   */\n  append(bytes) {\n    return BC.concat(this, BC.from(bytes));\n  }\n\n  /**\n     * Appends a single BC instance to the current BC and\n     * returns a new instance.\n     *\n     * @param {BC|Buffer|Uint8Array|String} bytes\n     * @returns {BC}\n     */\n  prepend(bytes) {\n    return BC.concat(BC.from(bytes), this);\n  }\n\n  /**\n   * Gets a value indicating the current bc equals the given bc.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @returns {boolean}\n   */\n  equals(bc) {\n    return Buffer.compare(BC.from(bc).buffer, this.buffer) === 0;\n  }\n\n  /**\n   * Reads an 8 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @returns {Number}\n   */\n  readInt8(offset, unsigned = true) {\n    return this[P_BUFFER][unsigned ? 'readUInt8' : 'readInt8'](offset);\n  }\n\n  /**\n   * Reads a 16 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt16(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int16${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Reads a 32 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt32(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int32${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Creates an 8 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @returns {BC}\n   */\n  static fromInt8(value, unsigned = true) {\n    const method = `write${unsigned ? 'U' : ''}Int8`;\n    const buf = Buffer.allocUnsafe(1);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 16 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt16(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int16${endian}`;\n    const buf = Buffer.allocUnsafe(2);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 32 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt32(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int32${endian}`;\n    const buf = Buffer.allocUnsafe(4);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Small helper to split a byte collection.\n   *\n   * @param {Number} size\n   * @return {BC[]}\n   */\n  split(size) {\n    let pos = 0;\n\n    let splitted = [];\n\n    for (; pos < this.length; pos += size) {\n      splitted.push(this.slice(pos, pos + size));\n    }\n\n    return splitted;\n  }\n\n}\n\nmodule.exports = BC;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst bs58 = require('bs58');\nconst BC = require('./BC');\n\n/**\n * Contains methods to convert stuff to various formats.\n */\nclass Base58 {\n  /**\n     * Gets the base58 representation of the given buffer.\n     *\n     * @param {BC|Buffer|Uint8Array|String} data\n     * @returns {String}\n     */\n  static encode(data) {\n    return bs58.encode(BC.from(data).buffer);\n  }\n\n  /**\n   * Decodes a Base58 encoded string.\n   *\n   * @param {String} str\n   * @returns {BC}\n   */\n  static decode(str) {\n    return new BC(bs58.decode(str));\n  }\n}\n\nmodule.exports = Base58;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ID = Symbol('id');\nconst P_FIXED_VALUE = Symbol('fixed_value');\nconst P_HAS_FIXED_VALUE = Symbol('has_fixed_value');\nconst P_DESCRIPTION = Symbol('description');\n\n/**\n * Abstract field type to encode and decode values. Abstracts encodeToBytes and decodeFromBytes as\n * basic implementations but in fact it can be anything.\n */\nclass AbstractType {\n  /**\n   * Constructor.\n   *\n   * @param {string|null} id\n   */\n  constructor(id = null) {\n    this[P_ID] = id;\n    this[P_HAS_FIXED_VALUE] = false;\n  }\n\n  /**\n   * Gets the field ident.\n   *\n   * @returns {String}\n   */\n  get id() {\n    return this[P_ID];\n  }\n\n  /**\n   * Gets a value indicating whether the field type has a fixed value.\n   *\n   * @returns {Boolean}\n   */\n  get hasFixedValue() {\n    return this[P_HAS_FIXED_VALUE];\n  }\n\n  /**\n   * Gets the fixed value.\n   *\n   * @returns {*}\n   */\n  get fixedValue() {\n    return this[P_FIXED_VALUE];\n  }\n\n  /**\n   * Gets the encoded size of the type.\n   *\n   * @return {Number}\n   */\n  get encodedSize() {\n    throw new Error('Encoded size getter not implemented');\n  }\n\n  /**\n   * Decodes a value using the rules defined in the method from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    throw new Error('Missing implementation for decodeFromBytes.');\n  }\n\n  /**\n   * Returns the encoded bytes for the given value.\n   *\n   * @param {*} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    throw new Error('Missing implementation for encodeToBytes.');\n  }\n\n  /**\n   * Sets a fixed value.\n   *\n   * @param {*} value\n   * @returns {AbstractType}\n   */\n  withFixedValue(value) {\n    this[P_FIXED_VALUE] = value;\n    this[P_HAS_FIXED_VALUE] = true;\n    return this;\n  }\n\n  /**\n   * Sets the description and returns the type or gets the description itself.\n   *\n   * @param {String} description\n   * @returns {AbstractType|String}\n   */\n  description(description = null) {\n    if (description === null) {\n      return this[P_DESCRIPTION];\n    }\n\n    if (this[P_DESCRIPTION] === undefined) {\n      this[P_DESCRIPTION] = [];\n    }\n    this[P_DESCRIPTION].push(description);\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the type can be decoded. It is\n   * not possible in some circumstances.\n   *\n   * @return {boolean}\n   */\n  get canDecode() {\n    return true;\n  }\n}\n\nmodule.exports = AbstractType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SUBTYPES = Symbol('subtypes');\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A Type that itself is made up of multiple other (sub-)types.\n */\nclass CompositeType extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id) {\n    super(id || 'composite_type');\n    super.description('A type that itself is made up of multiple other types.');\n    this[P_SUBTYPES] = [];\n  }\n\n  /**\n   * Gets all subtypes.\n   *\n   * @returns {Array}\n   */\n  get subTypes() {\n    return this[P_SUBTYPES];\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Adds a new field (type) definition.\n   *\n   * @param {AbstractType} field\n   */\n  addSubType(field) {\n    this[P_SUBTYPES].push(field);\n    return this;\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = { toArray: false }, all = null) {\n    if (this.canDecode === false) {\n      throw new Error('This type cannot be decoded.');\n    }\n    const obj = {};\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    this.subTypes.forEach((subType) => {\n      obj[subType.id] = subType.decodeFromBytes(bc.slice(offset), options, obj);\n      offset += subType.encodedSize;\n    });\n    this[P_SIZE_ENCODED] = offset;\n\n    return options.toArray ? Object.values(obj) : obj;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array|*} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray) {\n    let bc = BC.empty();\n\n    this.subTypes.forEach((subType, idx) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = Array.isArray(objOrArray) ? objOrArray[idx] : objOrArray[subType.id];\n      }\n\n      // we will use the first available\n      bc = bc.append(subType.encodeToBytes(subTypeValue, objOrArray));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n}\n\nmodule.exports = CompositeType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst P_ENDIAN = Symbol('endian');\nconst P_UNSIGNED = Symbol('unsigned');\n\n/**\n * Abstract integer field type.\n */\nclass AbstractInt extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id);\n    this[P_UNSIGNED] = unsigned;\n    this[P_ENDIAN] = endian;\n  }\n\n  /**\n   * Gets the endianness.\n   *\n   * @returns {String}\n   */\n  get endian() {\n    return this[P_ENDIAN];\n  }\n\n  /**\n   * Gets a value indicating whether the value is an unsigned integer.\n   *\n   * @returns {Boolean}\n   */\n  get unsigned() {\n    return this[P_UNSIGNED];\n  }\n}\n\nmodule.exports = AbstractInt;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE = Symbol('size');\n\n/**\n * A field type to encode and decode bytes with a fixed length.\n */\nclass BytesFixedLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Number} length\n   */\n  constructor(id, length) {\n    super(id || 'bytes_fixed_length_' + length);\n    this.description('Bytes with a fixed length of ' + length);\n    this[P_SIZE] = length;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE];\n  }\n\n  /**\n   * Returns the values of the given bc in the configured length.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).slice(0, this[P_SIZE]);\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    return value.slice(0, this[P_SIZE]);\n  }\n}\n\nmodule.exports = BytesFixedLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\nconst BytesWithoutLength = require('./BytesWithoutLength');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_BYTES_FIELD = Symbol('bytes_field');\nconst P_HAS_LEADING_ZB = Symbol('has_leading_zerobyte');\n\n/**\n * A field type to write dynamic content in form of bytes (prepends the length).\n */\nclass BytesWithLength extends AbstractType {\n  /**\n   * Constructor\n   *\n   * @param {string} id\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize = 1, lengthId = 'length', lengthDesc = null,\n    endian = Endian.LITTLE_ENDIAN, hasLeadingZeroByte = false) {\n    super(id || `bytes_with_length_${byteSize * 8}`);\n    this.description('Bytes with variable size prepended');\n    this[P_BYTES_FIELD] = new BytesWithoutLength('value');\n    this[P_HAS_LEADING_ZB] = hasLeadingZeroByte;\n\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8(lengthId, true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16(lengthId, true, endian);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32(lengthId, true, endian);\n        break;\n      default:\n        throw new Error('ByteSize must be either 1, 2 or 4');\n    }\n\n    if (lengthDesc !== null) {\n      this[P_LENGTH_FIELD].description(lengthDesc);\n    }\n\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].encodedSize +\n      this[P_LENGTH_FIELD].decodeFromBytes(BC.from(bc)) +\n      (+this[P_HAS_LEADING_ZB]);\n    return this[P_BYTES_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize + (+this[P_HAS_LEADING_ZB]),\n        this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    this[P_SIZE_ENCODED] = value.length + this[P_LENGTH_FIELD].encodedSize;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(\n      this[P_SIZE_ENCODED] - this[P_LENGTH_FIELD].encodedSize\n    );\n\n    return bc.append(this[P_BYTES_FIELD].encodeToBytes(value));\n  }\n\n  get lengthField() {\n    return this[P_LENGTH_FIELD];\n  }\n}\n\nmodule.exports = BytesWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write bytes without prepending the length. This cannot be decoded in some circumstances.\n */\nclass BytesWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'bytes_without_length');\n    this.description('Bytes without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * In fact this does nothing other than updating the internal size.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value);\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n}\n\nmodule.exports = BytesWithoutLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for a 16bit int value.\n */\nclass Int16 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int16', unsigned, endian);\n    this.description('2byte 16bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 2;\n  }\n\n  /**\n   * Decodes the int16 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt16(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Encodes the given Int16 value to a byte sequence.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt16(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int16;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for 32bit int values.\n */\nclass Int32 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int32', unsigned, endian);\n    this.description('4byte 32bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 4;\n  }\n\n  /**\n   * Reads the given int32 value.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt32(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Appends the given Int32 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt32(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int32;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\nconst Endian = require('./../../Endian');\nconst BN = require('bn.js');\n\nfunction validate64Bit(isUnsigned, value) {\n  if (isUnsigned) {\n    if (value.isNeg()) {\n      throw new Error('64bit value is negative. Only signed allowed.');\n    } else if (value.gt(new BN('18446744073709551615'))) {\n      throw new Error('Invalid unsigned 64 bit value.');\n    }\n  } else if (!isUnsigned) {\n    if (value.gt(new BN('9223372036854775807')) || value.lt(new BN('-9223372036854775808'))) {\n      throw new Error('Invalid signed 64 bit value.');\n    }\n  }\n\n  return value;\n}\n\n/**\n * Field type for 64bit int values using BN.js.\n */\nclass Int64 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned = true, endian = Endian.LITTLE_ENDIAN) {\n    super(id || 'int64', unsigned, endian);\n    this.description('8byte 64bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 8;\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BN}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let value = new BN(BC.from(bc).slice(0, this.encodedSize).buffer, 10, this.endian.toLowerCase());\n\n    if (!this.unsigned) {\n      value = value.fromTwos(64);\n    }\n\n    return validate64Bit(this.unsigned, value);\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {BN} value\n   */\n  encodeToBytes(value) {\n    value = validate64Bit(this.unsigned, value);\n    if (!this.unsigned) {\n      value = value.toTwos(64);\n    }\n\n    return BC.from(value.toBuffer(this.endian.toLowerCase(), this.encodedSize));\n  }\n}\n\nmodule.exports = Int64;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\n/**\n * Fields type for an 8Bit int value.\n */\nclass Int8 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   */\n  constructor(id, unsigned) {\n    super(id || 'int8', unsigned, Endian.LITTLE_ENDIAN);\n    this.description('1byte 8bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 1;\n  }\n\n  /**\n   * Reads the int8 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt8(0, this.unsigned);\n  }\n\n  /**\n   * Encodes the given int8 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt8(value, this.unsigned);\n  }\n}\n\nmodule.exports = Int8;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../../BC');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\n\nconst StringWithoutLength = require('./StringWithoutLength');\nconst Endian = require('./../../Endian');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_HAS_LEADING_ZB = Symbol('has_leading_zerobyte');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_STRING_FIELD = Symbol('bytes_field');\n\n/**\n * A field type to write dynamic strings (prepends the length).\n */\nclass StringWithLength extends AbstractType {\n\n  constructor(id, byteSize = 1, lengthId = 'length', lengthDesc = null,\n    endian = Endian.LITTLE_ENDIAN, hasLeadingZeroByte = false) {\n    super(id || `bytes_size${byteSize * 8}`);\n    this.description('String with size prepended');\n    this[P_STRING_FIELD] = new StringWithoutLength('value');\n    this[P_HAS_LEADING_ZB] = hasLeadingZeroByte;\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8(lengthId, true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16(lengthId, true, endian);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32(lengthId, true, endian);\n        break;\n      default:\n        throw new Error('ByteSize must be either 1, 2 or 4');\n    }\n\n    if (lengthDesc !== null) {\n      this[P_LENGTH_FIELD].description(lengthDesc);\n    }\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].encodedSize +\n      this[P_LENGTH_FIELD].decodeFromBytes(BC.from(bc)) +\n      (+this[P_HAS_LEADING_ZB]);\n    return this[P_STRING_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize + (+this[P_HAS_LEADING_ZB]),\n        this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    this[P_SIZE_ENCODED] = value.length;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(this[P_SIZE_ENCODED]);\n\n    if (this[P_HAS_LEADING_ZB]) {\n      bc = bc.append('00');\n    }\n\n    return bc.append(this[P_STRING_FIELD].encodeToBytes(value));\n  }\n}\n\nmodule.exports = StringWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write dynamic strings without prepending the length.\n */\nclass StringWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'string_without_length');\n    this.description('Single string value without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).toString();\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value, 'string');\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n}\n\nmodule.exports = StringWithoutLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CompositeType = require('./CompositeType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_SUBTYPE_RESOLVER = Symbol('subtype_resolver');\nconst P_MARKER_FIELD = Symbol('marker_field');\n\n/**\n * A Type that itself is made up of multiple other types. The types are selected dynamically\n * depending on the given resolver.\n */\nclass Decissive extends CompositeType {\n  /**\n   * Constructor\n   */\n  constructor(id, markerField, subTypeResolver) {\n    super(id || 'decissive');\n    super.description('A type that itself has many sub types but only some are triggere based on a marker.');\n    this[P_SUBTYPE_RESOLVER] = subTypeResolver;\n    this[P_MARKER_FIELD] = markerField;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n\n    this[P_SIZE_ENCODED] = subType.encodedSize;\n    return subType.decodeFromBytes(bc, options, all);\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray, all) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n    let bc = subType.encodeToBytes(objOrArray);\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n}\n\nmodule.exports = Decissive;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNameType = require('./../../Types/AccountName');\nconst StringWithLength = require('../Core/StringWithLength');\n\n/**\n * A pascal related type that can de/encode an account name.\n */\nclass AccountName extends StringWithLength {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null, byteSize = 2) {\n    super(id || 'account_name', byteSize);\n    this.description('An account name');\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNameType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNameType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNameType} value\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.toString());\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNumberType = require('./../../Types/AccountNumber');\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass AccountNumber extends Int32 {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'account', true, Endian.LITTLE_ENDIAN);\n    this.description('An account number');\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNumberType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNumberType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNumberType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.account);\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Int64 = require('./../Core/Int64');\nconst CurrencyType = require('./../../Types/Currency');\nconst Endian = require('./../../Endian');\n\n/**\n * A special Int64 type that can handle pascalcoin currencies.\n */\nclass Currency extends Int64 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null, unsigned = true, endian = Endian.LITTLE_ENDIAN) {\n    super(id || 'currency', unsigned, endian);\n    this.description('A type for currency values.');\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurrencyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return CurrencyType.fromMolina(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurrencyType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.bn);\n  }\n}\n\nmodule.exports = Currency;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CurveType = require('./../../../Types/Keys/Curve');\nconst Endian = require('./../../../Endian');\nconst Int16 = require('./../../Core/Int16');\n\n/**\n * A special pascal type that can en/decode a curve id.\n */\nclass Curve extends Int16 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'curve', true, Endian.LITTLE_ENDIAN);\n    this.description('Key curve id');\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurveType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new CurveType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurveType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.id);\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst CompositeType = require('../../CompositeType');\nconst PrivateKeyType = require('./../../../../src/Types/Keys/PrivateKey');\n\n/**\n * A coder for a private key.\n */\nclass PrivateKey extends CompositeType {\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'private_key');\n    this.addSubType(\n      new Curve('curve')\n    );\n    this.addSubType(\n      new BytesWithLength('key', 2)\n        .description('The private key value.')\n    );\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PrivateKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PrivateKeyType(decoded.key, decoded.curve);\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {PrivateKeyType} value\n   * @returns {PrivateKeyType}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst BytesWithoutLength = require('../../Core/BytesWithoutLength');\nconst CompositeType = require('../../CompositeType');\nconst BC = require('../../../BC');\nconst Sha = require('../../../Sha');\nconst Base58 = require('../../../Base58');\nconst PublicKeyType = require('./../../../../src/Types/Keys/PublicKey');\n\n/**\n * A Public Key value.\n */\nclass PublicKey extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} omitXYLenghts\n   */\n  constructor(id = null, omitXYLenghts = false) {\n    super(id || 'public_key');\n    this.addSubType(new Curve('curve'));\n\n    // oh come on..\n    if (omitXYLenghts) {\n      this.addSubType(\n        new BytesWithoutLength('x')\n          .description('The X value of the public key.')\n      );\n      this.addSubType(new BytesWithoutLength('y'));\n    } else {\n      this.addSubType(\n        new BytesWithLength('x', 2, 'x_length', 'Length of X value')\n          .description('The X value of the public key.')\n      );\n      this.addSubType(\n        new BytesWithLength('y', 2, 'y_length', 'Length of Y value')\n          .description('The X value of the public key.')\n      );\n    }\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PublicKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PublicKeyType(decoded.x, decoded.y, decoded.curve);\n  }\n\n  /**\n   * Gets the base58 representation of a public key.\n   *\n   * @returns {String}\n   */\n  encodeToBase58(publicKey) {\n    const prefix = BC.fromHex('01');\n    const encoded = this.encodeToBytes(publicKey);\n    const aux = Sha.sha256(encoded);\n    const suffix = aux.slice(0, 4);\n\n    const raw = BC.concat(prefix, encoded, suffix);\n\n    return Base58.encode(raw);\n  }\n\n  /**\n   * Gets a public key instance from the given base58 string.\n   *\n   * @param {String} base58\n   * @returns {PublicKey}\n   */\n  decodeFromBase58(base58) {\n    const decoded = Base58.decode(base58);\n\n    return this.decodeFromBytes(decoded.slice(1, -4));\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass NOperation extends Int32 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'nOperation', true, Endian.LITTLE_ENDIAN);\n    this.description('Accounts n_operation value.');\n  }\n}\n\nmodule.exports = NOperation;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./../Core/Int8');\nconst Int16 = require('./../Core/Int16');\nconst Int32 = require('./../Core/Int32');\n\nconst P_INT_TYPE = Symbol('int_type');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass OpType extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize) {\n    super(id || `optype_int${byteSize * 8}`);\n    switch (byteSize) {\n      case 1:\n        this[P_INT_TYPE] = new Int8('OpType[Int8]', true);\n        break;\n      case 2:\n        this[P_INT_TYPE] = new Int16('OpType[Int16]', true, Endian.LITTLE_ENDIAN);\n        break;\n      case 4:\n        this[P_INT_TYPE] = new Int32('OpType[Int32]', true, Endian.LITTLE_ENDIAN);\n        break;\n      default:\n        throw Error('Invalid byte size.');\n    }\n    this.description(`Operation type in ${byteSize * 8} bits`);\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_INT_TYPE].encodedSize;\n  }\n\n  /**\n   * Decodes and returns the optype.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Number}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return this[P_INT_TYPE].decodeFromBytes(bc);\n  }\n\n  /**\n   * Encodes the given optype to bytes.\n   *\n   * @param {Number} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    return this[P_INT_TYPE].encodeToBytes(value);\n  }\n\n  get intType() {\n    return this[P_INT_TYPE];\n  }\n}\n\nmodule.exports = OpType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst CompositeType = require('./../CompositeType');\nconst Int32 = require('./../Core/Int32');\nconst AccountNumber = require('./AccountNumber');\nconst BytesWithFixedLength = require('./../Core/BytesFixedLength');\nconst NOperation = require('./NOperation');\nconst OperationHashType = require('./../../Types/OperationHash');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass OperationHash extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'ophash');\n    this.description('A pascalCoin operation hash');\n\n    this.addSubType(\n      new Int32('block', true, Endian.LITTLE_ENDIAN)\n        .description('The block the operation is in.')\n    );\n    this.addSubType(\n      new AccountNumber('account')\n        .description('The account number that signed the operation.')\n    );\n    this.addSubType(\n      new NOperation('nOperation', 4)\n        .description('The n_operation value of the account with the current operation.')\n    );\n    this.addSubType(\n      new BytesWithFixedLength('md160', 20)\n        .description('The RIPEMD160 hash of the operation data.')\n    );\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {OperationHash}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new OperationHashType(decoded.block, decoded.account, decoded.nOperation, decoded.md160);\n  }\n\n  /**\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {OperationHash} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n}\n\nmodule.exports = OperationHash;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_REPEAT_LIMIT = Symbol('repeat_limit');\nconst P_REPEAT_MARKER = Symbol('repeat_marker');\nconst P_TYPE = Symbol('type');\n\n/**\n * A Type that itself is made up of multiple other types.\n */\nclass Repeating extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id, type, repeatLimit = -1, repeatMarker = null) {\n    super(id || 'repeating');\n    super.description('A type that itself has one repeating type that will ' +\n      'be written / read until the limit is reached or data is empty.');\n    this[P_TYPE] = type;\n    this[P_REPEAT_LIMIT] = repeatLimit;\n    this[P_REPEAT_MARKER] = repeatMarker;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let result = [];\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    let limit = this[P_REPEAT_MARKER] !== null ? all[this[P_REPEAT_MARKER]] : this[P_REPEAT_LIMIT];\n    let counter = limit;\n\n    while ((limit > -1 && counter > 0) || (limit === -1 && bc.length > offset)) {\n      const decoded = this[P_TYPE].decodeFromBytes(bc.slice(offset));\n\n      result.push(decoded);\n      offset += this[P_TYPE].encodedSize;\n      counter--;\n    }\n\n    this[P_SIZE_ENCODED] = offset;\n\n    return result;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(arr) {\n    let bc = BC.empty();\n\n    arr.forEach((item, idx) => {\n      if (idx >= this[P_REPEAT_LIMIT] && this[P_REPEAT_LIMIT] > -1) {\n        return;\n      }\n      bc = bc.append(this[P_TYPE].encodeToBytes(item));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  get repeatingType() {\n    return this[P_TYPE];\n  }\n}\n\nmodule.exports = Repeating;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AbstractType: require('./AbstractType'),\n  CompositeType: require('./CompositeType'),\n  Repeating: require('./Repeating'),\n  Decissive: require('./Decissive'),\n  Core: {\n    AbstractInt: require('./Core/AbstractInt'),\n    Int8: require('./Core/Int8'),\n    Int16: require('./Core/Int16'),\n    Int32: require('./Core/Int32'),\n    Int64: require('./Core/Int64'),\n    StringWithLength: require('./Core/StringWithLength'),\n    StringWithoutLength: require('./Core/StringWithoutLength'),\n    BytesWithLength: require('./Core/BytesWithLength'),\n    BytesWithoutLength: require('./Core/BytesWithoutLength'),\n    BytesFixedLength: require('./Core/BytesFixedLength')\n  },\n  Pascal: {\n    Keys: {\n      Curve: require('./Pascal/Keys/Curve'),\n      PublicKey: require('./Pascal/Keys/PublicKey'),\n      PrivateKey: require('./Pascal/Keys/PrivateKey')\n    },\n    AccountNumber: require('./Pascal/AccountNumber'),\n    AccountName: require('./Pascal/AccountName'),\n    Currency: require('./Pascal/Currency'),\n    NOperation: require('./Pascal/NOperation'),\n    OpType: require('./Pascal/OpType'),\n    OperationHash: require('./Pascal/OperationHash')\n  }\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nlet detected = null;\n\nclass Endian {\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get BIG_ENDIAN() {\n    return 'BE';\n  }\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get LITTLE_ENDIAN() {\n    return 'LE';\n  }\n\n  /**\n   * Detects the systems endianness.\n   *\n   * @returns {string}\n   */\n  static detect() {\n    if (detected === null) {\n      const b = new ArrayBuffer(4);\n      const a = new Uint32Array(b);\n      const c = new Uint8Array(b);\n\n      a[0] = 0xdeadbeef;\n      if (c[0] === 0xef) {\n        detected = Endian.LITTLE_ENDIAN;\n      }\n      if (c[0] === 0xde) {\n        detected = Endian.BIG_ENDIAN;\n      }\n    }\n\n    return detected;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses little endian.\n   *\n   * @returns {boolean}\n   */\n  static isLittleEndian() {\n    return Endian.detect() === Endian.LITTLE_ENDIAN;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses big endian.\n   *\n   * @returns {boolean}\n   */\n  static isBigEndian() {\n    return Endian.detect() === Endian.BIG_ENDIAN;\n  }\n}\n\nmodule.exports = Endian;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Currency = require('./Types/Currency');\n\n/**\n * Gets information about forks and features.\n */\nclass PascalCoinInfo {\n\n  /**\n   * Gets the min fee.\n   *\n   * @param {Number|null} block\n   * @returns {Currency}\n   * @constructor\n   */\n  static MIN_FEE(block = null) {\n    return Currency.fromMolina(1);\n  }\n\n  /**\n   * Gets the block number when 50% inflation reduction was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0010() {\n    return 210240;\n  }\n\n  /**\n   * Gets the block number when PIP-10 was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get INFLATION_REDUCTION() {\n    return PascalCoinInfo.PIP_0010;\n  }\n\n  /**\n   * Gets a value indicating whether the given block has inflation reduction\n   * activated (PIP-10).\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isInflationReduction(block) {\n    return block >= PascalCoinInfo.INFLATION_REDUCTION;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0009() {\n    return 260000;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get RANDOM_HASH() {\n    return PascalCoinInfo.PIP_0009;\n  }\n\n  /**\n   * Gets a value indicating if randomhash was active at the given block.\n   *\n   * @param {Number} block\n   * @returns {boolean}\n   */\n  static isRandomHash(block) {\n    return block >= PascalCoinInfo.RANDOM_HASH;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0011() {\n    return 210000;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get DEVELOPER_REWARD() {\n    return PascalCoinInfo.PIP_0011;\n  }\n\n  /**\n   * Gets a value indicating whether the given block was mined with activated\n   * developer award.\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isDeveloperReward(block) {\n    return block >= PascalCoinInfo.DEVELOPER_REWARD;\n  }\n\n  /**\n   * Gets the max payload length in bytes.\n   *\n   * @return {number}\n   * @constructor\n   */\n  static get MAX_PAYLOAD_LENGTH() {\n    return 255;\n  }\n}\n\nmodule.exports = PascalCoinInfo;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst sha256 = require('mipher/dist/sha256');\nconst sha512 = require('mipher/dist/sha512');\nconst BC = require('./BC');\n\n/**\n * Holds methods to hash.\n */\nclass Sha {\n  /**\n   * Calculates the sha256 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {BC}\n   */\n  static sha256(...buffers) {\n    const hasher = new sha256.SHA256();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n\n  /**\n   * Calculates the sha512 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {Buffer}\n   */\n  static sha512(...buffers) {\n    const hasher = new sha512.SHA512();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n}\n\nmodule.exports = Sha;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Util = require('../Util');\n\nconst P_VALUE = Symbol('value');\n\n// the list of characters to escape.\nconst CHARS_TO_ESCAPE = '(){}[]:\"<>'.split('');\nconst REGEX_TO_ESCAPE = `(${CHARS_TO_ESCAPE.map(c => Util.escapeRegex(c)).join('|')})`;\n\nconst ALLOWED_ALL = '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()-+{}[]_:\"|<>,.?/~'.split('');\nconst ALLOWED_START = ALLOWED_ALL.slice(10);\n\n/**\n * AccountName encoding for account names.\n */\nclass AccountName {\n  /**\n   * Constructor\n   * @param {String|AccountName} value\n   */\n  constructor(value) {\n    if (value instanceof AccountName) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = AccountName.validate(value);\n    }\n  }\n\n  /**\n   * Validates a string.\n   *\n   * @param {String} value\n   * @return {String}\n     */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    if (value.length < 3) {\n      throw new Error('Invalid account name, must be at least 3 characters long.');\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (pos === 0 && ALLOWED_START.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position 0`);\n      } else if (pos > 0 && ALLOWED_ALL.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n\n  /**\n   * Gets an escaped string representation for EPasa usage.\n   *\n   * @returns {*}\n   */\n  toStringEscaped() {\n    return this[P_VALUE].replace(new RegExp(REGEX_TO_ESCAPE, 'gm'), '\\\\$1');\n\n  }\n\n  /**\n   * Gets a value indicating whether the current char c1 is an escape modifier\n   * and the second is in the list of chars to escape.\n   *\n   * @param {String} c1\n   * @param {String} c2\n   * @returns {boolean}\n   */\n  static isEscape(c1, c2) {\n    return c1 === '\\\\' && CHARS_TO_ESCAPE.indexOf(c2) > -1;\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst PascalCoinInfo = require('../PascalCoinInfo');\n\nconst P_ACCOUNT = Symbol('account');\nconst P_CHECKSUM = Symbol('checksum');\nconst P_CREATED_IN_BLOCK = Symbol('created_in_block');\nconst P_IS_FOUNDATION_REWARD = Symbol('is_foundation_reward');\n\n/**\n * A simple type that holds an account number in a reliable way.\n */\nclass AccountNumber {\n  /**\n   * Creates a new AccountNumber instance, either from an account string\n   * without checksum (which can be a number), an account string with checksum\n   * or another account instance.\n   *\n   * @param {String|Number|AccountNumber|Account} account\n   */\n  constructor(account) {\n    if (account instanceof AccountNumber) {\n      this[P_ACCOUNT] = account[P_ACCOUNT];\n      this[P_CHECKSUM] = account[P_CHECKSUM];\n    } else if (typeof account === 'string') {\n      const splitted = account.split('-');\n\n      splitted.map(s => {\n        if (isNaN(s) || parseInt(s, 10).toString() !== s) {\n          throw new Error(`Invalid account number part: ${s}`);\n        }\n      });\n\n      if (splitted.length === 2) {\n        this[P_ACCOUNT] = parseInt(splitted[0], 10);\n        this[P_CHECKSUM] = parseInt(splitted[1], 10);\n        if (this[P_CHECKSUM] !== AccountNumber.calculateChecksum(this[P_ACCOUNT])) {\n          throw new Error(`Invalid checksum for account ${this[P_ACCOUNT]}`);\n        }\n      } else {\n        this[P_ACCOUNT] = parseInt(account, 10);\n        this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n      }\n    } else if (typeof account === 'number') {\n      this[P_ACCOUNT] = account;\n      this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n    } else {\n      throw new Error(`Unable to parse Account: ${account.toString()}`);\n    }\n\n    this[P_CREATED_IN_BLOCK] = Math.floor(this[P_ACCOUNT] / 5);\n    this[P_IS_FOUNDATION_REWARD] = PascalCoinInfo.isDeveloperReward(this[P_CREATED_IN_BLOCK]) &&\n        this[P_ACCOUNT] % 5 === 4;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @returns {Number}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the checksum of the account.\n   *\n   * @returns {Number}\n   */\n  get checksum() {\n    return this[P_CHECKSUM];\n  }\n\n  /**\n   * Gets the block number the account was created in.\n   *\n   * @returns {Number}\n   */\n  get createdInBlock() {\n    return this[P_CREATED_IN_BLOCK];\n  }\n\n  /**\n   * Gets a value indicating whether the foundation got this account initially.\n   *\n   * @returns {Boolean}\n   */\n  get isFoundationReward() {\n    return this[P_IS_FOUNDATION_REWARD];\n  }\n\n  /**\n   * Gets the account string.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.account}-${this.checksum}`;\n  }\n\n  /**\n   * Gets a value indicating whether the given account equals the current\n   * account.\n   *\n   * @param {AccountNumber|String|Number} accountNumber\n   * @returns {boolean}\n   */\n  equals(accountNumber) {\n    return (accountNumber !== null && this.toString() === accountNumber.toString());\n  }\n\n  /**\n   * Calculates the checksum for the given account number.\n   *\n   * @param {Number} account\n   * @returns {Number}\n   */\n  static calculateChecksum(account) {\n    return ((account * 101) % 89) + 10;\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\n\nconst P_VALUE = Symbol('value');\n\nfunction toFixed(x) {\n  let base = new BN(10).pow(new BN(4));\n  let dm = x.divmod(base);\n\n  let mod = dm.mod.toString(10, 4);\n  let m = dm.div.toString();\n\n  let isNegative = false;\n\n  if (x.toString().substr(0, 1) === '-') {\n    if (m.substr(0, 1) === '-') {\n      m = m.substr(1);\n    }\n    if (mod.substr(0, 1) === '-') {\n      mod = mod.substr(1);\n    }\n    isNegative = true;\n  }\n\n  return `${isNegative ? '-' : ''}${m}.${mod}`;\n}\n\n/**\n * A simple wrapper around bignumber for the pascal currency and\n * basic math functions.\n */\nclass Currency {\n  /**\n     * Creates a new Currency instance.\n     *\n     * @param {Number|String|BigNumber|Currency} value\n     */\n  constructor(value) {\n    let pasc = value;\n\n    if (pasc instanceof Currency) {\n      this[P_VALUE] = pasc.value;\n      return;\n    }\n\n    if (BN.isBN(pasc)) {\n      this[P_VALUE] = pasc;\n      return;\n    }\n\n    pasc = pasc.toString();\n    pasc = pasc.split(',').join(''); // remove commas\n    // now split the '.'\n\n    const ten = new BN(10);\n    const base = ten.pow(new BN(4));\n\n    // Is it negative?\n    let negative = (pasc.substring(0, 1) === '-');\n\n    if (negative) {\n      pasc = pasc.substring(1);\n    }\n\n    if (pasc === '.') {\n      throw new Error(\n        `Invalid value ${pasc} cannot be converted to` +\n          ' base unit with 4 decimals.');\n    }\n\n    // Split it into a whole and fractional part\n    let comps = pasc.split('.');\n\n    if (comps.length > 2) { throw new Error('Too many decimal points'); }\n\n    let whole = comps[0], fraction = comps[1];\n\n    if (!whole) { whole = '0'; }\n    if (!fraction) { fraction = '0'; }\n    if (fraction.length > 4) {\n      throw new Error('Too many decimal places');\n    }\n\n    while (fraction.length < 4) {\n      fraction += '0';\n    }\n\n    whole = new BN(whole);\n    fraction = new BN(fraction);\n    let molina = (whole.mul(base)).add(fraction);\n\n    if (negative) {\n      molina = molina.neg();\n    }\n\n    this[P_VALUE] = new BN(molina.toString(10), 10);\n  }\n\n  static fromMolina(molina) {\n    return new Currency(\n      new BN(molina.toString())\n    );\n  }\n\n  /**\n     * Gets the BigNumber instance.\n     *\n     * @returns {BigNumber}\n     */\n  get value() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {string}\n     */\n  toString() {\n    return toFixed(this[P_VALUE]);\n  }\n\n  /**\n   * Gets a value indicating that the current value has more decimals than\n   * allowed.\n   */\n  isVague() {\n    return this.toStringOpt(5) !== this.toStringOpt(4);\n  }\n\n  /**\n   * Gets an optimized pascal value with less zeros as possible.\n   *\n   * @returns {string}\n   */\n  toStringOpt(decimals = 4) {\n    return toFixed(this[P_VALUE])\n      .replace(new RegExp('[0]+$'), '')\n      .replace(new RegExp('[\\.]+$'), '');\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {Number}\n     */\n  toMolina() {\n    return this[P_VALUE].toString();\n  }\n\n  /**\n   * Adds the given value to the current value and returns a **new**\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} addValue\n   * @returns {Currency}\n   */\n  add(addValue) {\n    return new Currency(\n      this.value.add(new Currency(addValue).value),\n    );\n  }\n\n  /**\n   * Adds the given value to the current value and returns a **new**\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} addValue\n   * @returns {Currency}\n   */\n  mul(val) {\n    return Currency.fromMolina(\n      this.value.mul(new BN(val))\n    );\n  }\n\n  /**\n     * Subtracts the given value from the current value and returns a\n     * **new** value.\n     *\n     * @param {Currency} subValue\n     * @returns {Currency}\n     */\n  sub(subValue) {\n    return new Currency(\n      this.value.sub(new Currency(subValue).value)\n    );\n  }\n\n  /**\n     * Gets a positive variant of the value. If the value is already\n     * positive, the current instance will be returned, else a new\n     * instance.\n     *\n     * @returns {Currency}\n     */\n  toPositive() {\n    if (this[P_VALUE].isNeg() === true) {\n      return new Currency(\n        this[P_VALUE].neg(),\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the given value is equal to the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  eq(value) {\n    return this[P_VALUE].eq(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gt(value) {\n    return this[P_VALUE].gt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lt(value) {\n    return this[P_VALUE].lt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lteq(value) {\n    return this[P_VALUE].lte(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gteq(value) {\n    return this[P_VALUE].gte(new Currency(value).value);\n  }\n\n  get bn() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the serialized version of this instance.\n     *\n     * @returns {Object}\n     */\n  serialize() {\n    return {\n      pascal: this.toStringOpt(),\n      molina: this.toMolina()\n    };\n  }\n}\n\nmodule.exports = Currency;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * The list of available curves in pascalcoin.\n */\nconst CURVES = {\n  0: 'empty',\n  714: 'secp256k1',\n  715: 'p384',\n  729: 'sect283k1',\n  716: 'p521'\n};\n\nconst XYL_PUBKEYS = {\n  714: {x: 32, y: 32},\n  715: {x: 48, y: 48},\n  716: {x: 66, y: 66},\n  729: {x: 36, y: 36},\n  0: {x: 0, y: 0}\n};\n\nconst L_PRIVKEYS = {\n  714: 32,\n  715: 48,\n  716: 66,\n  729: 36\n};\n\nconst ID = Symbol('id');\nconst NAME = Symbol('name');\n\n/**\n * Simple elliptic curve representation of keys in pascalcoin.\n */\nclass Curve {\n\n  /**\n   * Gets the curve name of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECP256K1() {\n    return 'secp256k1';\n  }\n\n  /**\n   * Gets the curve name of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P384() {\n    return 'p384';\n  }\n\n  /**\n   * Gets the curve name of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECT283K1() {\n    return 'sect283k1';\n  }\n\n  /**\n   * Gets the curve name of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P521() {\n    return 'p521';\n  }\n\n  /**\n   * Gets the curve id of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECP256K1() {\n    return 714;\n  }\n\n  /**\n   * Gets the curve id of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P384() {\n    return 715;\n  }\n\n  /**\n   * Gets the curve id of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECT283K1() {\n    return 729;\n  }\n\n  /**\n   * Gets the curve id of the p521 curve.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get CI_P521() {\n    return 716;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Number|String} curve\n   */\n  constructor(curve) {\n    if (typeof curve === 'number') {\n      if (CURVES[curve] === undefined) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[ID] = curve;\n      this[NAME] = CURVES[curve];\n    } else {\n      if (Object.values(CURVES).indexOf(curve.toString()) === -1) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[NAME] = curve.toString();\n      this[ID] = parseInt(Object.keys(CURVES)[Object.values(CURVES).indexOf(this[NAME])], 10);\n    }\n  }\n\n  /**\n     * Gets the id of the curve.\n     *\n     * @returns {Number}\n     */\n  get id() {\n    return this[ID];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[NAME];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  toString() {\n    return this.name;\n  }\n\n  /**\n     * Gets the default curve.\n     *\n     * @returns {Curve}\n     */\n  static getDefaultCurve() {\n    return new Curve(Curve.CI_SECP256K1);\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  xylPublicKey(xOrY) {\n    return XYL_PUBKEYS[this.id][xOrY];\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  lPrivateKey() {\n    return L_PRIVKEYS[this.id];\n  }\n\n  /**\n   * Gets a value indicating whether the key is supported for signing /\n   * generation etc.\n   *\n   * @returns {boolean}\n   */\n  get supported() {\n    return this.id !== Curve.CI_SECT283K1 && this.id !== 0;\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nconst P_PRIVATE_KEY = Symbol('private_key');\nconst P_PUBLIC_KEY = Symbol('public_key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a private and public keypair.\n */\nclass KeyPair {\n  /**\n     * Creates a new private-public keypair instance.\n     *\n     * @param {PrivateKey} privateKey\n     * @param {PublicKey} publicKey\n     */\n  constructor(privateKey, publicKey) {\n    this[P_CURVE] = privateKey.curve;\n    this[P_PRIVATE_KEY] = privateKey;\n    this[P_PUBLIC_KEY] = publicKey;\n\n    if (privateKey.curve.id !== publicKey.curve.id) {\n      throw new Error('Mixed up curves between private an public key');\n    }\n  }\n\n  /**\n     * Gets the private key.\n     *\n     * @returns {PrivateKey}\n     */\n  get privateKey() {\n    return this[P_PRIVATE_KEY];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBLIC_KEY];\n  }\n\n  /**\n     * Gets the curve used for the keypair.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = KeyPair;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\n\nconst P_KEY = Symbol('key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PrivateKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} key\n     * @param {Curve} curve\n     */\n  constructor(key, curve) {\n    this[P_KEY] = BC.from(key);\n    this[P_CURVE] = curve;\n\n    const privateKeyLength = curve.lPrivateKey();\n\n    if (this[P_KEY].length > privateKeyLength) {\n      throw new Error(`Invalid length for curve ${curve.name} - ` +\n          `expected <= ${privateKeyLength}, got ${this[P_KEY].length}`\n      );\n    }\n  }\n\n  /**\n     * Gets the key value.\n     *\n     * @returns {BC}\n     */\n  get key() {\n    return this[P_KEY];\n  }\n\n  /**\n     * Gets the ec key.\n     *\n     * @returns {BC}\n     */\n  get ec() {\n    return this.key;\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\nconst Curve = require('./Curve');\n\nconst P_X = Symbol('x');\nconst P_XL = Symbol('xl');\nconst P_Y = Symbol('y');\nconst P_YL = Symbol('yl');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PublicKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} x\n     * @param {BC|Buffer|Uint8Array|String} y\n     * @param {Curve} curve\n     */\n  constructor(x, y, curve) {\n    x = BC.from(x);\n    y = BC.from(y);\n\n    this[P_X] = x;\n    this[P_Y] = y;\n    this[P_XL] = x.length;\n    this[P_YL] = y.length;\n    this[P_CURVE] = curve;\n\n    if (this[P_XL] > curve.xylPublicKey('x') || this[P_YL] > curve.xylPublicKey('y')) {\n      throw new Error(`Invalid x and/or y length for curve ${curve.name} - ` +\n          `expected <= X${curve.xylPublicKey('x')}:Y${curve.xylPublicKey('y')}, ` +\n          `got X${this[P_XL]}:Y${this[P_YL]}`\n      );\n    }\n  }\n\n  /**\n     * Gets the X value of the key.\n     *\n     * @returns {BC}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the y value of the key.\n     *\n     * @returns {BC}\n     */\n  get y() {\n    return this[P_Y];\n  }\n\n  /**\n     * Gets the length of X.\n     *\n     * @returns {Number}\n     */\n  get yl() {\n    return this[P_YL];\n  }\n\n  /**\n     * Gets the length of Y.\n     *\n     * @returns {Number}\n     */\n  get xl() {\n    return this[P_XL];\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ec() {\n    return BC.concat(this.x, this.y);\n  }\n\n  /**\n   * Gets the ecdh public key.\n   *\n   * @returns {BC}\n   */\n  get ecdh() {\n    if (this.curve.id === Curve.CI_P521) {\n      return BC.concat(BC.fromHex('0400'), this.x, BC.fromHex('00'), this.y);\n    }\n\n    return BC.concat(BC.fromHex('04'), this.x, this.y);\n  }\n\n  /**\n     * Gets an empty public key instance.\n     *\n     * @returns {PublicKey}\n     */\n  static empty() {\n    return new PublicKey(\n      BC.fromString(''),\n      BC.fromString(''),\n      new Curve(0),\n    );\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Curve: require('./Curve'),\n  PrivateKey: require('./PrivateKey'),\n  PublicKey: require('./PublicKey'),\n  KeyPair: require('./KeyPair')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../BC');\nconst AccountNumber = require('./AccountNumber');\n\nconst P_BLOCK = Symbol('block');\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_MD160 = Symbol('md160');\n\n/**\n * Holds information about an operation hash.\n */\nclass OperationHash {\n  /**\n   * Constructor\n   *\n   * @param {Number} block\n   * @param {Number} account\n   * @param {Number} nOperation\n   * @param {BC|Buffer|Uint8Array|String} md160\n   */\n  constructor(block, account, nOperation, md160) {\n    this[P_BLOCK] = block;\n    this[P_ACCOUNT] = new AccountNumber(account);\n    this[P_N_OPERATION] = nOperation;\n    this[P_MD160] = BC.from(md160);\n\n    if (this[P_MD160].length !== 20) {\n      throw new Error('Invalid operation hash - md160 size !== 20 bytes.');\n    }\n  }\n\n  /**\n   * Gets the account that executed the operation.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the block number.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the number of operations for the executing account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the md160 of the op.\n   *\n   * @returns {BC}\n   */\n  get md160() {\n    return this[P_MD160];\n  }\n\n  /**\n   * Gets a value indicating whether the given ophash equals the current ophash.\n   *\n   * @param opHash\n   * @param ignoreBlock\n   * @return {boolean}\n   */\n  equals(opHash, ignoreBlock = false) {\n    let blockResult = true;\n\n    if (!ignoreBlock) {\n      blockResult = this.block === opHash.block;\n    }\n\n    return blockResult &&\n      this.nOperation === opHash.nOperation &&\n      this.account.account === opHash.account.account &&\n      this.md160.equals(opHash.md160);\n  }\n}\n\nmodule.exports = OperationHash;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AccountName: require('./AccountName'),\n  AccountNumber: require('./AccountNumber'),\n  Currency: require('./Currency'),\n  OperationHash: require('./OperationHash'),\n  Keys: require('./Keys')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nclass Util {\n\n  /**\n   * https://github.com/MauroJr/escape-regex/blob/master/index.js\n   * Tests are not performed.\n   *\n   * @param {String} string\n   * @returns {string}\n   */\n  /* istanbul ignore next */\n  static escapeRegex(string) {\n    return ('' + string).replace(/([?!${}*:()|=^[\\]\\/\\\\.+])/g, '\\\\$1');\n  }\n}\n\nmodule.exports = Util;\n","module.exports = {\n  Client: require('./src/Client'),\n  Executor: require('./src/Executor'),\n  Caller: require('./src/Caller'),\n  Actions: require('./src/Actions'),\n  Errors: require('./src/Errors'),\n  Types: require('./src/Types')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PARAMS = Symbol('params');\nconst P_METHOD = Symbol('method');\nconst P_EXECUTOR = Symbol('executor');\nconst P_DESTINATION_TYPE = Symbol('destination_type');\nconst P_RETURNS_ARRAY = Symbol('returns_array');\n\n/**\n * A basic action that holds the rpc method and its parameters.\n */\nclass BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    this[P_METHOD] = method;\n    this[P_PARAMS] = params;\n    this[P_EXECUTOR] = executor;\n    this[P_DESTINATION_TYPE] = DestinationType;\n    this[P_RETURNS_ARRAY] = returnsArray;\n  }\n\n  /**\n   * Gets the destination type.\n   *\n   * @returns {*}\n   */\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  /**\n   * Gets a value indicating whether the action returns an array.\n   *\n   * @returns {Boolean}\n   */\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Gets the params for the rpc call.\n     *\n   * @returns {Object}\n     */\n  get params() {\n    return this[P_PARAMS];\n  }\n\n  /**\n   * Changes a single param of the params object.\n   *\n   * @param {String} name\n   * @param {*} value\n   * @returns {BaseAction}\n   */\n  changeParam(name, value) {\n    this[P_PARAMS][name] = value;\n    return this;\n  }\n\n  /**\n     * Gets the method.\n     *\n     * @returns {*}\n     */\n  get method() {\n    return this[P_METHOD];\n  }\n\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Executes the current action and returns the raw result.\n     *\n     * @returns {Promise}\n     */\n  async execute() {\n    return this[P_EXECUTOR].execute(this);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = BaseAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\nconst PascalCoinInfo = require('@pascalcoin-sbx/common').PascalCoinInfo;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\n\n/**\n * An object that holds infos about an operation action. It extends the\n * BaseAction functionality by methods which are useful for operations.\n */\nclass OperationAction extends BaseAction {\n  /**\n   * Constructor\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.fee = new Currency(0);\n    this.params.payload = '';\n    this.params.payload_method = 'none';\n  }\n\n  /**\n     * Sets the payload of the action.\n     *\n     * @param {String|BC} payload\n     * @param {String} payloadMethod\n   * @param {String} password\n   * @param {PublicKey} pubkey\n     * @returns {OperationAction}\n     */\n  withPayload(payload, payloadMethod = 'none', password = null, pubkey = null) {\n    this.params.payload = payload;\n    this.params.payload_method = payloadMethod;\n    if (password !== null) {\n      this.params.pwd = password;\n    }\n    if (pubkey !== null) {\n      this.params.pubkey = pubkey;\n    }\n\n    return this;\n  }\n\n  /**\n     * Sets the fee.\n     *\n     * @param {Number|Currency} fee\n     * @returns {OperationAction}\n     */\n  withFee(fee) {\n    this.params.fee = new Currency(fee);\n    return this;\n  }\n\n  /**\n   * Sets the fee to the minimum.\n   *\n   * @returns {OperationAction}\n   */\n  withMinFee(lastKnownBlock = null) {\n    this.params.fee = PascalCoinInfo.MIN_FEE(lastKnownBlock);\n    return this;\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return super.isValid();\n  }\n}\n\nmodule.exports = OperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\n\n/**\n * Whenever a remote endpoint has paging possibilities, this action will be\n * returned.\n */\nclass PagedAction extends BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.changeParam('start', 0);\n    this.changeParam('max', 100);\n  }\n\n  set start(start) {\n    this.changeParam('start', start);\n    return this;\n  }\n\n  set max(max) {\n    this.changeParam('max', max);\n    return this;\n  }\n\n  /**\n   * Executes the current action and returns all results.\n   *\n   * @returns {Promise}\n   */\n  async executeAll(restEach = -1, restSeconds = -1, restCallback = null, report = null) {\n    let all = [];\n    let transformCallback = null;\n\n    await this.executeAllReport(([data, transform]) => {\n      if (transformCallback === null) {\n        transformCallback = transform;\n      }\n      data.forEach(item => all.push(item));\n      if (report !== null) {\n        report(all.length);\n      }\n    }, restEach, restSeconds, restCallback);\n    return [all, transformCallback];\n  }\n\n  /**\n   * Executes the current action and reports the results of each step to the\n   * given reporter.\n   *\n   * @returns {Promise}\n   */\n  async executeAllReport(reporter, restEach = -1, restSeconds = -1, restCallback = null) {\n    let result = [];\n    var reports = 0;\n\n    do {\n      if (restEach > -1 && reports > 0 && reports % restEach === 0) {\n        if (restCallback !== null) {\n          restCallback();\n        }\n        await (async () => {\n          return new Promise(function (resolve) {\n            setTimeout(function () {\n              resolve();\n            }, restSeconds * 1000);\n          });\n        })();\n      }\n\n      result = await this.execute();\n      if (result[0].length > 0) {\n        let c = reporter(result);\n        // being able to stop execution\n\n        if (c === false) {\n          return;\n        }\n        reports++;\n      }\n\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result[0].length > 0 && result[0].length === this.params.max);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = PagedAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst OperationAction = require('./OperationAction');\nconst BC = require('@pascalcoin-sbx/common').BC;\n\n/**\n * This object derives from an operation action and extends the functionality\n * by methods shared by cold wallet signing operations.\n */\nclass SignOperationAction extends OperationAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.last_n_operation = null;\n    this.params.rawoperations = null;\n  }\n\n  /**\n     * Sets the last n operation value.\n     *\n     * @param {Number} lastNOperation\n     * @return {SignOperationAction}\n     */\n  withLastNOperation(lastNOperation) {\n    this.params.last_n_operation = lastNOperation;\n    return this;\n  }\n\n  /**\n     * Sets the raw operations instance of a previous result.\n     *\n     * @param {BC|String} rawoperations\n     * @return {SignOperationAction}\n     */\n  withRawOperations(rawoperations) {\n    this.params.rawoperations = BC.from(rawoperations);\n  }\n\n  isValid() {\n    return super.isValid() && this.params.last_n_operation !== null;\n  }\n}\n\nmodule.exports = SignOperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  BaseAction: require('./BaseAction'),\n  OperationAction: require('./OperationAction'),\n  PagedAction: require('./PagedAction'),\n  SignOperationAction: require('./SignOperationAction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst jaysonBrowserClient = require('jayson/lib/client/browser');\nconst fetch = require('node-fetch');\nconst ConnectionError = require('./Errors/ConnectionError');\nconst ResultError = require('./Errors/ResultError');\n\nconst P_CLIENT = Symbol('client');\n\n/**\n * A caller object that can call JSON-RPC methods.\n */\nclass Caller {\n  /**\n     * Creates a new caller instance.\n     *\n     * @param {String} host\n     */\n  constructor(host) {\n    this[P_CLIENT] = jaysonBrowserClient((request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      return fetch(host, options)\n        .then(res => res.text())\n        .then((text) => {\n          callback(null, text);\n        })\n        .catch((err) => {\n          callback(err);\n        });\n    });\n  }\n\n  /**\n     * Calls the given method with the given params and returns a promise.\n     *\n     * @param {String}method\n     * @param {Object} params\n     * @returns {Promise<any>}\n     */\n  call(method, params) {\n    return new Promise((resolve, reject) => {\n      this[P_CLIENT].request(method, params, (err, error, result) => {\n        if (err !== null || error !== undefined || result === undefined) {\n          if (err !== null && err.constructor.name === 'FetchError') {\n            return reject(new ConnectionError(err));\n          }\n          if (error !== null && error !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          if (result !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          return resolve(result);\n        }\n        return resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Caller;\n","/**\n* Copyright (c) Benjamin Ansbach - all rights reserved.\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nconst Executor = require('./Executor');\nconst RPCCaller = require('./Caller');\nconst BaseAction = require('./Actions/BaseAction');\nconst PagedAction = require('./Actions/PagedAction');\nconst OperationAction = require('./Actions/OperationAction');\nconst SignOperationAction = require('./Actions/SignOperationAction');\nconst Account = require('./Types/Account');\nconst Block = require('./Types/Block');\nconst SignedMessage = require('./Types/SignedMessage');\nconst NodeStatus = require('./Types/NodeStatus');\nconst Operation = require('./Types/Operation');\nconst Sender = require('./Types/Sender');\nconst Receiver = require('./Types/Receiver');\nconst Changer = require('./Types/Changer');\nconst Connection = require('./Types/Connection');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n* A simple rpc client that will prepare an action that can be executed against\n* a node.\n*/\nclass Client {\n\n  /**\n   * Returns a standard instance pointing to the given rpc host node.\n   *\n   * @param {String} rpcHostAddress\n   * @returns {Client}\n   */\n  static factory(rpcHostAddress) {\n    return new Client(\n      new Executor(\n        new RPCCaller(rpcHostAddress),\n      ),\n    );\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Executor} executor\n   */\n  constructor(executor) {\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n   * Adds nodes the remote node should connect to.\n   *\n   * @param {String[]} nodes - The list of nodes (will be transformed to a semicolon separated list)\n   *\n   * @returns {BaseAction}\n   */\n  addNode({\n    nodes\n  }) {\n    return new BaseAction('addnode', {\n      nodes: nodes.join(';')\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an account with the given account number.\n   *\n   * @param {AccountNumber|Number|String} account\n   *\n   * @returns {BaseAction}\n   */\n  getAccount({\n    account\n  }) {\n    return new BaseAction('getaccount', {\n      account: new AccountNumber(account)\n    }, this[P_EXECUTOR], Account, false);\n  }\n\n  /**\n   * Searches for accounts.\n   *\n   * @param {AccountName|String|null} name\n   * @param {Number|null} type\n   * @param {Boolean|null} onlyAccountsForSale\n   * @param {Boolean|null} exact\n   * @param {Currency|null} minBalance\n   * @param {Currency|null} maxBalance\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  findAccounts({\n    name = null,\n    type = null,\n    onlyAccountsForSale = null,\n    exact = null,\n    minBalance = null,\n    maxBalance = null,\n    pubkey = null\n  }) {\n    return new PagedAction('findaccounts', {\n      name: name !== null ? new AccountName(name) : name,\n      type: type !== null ? parseInt(type, 10) : type,\n      only_accounts_for_sale: onlyAccountsForSale,\n      exact,\n      min_balance: minBalance !== null ? new Currency(minBalance) : minBalance,\n      max_balance: maxBalance !== null ? new Currency(maxBalance) : maxBalance,\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns all accounts of a wallet with the given public key\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletAccounts({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletaccounts', {\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns the number of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletAccountsCount({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletaccountscount', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the accumulated balance of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletCoins({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletcoins', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the list of public keys managed in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletPubKeys({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletpubkeys', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Gets the info of a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletPubKey({\n    pubkey\n  }) {\n    return new BaseAction('getwalletpubkey', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Imports a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   * @param {String|null} name\n   *\n   * @returns {BaseAction}\n   */\n  inportPubKey({\n    pubkey,\n    name = null\n  }) {\n    return new BaseAction('importpubkey', {\n      pubkey,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Gets the information of a block\n   *\n   * @param {Number} block\n   *\n   * @returns {BaseAction}\n   */\n  getBlock({\n    block\n  }) {\n    return new BaseAction('getblock', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Block, false);\n  }\n\n  /**\n   * Gets a list of blocks\n   *\n   * @param {Number|null} last\n   * @param {Number|null} start\n   * @param {Number|null} end\n   *\n   * @returns {BaseAction}\n   */\n  getBlocks({\n    last = null,\n    start = null,\n    end = null\n  }) {\n    return new BaseAction('getblocks', {\n      last: last !== null ? parseInt(last, 10) : last,\n      start: start !== null ? parseInt(start, 10) : start,\n      end: end !== null ? parseInt(end, 10) : end\n    }, this[P_EXECUTOR], Block, true);\n  }\n\n  /**\n   * Gets the list of all blocks.\n   *\n   * @returns {BaseAction}\n   */\n  getBlockCount() {\n    return new BaseAction('getblockcount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an operation in a block\n   *\n   * @param {Number} block\n   * @param {Number} opblock\n   *\n   * @returns {BaseAction}\n   */\n  getBlockOperation({\n    block,\n    opblock\n  }) {\n    return new BaseAction('getblockoperation', {\n      block: block !== null ? parseInt(block, 10) : block,\n      opblock: opblock !== null ? parseInt(opblock, 10) : opblock\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Get all operations in a block\n   *\n   * @param {Number} block\n   *\n   * @returns {PagedAction}\n   */\n  getBlockOperations({\n    block\n  }) {\n    return new PagedAction('getblockoperations', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Get all operations of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number|null} depth\n   * @param {Number|null} startblock\n   *\n   * @returns {PagedAction}\n   */\n  getAccountOperations({\n    account,\n    depth = null,\n    startblock = null\n  }) {\n    return new PagedAction('getaccountoperations', {\n      account: new AccountNumber(account),\n      depth: depth !== null ? parseInt(depth, 10) : depth,\n      startblock: startblock !== null ? parseInt(startblock, 10) : startblock\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets all pending operations\n   *\n   * @returns {PagedAction}\n   */\n  getPendings() {\n    return new PagedAction('getpendings', {}, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets the number of pending operations\n   *\n   * @returns {BaseAction}\n   */\n  getPendingsCount() {\n    return new BaseAction('getpendingscount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Decodes the given operation hash\n   *\n   * @param {OperationHash} ophash\n   *\n   * @returns {BaseAction}\n   */\n  decodeOpHash({\n    ophash\n  }) {\n    return new BaseAction('decodeophash', {\n      ophash\n    }, this[P_EXECUTOR], OperationHash, false);\n  }\n\n  /**\n   * Searches for an operation\n   *\n   * @param {OperationHash|null} ophash\n   *\n   * @returns {BaseAction}\n   */\n  findOperation({\n    ophash = null\n  }) {\n    return new BaseAction('findoperation', {\n      ophash\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for an operation signed by account and with n_operation, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperation\n   * @param {Number|null} block\n   *\n   * @returns {BaseAction}\n   */\n  findNOperation({\n    account,\n    nOperation,\n    block = null\n  }) {\n    return new BaseAction('findnoperation', {\n      account: new AccountNumber(account),\n      n_operation: nOperation !== null ? parseInt(nOperation, 10) : nOperation,\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for operations signed by account within an n_operation range, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperationMin\n   * @param {Number} nOperationMax\n   *\n   * @returns {PagedAction}\n   */\n  findNOperations({\n    account,\n    nOperationMin,\n    nOperationMax\n  }) {\n    return new PagedAction('findnoperations', {\n      account: new AccountNumber(account),\n      n_operation_min: nOperationMin !== null ? parseInt(nOperationMin, 10) : nOperationMin,\n      n_operation_max: nOperationMax !== null ? parseInt(nOperationMax, 10) : nOperationMax\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {Currency} amount\n   *\n   * @returns {OperationAction}\n   */\n  sendTo({\n    sender,\n    target,\n    amount\n  }) {\n    return new OperationAction('sendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} senderPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} targetPubkey\n   * @param {Currency} amount\n   *\n   * @returns {SignOperationAction}\n   */\n  signSendTo({\n    sender,\n    target,\n    senderPubkey,\n    targetPubkey,\n    amount\n  }) {\n    return new SignOperationAction('signsendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      sender_pubkey: senderPubkey,\n      target_pubkey: targetPubkey,\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Changes the key of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {OperationAction}\n   */\n  changeKey({\n    account,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new OperationAction('changekey', {\n      account: new AccountNumber(account),\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of multiple accounts\n   *\n   * @param {AccountNumber[]|Number[]|String[]} accounts\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  changeKeys({\n    accounts,\n    newPubkey\n  }) {\n    return new OperationAction('changekeys', {\n      accounts: accounts.map((acc) => new AccountNumber(acc)),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change key operation\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} oldPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeKey({\n    account,\n    oldPubkey,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new SignOperationAction('signchangekey', {\n      account: new AccountNumber(account),\n      old_pubkey: oldPubkey,\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Lists an account for sale\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  listAccountForSale({\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new OperationAction('listaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a list operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {SignOperationAction}\n   */\n  signListAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new SignOperationAction('signlistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Delists an account\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {OperationAction}\n   */\n  DelistAccountForSale({\n    accountSigner,\n    accountTarget\n  }) {\n    return new OperationAction('delistaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a delist operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {SignOperationAction}\n   */\n  signDelistAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget\n  }) {\n    return new SignOperationAction('signdelistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Buys an account\n   *\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency|null} price\n   * @param {AccountNumber|Number|String|null} sellerAccount\n   *\n   * @returns {OperationAction}\n   */\n  buyAccount({\n    buyerAccount,\n    accountToPurchase,\n    price = null,\n    sellerAccount = null\n  }) {\n    return new OperationAction('buyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: price !== null ? new Currency(price) : price,\n      seller_account: sellerAccount !== null ? new AccountNumber(sellerAccount) : sellerAccount\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a buy account operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency} price\n   * @param {AccountNumber|Number|String} sellerAccount\n   *\n   * @returns {SignOperationAction}\n   */\n  signBuyAccount({\n    signerPubkey,\n    buyerAccount,\n    accountToPurchase,\n    price,\n    sellerAccount\n  }) {\n    return new SignOperationAction('signbuyaccount', {\n      signer_pubkey: signerPubkey,\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: new Currency(price),\n      seller_account: new AccountNumber(sellerAccount)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Changes account infos\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {OperationAction}\n   */\n  changeAccountInfo({\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new OperationAction('changeaccountinfo', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change account info operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeAccountInfo({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new SignOperationAction('signchangeaccountinfo', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Signs a message using the given public key\n   *\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  signMessage({\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('signmessage', {\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Verifies a signature\n   *\n   * @param {BC} signature\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  verifySign({\n    signature,\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('verifysign', {\n      signature,\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Removes an operation from the given rawoperations.\n   *\n   * @param {BC} rawoperations\n   * @param {Number} index\n   *\n   * @returns {BaseAction}\n   */\n  operationsDelete({\n    rawoperations,\n    index\n  }) {\n    return new BaseAction('operationsdelete', {\n      rawoperations,\n      index: index !== null ? parseInt(index, 10) : index\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the information about the given operation\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  operationsInfo({\n    rawoperations\n  }) {\n    return new BaseAction('operationsinfo', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes the given operations\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  executeOperations({\n    rawoperations\n  }) {\n    return new BaseAction('executeoperations', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Returns the current node status\n   *\n   * @returns {BaseAction}\n   */\n  nodeStatus() {\n    return new BaseAction('nodestatus', {}, this[P_EXECUTOR], NodeStatus, false);\n  }\n\n  /**\n   * Encodes a public key to a pascalcoin public key\n   *\n   * @param {BC} x\n   * @param {BC} y\n   * @param {Number} ecNid\n   *\n   * @returns {BaseAction}\n   */\n  encodePubKey({\n    x,\n    y,\n    ecNid\n  }) {\n    return new BaseAction('encodepubkey', {\n      x,\n      y,\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decodes an encoded public key.\n   *\n   * @param {BC} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  decodePubKey({\n    pubkey\n  }) {\n    return new BaseAction('decodepubkey', {\n      pubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Encrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String} payloadMethod\n   * @param {String|null} pwd\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  payloadEncrypt({\n    payload,\n    payloadMethod,\n    pwd = null,\n    pubkey = null\n  }) {\n    return new BaseAction('payloadencrypt', {\n      payload,\n      payload_method: payloadMethod,\n      pwd,\n      pubkey\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String[]} pwds\n   *\n   * @returns {BaseAction}\n   */\n  payloadDecrypt({\n    payload,\n    pwds\n  }) {\n    return new BaseAction('payloaddecrypt', {\n      payload,\n      pwds\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the connections of a node.\n   *\n   * @returns {BaseAction}\n   */\n  getConnections() {\n    return new BaseAction('getconnections', {}, this[P_EXECUTOR], Connection, true);\n  }\n\n  /**\n   * Generates a new key and adds it to the nodes wallet.\n   *\n   * @param {Number} ecNid\n   * @param {String} name\n   *\n   * @returns {BaseAction}\n   */\n  addNewKey({\n    ecNid,\n    name\n  }) {\n    return new BaseAction('addnewkey', {\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Locks the wallet.\n   *\n   * @returns {BaseAction}\n   */\n  lock() {\n    return new BaseAction('lock', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Unlocks the wallet.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  unlock({\n    pwd\n  }) {\n    return new BaseAction('unlock', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Sets the wallet password.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  setWalletPassword({\n    pwd\n  }) {\n    return new BaseAction('setwalletpassword', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Stops the node.\n   *\n   * @returns {BaseAction}\n   */\n  stopNode() {\n    return new BaseAction('stopnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Starts the node.\n   *\n   * @returns {BaseAction}\n   */\n  startNode() {\n    return new BaseAction('startnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Cleans the BlackList.\n   *\n   * @returns {BaseAction}\n   */\n  cleanBlackList() {\n    return new BaseAction('cleanblacklist', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets IP stats\n   *\n   * @returns {BaseAction}\n   */\n  nodeIPStats() {\n    return new BaseAction('node_ip_stats', {}, this[P_EXECUTOR], Object, true);\n  }\n\n  /**\n   * Adds an operation to a multioperation\n   *\n   * @param {BC} rawoperations\n   * @param {Boolean} autoNOperation\n   * @param {Object[]|Sender[]} senders\n   * @param {Object[]|Receiver[]} receivers\n   * @param {Object[]|Changer[]} changesinfo\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationAddOperation({\n    rawoperations,\n    autoNOperation,\n    senders,\n    receivers,\n    changesinfo\n  }) {\n    return new BaseAction('multioperationaddoperation', {\n      rawoperations,\n      auto_n_operation: autoNOperation,\n      senders: senders.map((sen) => new Sender(sen)),\n      receivers: receivers.map((rec) => new Receiver(rec)),\n      changesinfo: changesinfo.map((chng) => new Changer(chng))\n    }, this[P_EXECUTOR], BC, true);\n  }\n\n  /**\n   * Signs the given rawoperations\n   *\n   * @param {BC} rawoperations\n   * @param {Object} accountsAndKeys\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOffline({\n    rawoperations,\n    accountsAndKeys\n  }) {\n    return new BaseAction('multioperationsignoffline', {\n      rawoperations,\n      accounts_and_keys: accountsAndKeys\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Signs the given rawoperations online\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOnline({\n    rawoperations\n  }) {\n    return new BaseAction('multioperationsignonline', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n}\n\nmodule.exports = Client;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ORIGINAL = Symbol('original');\nconst P_MESSAGE = Symbol('message');\n\nclass ConnectionError {\n  constructor(originalFetchError) {\n    this[P_ORIGINAL] = originalFetchError;\n    this[P_MESSAGE] = originalFetchError.message;\n  }\n\n  get original() {\n    return this[P_ORIGINAL];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ConnectionError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CODE = Symbol('code');\nconst P_MESSAGE = Symbol('message');\n\nclass ResultError {\n  constructor(code, message) {\n    this[P_CODE] = code;\n    this[P_MESSAGE] = message;\n  }\n\n  get code() {\n    return this[P_CODE];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ResultError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  ConnectionError: require('./ConnectionError'),\n  ResultError: require('./ResultError')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CALLER = Symbol('caller');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\nconst PublicKey = require('@pascalcoin-sbx/common').Types.Keys.PublicKey;\nconst KeyPair = require('@pascalcoin-sbx/common').Types.Keys.KeyPair;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst Block = require('./Types/Block');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst Account = require('./Types/Account');\n\nconst publicKeyCoder = new PublicKeyCoder();\nconst opHashCoder = new OperationHashCoder();\n\n/**\n * Simple function that transforms the values of an object to make them usable\n * in rpc calls.\n *\n * @param {Object} params\n * @returns {Object}\n */\nfunction transformRpcParams(params) {\n  const newParams = {};\n\n  Object.keys(params).forEach((field) => {\n    const item = params[field];\n\n    // we weill delete fields that are null\n    if (item === null) {\n\n    } else if (field.indexOf('pubkey') !== -1) {\n      // correct the field name..\n      let newField = field.replace('pubkey', 'enc_pubkey');\n\n      // and set the value\n      if (item instanceof BC) {\n        newParams[newField] = item.toHex();\n      } else if (item instanceof PublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item).toHex();\n      } else if (item instanceof WalletPublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else if (item instanceof KeyPair) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else {\n        newField = newField.replace('enc_pubkey', 'b58_pubkey');\n        newParams[newField] = item.toString();\n      }\n    } else if (field === 'payload' && !(item instanceof BC)) {\n      newParams[field] = BC.fromString(item).toHex();\n    } else if (field === 'max' || field === 'start' || field === 'end' || field === 'depth') {\n      newParams[field] = parseInt(item, 10);\n    } else if ((field === 'fee' || field === 'amount' || field === 'price') &&\n        !(params[field] instanceof Currency)\n    ) {\n      newParams[field] = new Currency(item);\n      if (newParams[field].isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      } else {\n        newParams[field] = newParams[field].toStringOpt();\n      }\n    } else if (typeof item === 'boolean') {\n      newParams[field] = item;\n    } else if (field === 'senders') {\n      newParams[field] = item.map(senderItem => {\n        let o = {\n          account: senderItem.account.account,\n          amount: senderItem.amount.toStringOpt(),\n          payload: senderItem.payload.toHex()\n        };\n\n        if (!isNaN(senderItem.nOperation)) {\n          o.n_operation = senderItem.nOperation;\n        }\n        return o;\n      });\n    } else if (field === 'receivers') {\n      newParams[field] = item.map(receiverItem => {\n        return {\n          account: receiverItem.account.account,\n          amount: receiverItem.amount.toStringOpt(),\n          payload: receiverItem.payload.toHex()\n        };\n      });\n    } else if (field === 'changesinfo') {\n      newParams[field] = item.map(changerItem => {\n        let o = {\n          account: changerItem.account.account\n        };\n\n        if (changerItem.newPublicKey !== null) {\n          o.new_b58_pubkey = new PublicKeyCoder().encodeToBase58(changerItem.newPublicKey);\n        }\n        if (changerItem.newName !== null) {\n          o.new_name = changerItem.newName.toString();\n        }\n        if (changerItem.newType !== null) {\n          o.new_type = changerItem.newType;\n        }\n\n        if (!isNaN(changerItem.nOperation)) {\n          o.n_operation = changerItem.nOperation;\n        }\n        return o;\n      });\n    } else if (item.constructor.name === 'Array') {\n      if (item.length > 0) {\n        newParams[field] = item;\n      }\n    } else if (item instanceof BC) {\n      newParams[field] = item.toHex();\n    } else if (item instanceof OperationHash) {\n      newParams[field] = opHashCoder.encodeToBytes(item).toHex();\n    } else if (item instanceof Account) {\n      newParams[field] = item.account.account; // NICE!!!!! :-D\n    } else if (item instanceof AccountNumber) {\n      newParams[field] = item.account;\n    } else if (item instanceof AccountName) {\n      newParams[field] = item.toString();\n    } else if (item instanceof Block) {\n      newParams[field] = item.block;\n    } else if (item instanceof Currency) {\n      if (item.isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      }\n      newParams[field] = item.toStringOpt();\n    } else if (typeof item === 'number') {\n      newParams[field] = item;\n    } else {\n      newParams[field] = item.toString();\n    }\n  });\n\n  return newParams;\n}\n\nfunction transformRpcResult(value, DestinationType) {\n  switch (DestinationType.name) {\n    case 'Boolean':\n      return !!value;\n    case 'String':\n      return value.toString();\n    case 'Object':\n      return value;\n    case 'BC':\n      return BC.from(value);\n    default:\n      return new DestinationType(value);\n  }\n};\n\n/**\n * This class will execute an rpc call and returns a promise.\n */\nclass Executor {\n  /**\n     * Constructor\n     *\n     * @param {Caller} caller\n     */\n  constructor(caller) {\n    this[P_CALLER] = caller;\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {BaseAction} action\n   * @param {Function|null} transformCallback\n   * @returns {Promise<any>}\n   */\n  async execute(action, transformCallback = null) {\n    transformCallback = transformCallback || this.transform(action.destinationType, action.returnsArray);\n    return new Promise((resolve, reject) => {\n      this[P_CALLER].call(action.method, transformRpcParams(action.params))\n        .then((response) => {\n          resolve([response, transformCallback]);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Transforms a raw response value to a special type.\n   *\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   * @returns {*}\n   */\n  transform(DestinationType, returnsArray) {\n    if (returnsArray) {\n      return function (value) {\n        return value.map(v => transformRpcResult(v, DestinationType));\n      };\n    }\n\n    return function (value) {\n      return transformRpcResult(value, DestinationType);\n    };\n  }\n}\n\nmodule.exports = Executor;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_INITIALIZATION_DATA = Symbol('__initialization_data');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  /**\n     * Constructor.\n     *\n   * @param {Object} initializationData\n     */\n  constructor(initializationData) {\n    if (new.target === Abstract) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n\n    this[P_INITIALIZATION_DATA] = initializationData;\n  }\n\n  /**\n     * Gets the initialization data. This should normally not be used at all but\n     * in case there are new fields which are not implemented in the library yet,\n     * the user will still have access to it.\n     *\n     * @returns {Object}\n     */\n  get __initializationData() {\n    return this[P_INITIALIZATION_DATA];\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_BALANCE = Symbol('balance');\nconst P_N_OPERATION = Symbol('n_operation');\nconst P_UPDATED_B = Symbol('updated_b');\nconst P_STATE = Symbol('state');\nconst P_NAME = Symbol('name');\nconst P_TYPE = Symbol('type');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\nconst P_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller_account');\nconst P_PRIVATE_SALE = Symbol('private_sale');\nconst P_NEW_ENC_PUBKEY = Symbol('new_enc_pubkey');\n\n/**\n * Represents an account.\n */\nclass Account extends Abstract {\n  /**\n   * The state of an account when it is listed for sale.\n   *\n   * @returns {string}\n   */\n  static get STATE_LISTED() {\n    return 'listed';\n  }\n\n  /**\n   * The state of an account when it is not listed.\n   *\n   * @returns {string}\n   */\n  static get STATE_NORMAL() {\n    return 'normal';\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_BALANCE] = new Currency(data.balance);\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_UPDATED_B] = parseInt(data.updated_b, 10);\n\n    if (data.state !== Account.STATE_NORMAL && data.state !== Account.STATE_LISTED) {\n      throw new Error('Invalid account state.');\n    }\n\n    this[P_STATE] = data.state;\n    this[P_NAME] = new AccountName(data.name);\n    this[P_TYPE] = data.type;\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    // when not listed\n    this[P_PRICE] = null;\n    this[P_SELLER_ACCOUNT] = null;\n    this[P_PRIVATE_SALE] = null;\n    this[P_NEW_ENC_PUBKEY] = null;\n\n    if (this[P_STATE] === Account.STATE_LISTED) {\n      this[P_PRICE] = new Currency(data.price);\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n      this[P_PRIVATE_SALE] = data.private_sale;\n      if (data.new_enc_pubkey !== '000000000000' && data.new_enc_pubkey !== undefined) {\n        this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n      }\n    }\n  }\n\n  /**\n   * Gets the account number of the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the public key of the account.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Currency}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the number of operations of this account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the block number when the account was last updated.\n   *\n   * @returns {Number}\n   */\n  get updatedB() {\n    return this[P_UPDATED_B];\n  }\n\n  /**\n   * Gets the state of the account (normal, listed).\n   *\n   * @returns {String}\n   */\n  get state() {\n    return this[P_STATE];\n  }\n\n  /**\n   * Gets the name of the account.\n   *\n   * @returns {AccountName}\n   */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n   * Gets the type of the account.\n   *\n   * @returns {Number}\n   */\n  get type() {\n    return this[P_TYPE];\n  }\n\n  /**\n   * Gets the block number until the account is locked when it's listed for\n   * sale.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the price of the account in case its listed.\n   *\n   * @returns {Currency|null}\n   */\n  get price() {\n    return this[P_PRICE];\n  }\n\n  /**\n   * Gets the account of the seller in case the account is listed for sale.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets a flag indicating whether the account is for sale. Attention:\n   * null and false = not for sale.\n   *\n   * @returns {boolean}\n   */\n  get privateSale() {\n    return !!this[P_PRIVATE_SALE];\n  }\n\n  /**\n   * Gets the new public key in case of a escrow.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets a value indicating whether the account is for sale.\n   *\n   * @returns {boolean}\n   */\n  isForSale() {\n    return this[P_STATE] === Account.STATE_LISTED;\n  }\n}\n\nmodule.exports = Account;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\nconst Abstract = require('./Abstract');\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_BLOCK = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_REWARD = Symbol('reward');\nconst P_FEE = Symbol('fee');\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('ver_a');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_TARGET = Symbol('target');\nconst P_NONCE = Symbol('nonce');\nconst P_PAYLOAD = Symbol('payload');\nconst P_SBH = Symbol('sbh');\nconst P_OPH = Symbol('oph');\nconst P_POW = Symbol('pow');\nconst P_HASHRATEKHS = Symbol('hashratekhs');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * Represents a block.\n */\nclass Block extends Abstract {\n  /**\n   * Creates a new instance of the Block class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_REWARD] = new Currency(data.reward);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_TARGET] = new BN(data.target.toString(), 10);\n    this[P_NONCE] = new BN(data.nonce.toString(), 10);\n    this[P_PAYLOAD] = data.payload;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_OPH] = BC.fromHex(data.oph);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_HASHRATEKHS] = new BN(data.hashratekhs.toString(), 10);\n    this[P_MATURATION] = parseInt(data.maturation, 10);\n    this[P_OPERATIONS] = null;\n    if (data.operations !== undefined) {\n      this[P_OPERATIONS] = parseInt(data.operations, 10);\n    }\n  }\n\n  /**\n   * Gets the number of a block.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the public key of the miner of the block.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the reward.\n   *\n   * @returns {Currency}\n   */\n  get reward() {\n    return this[P_REWARD];\n  }\n\n  /**\n   * Gets the collective fee awarded to the miner.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the version of the protocol.\n   *\n   * @returns {Number}\n   */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n   * Gets the protocol version of the miner.\n   *\n   * @returns {Number}\n   */\n  get verA() {\n    return this[P_VER_A];\n  }\n\n  /**\n   * Gets the UTC timestamp of the block.\n   *\n   * @returns {Number}\n   */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n   * Gets the used target.\n   *\n   * @returns {BigNumber}\n   */\n  get target() {\n    return this[P_TARGET];\n  }\n\n  /**\n   * Gets the calculated nonce.\n   *\n   * @returns {BigNumber}\n   */\n  get nonce() {\n    return this[P_NONCE];\n  }\n\n  /**\n   * Gets the payload of the miner.\n   *\n   * @returns {String}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the safebox hash.\n   *\n   * @returns {BC}\n   */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {BC}\n   */\n  get oph() {\n    return this[P_OPH];\n  }\n\n  /**\n   * Gets the POW.\n   *\n   * @returns {BC}\n   */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n   * Gets the hashrate in kh/s.\n   *\n   * @returns {BigNumber}\n   */\n  get hashratekhs() {\n    return this[P_HASHRATEKHS];\n  }\n\n  /**\n   * Gets the age of the block in terms of blocks.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the number of operations in the block.\n   *\n   * @returns {Number}\n   */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n   * Gets the list of accounts created.\n   *\n   * @returns {AccountNumber[]}\n   */\n  get createdAccounts() {\n    return [\n      new AccountNumber(this[P_BLOCK] * 5),\n      new AccountNumber(this[P_BLOCK] * 5 + 1),\n      new AccountNumber(this[P_BLOCK] * 5 + 2),\n      new AccountNumber(this[P_BLOCK] * 5 + 3),\n      new AccountNumber(this[P_BLOCK] * 5 + 4)\n    ];\n  }\n}\n\nmodule.exports = Block;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_NEW_ENC_PUBKEY = Symbol('newPublicKey');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\nconst P_SELLER_ACCOUNT = Symbol('sellerAccount');\nconst P_ACCOUNT_PRICE = Symbol('account_price');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('lockedUntilBlock');\nconst P_FEE = Symbol('fee');\n\n/**\n * Represents a Changer in an operation.\n */\nclass Changer extends Abstract {\n  /**\n   * Creates a new instance of the Changer class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_N_OPERATION] = null;\n    if (data.n_operation !== undefined) {\n      this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    }\n\n    this[P_NEW_ENC_PUBKEY] = null;\n    if (data.new_enc_pubkey !== undefined) {\n      this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n    }\n\n    this[P_NEW_NAME] = null;\n    if (data.new_name !== undefined) {\n      this[P_NEW_NAME] = new AccountName(data.new_name);\n    }\n\n    this[P_NEW_TYPE] = null;\n    if (data.new_type !== undefined) {\n      this[P_NEW_TYPE] = data.new_type;\n    }\n\n    this[P_SELLER_ACCOUNT] = null;\n    if (data.seller_account !== undefined) {\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n    }\n\n    this[P_ACCOUNT_PRICE] = null;\n    if (data.account_price !== undefined) {\n      this[P_ACCOUNT_PRICE] = new Currency(data.account_price);\n    }\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    this[P_FEE] = new Currency(0);\n    if (data.fee !== undefined) {\n      this[P_FEE] = new Currency(data.fee);\n    }\n  }\n\n  /**\n   * Gets the changed account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the n op of the account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the new public key.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the new name.\n   *\n   * @returns {String|null}\n   */\n  get newName() {\n    return this[P_NEW_NAME];\n  }\n\n  /**\n   * Gets the new type.\n   *\n   * @returns {Number|null}\n   */\n  get newType() {\n    return this[P_NEW_TYPE];\n  }\n\n  /**\n   * Gets the seller account.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets the sales price of the account.\n   *\n   * @returns {Currency|null}\n   */\n  get accountPrice() {\n    return this[P_ACCOUNT_PRICE];\n  }\n\n  /**\n   * Gets the block number until the account is blocked.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the fee for the change operation.\n   *\n   * @returns {Currency|null}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n}\n\nmodule.exports = Changer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_RECV = Symbol('recv');\nconst P_TIMEDIFF = Symbol('timediff');\nconst P_NETVER_A = Symbol('nerver_a');\nconst P_SECS = Symbol('secs');\nconst P_SERVER = Symbol('server');\nconst P_IP = Symbol('ip');\nconst P_NETVER = Symbol('netver');\nconst P_SENT = Symbol('sent');\nconst P_APPVER = Symbol('appver');\nconst P_PORT = Symbol('port');\n\n/**\n * Holds information about a node connection.\n */\nclass Connection extends Abstract {\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n    this[P_RECV] = parseInt(data.recv, 10);\n    this[P_TIMEDIFF] = parseInt(data.timediff, 10);\n    this[P_NETVER_A] = parseInt(data.netver_a, 10);\n    this[P_SECS] = parseInt(data.secs, 10);\n    this[P_SERVER] = !!data.server;\n    this[P_IP] = data.ip;\n    this[P_NETVER] = parseInt(data.netver, 10);\n    this[P_SENT] = parseInt(data.sent, 10);\n    this[P_APPVER] = data.appver;\n    this[P_PORT] = parseInt(data.port, 10);\n  }\n\n  /**\n   * Gets the number of received bytes from the connection.\n   *\n   * @returns {Number}\n   */\n  get recv() {\n    return this[P_RECV];\n  }\n\n  /**\n   * Gets the time difference of the current and the remote node in seconds.\n   *\n   * @returns {Number}\n   */\n  get timeDiff() {\n    return this[P_TIMEDIFF];\n  }\n\n  /**\n   * Net protocol available of other node\n   *\n   * @returns {Number}\n   */\n  get netVerA() {\n    return this[P_NETVER_A];\n  }\n\n  /**\n   * The duration of the connection.\n   *\n   * @returns {Number}\n   */\n  get secs() {\n    return this[P_SECS];\n  }\n\n  /**\n   * A flag indicating whether the other node is a server node (daemon).\n   * @returns {*}\n   */\n  get server() {\n    return this[P_SERVER];\n  }\n\n  /**\n   * The IP of the remote node.\n   *\n   * @returns {*}\n   */\n  get ip() {\n    return this[P_IP];\n  }\n\n  /**\n   * The netprotocol version of the other node.\n   *\n   * @returns {*}\n   */\n  get netVer() {\n    return this[P_NETVER];\n  }\n\n  /**\n   * The bytes sent to the other node.\n   *\n   * @returns {*}\n   */\n  get sent() {\n    return this[P_SENT];\n  }\n\n  /**\n   * The node version.\n   *\n   * @returns {*}\n   */\n  get appVer() {\n    return this[P_APPVER];\n  }\n\n  /**\n   * The port of the other node.\n   *\n   * @returns {*}\n   */\n  get port() {\n    return this[P_PORT];\n  }\n}\n\nmodule.exports = Connection;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('verA');\n\n/**\n * Holds information about a nodes version.\n */\nclass NetProtocol extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n  }\n\n  /**\n     * Gets the wallets protocol version.\n     *\n     * @returns {Number}\n     */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n     * Gets the miners protocol version.\n     *\n     * @returns {Number}\n     */\n  get verA() {\n    return this[P_VER_A];\n  }\n}\n\nmodule.exports = NetProtocol;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_BRECEIVED = Symbol('breceived');\nconst P_SERVERS_T = Symbol('servers_t');\nconst P_TSERVERS = Symbol('tservers');\nconst P_TOTAL = Symbol('total');\nconst P_BSEND = Symbol('bsend');\nconst P_SERVERS = Symbol('servers');\nconst P_CLIENTS = Symbol('clients');\nconst P_ACTIVE = Symbol('active');\nconst P_TCLIENTS = Symbol('tclients');\n\n/**\n * Class that holds netstats of a node server.\n */\nclass NetStats extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_BRECEIVED] = parseInt(data.breceived, 10);\n    this[P_SERVERS_T] = parseInt(data.servers_t, 10);\n    this[P_TSERVERS] = parseInt(data.tservers, 10);\n    this[P_TOTAL] = parseInt(data.total, 10);\n    this[P_BSEND] = parseInt(data.bsend, 10);\n    this[P_SERVERS] = parseInt(data.servers, 10);\n    this[P_CLIENTS] = parseInt(data.clients, 10);\n    this[P_ACTIVE] = parseInt(data.active, 10);\n    this[P_TCLIENTS] = parseInt(data.tclients, 10);\n  }\n\n  /**\n     * Gets the received bytes.\n     *\n     * @returns {Number}\n     */\n  get breceived() {\n    return this[P_BRECEIVED];\n  }\n\n  /**\n     * Gets the number of server connections\n     *\n     * @returns {Number}\n     */\n  get serversT() {\n    return this[P_SERVERS_T];\n  }\n\n  /**\n     * Gets the number of server connections.\n     *\n     * @returns {Number}\n     */\n  get tservers() {\n    return this[P_TSERVERS];\n  }\n\n  /**\n     * Gets the number of total connections.\n     *\n     * @returns {Number}\n     */\n  get total() {\n    return this[P_TOTAL];\n  }\n\n  /**\n     * Gets the number of bytes sent.\n     *\n     * @returns {Number}\n     */\n  get bsend() {\n    return this[P_BSEND];\n  }\n\n  /**\n     * Gets the number of servers that responded.\n     *\n     * @returns {Number}\n     */\n  get servers() {\n    return this[P_SERVERS];\n  }\n\n  /**\n     * Gets the number of client connections.\n     *\n     * @returns {Number}\n     */\n  get clients() {\n    return this[P_CLIENTS];\n  }\n\n  /**\n     * Gets the number of active connections.\n     *\n     * @returns {Number}\n     */\n  get active() {\n    return this[P_ACTIVE];\n  }\n\n  /**\n     * Gets the number of total client connections.\n     *\n     * @returns {Number}\n     */\n  get tclients() {\n    return this[P_TCLIENTS];\n  }\n}\n\nmodule.exports = NetStats;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_PORT = Symbol('port');\nconst P_LASTCON = Symbol('lastcon');\nconst P_ATTEMPTS = Symbol('attempts');\nconst P_IP = Symbol('ip');\n\n/**\n * Holds information about a single node server connection.\n */\nclass NodeServer extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LASTCON] = parseInt(data.lastcon, 10);\n    this[P_ATTEMPTS] = parseInt(data.attempts, 10);\n    this[P_IP] = data.ip;\n  }\n\n  /**\n     * Gets the port of the server.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets the timestamp of the last connection.\n     *\n     * @returns {Number}\n     */\n  get lastcon() {\n    return this[P_LASTCON];\n  }\n\n  /**\n     * Gets the number of connection attempts.\n     *\n     * @returns {Number}\n     */\n  get attempts() {\n    return this[P_ATTEMPTS];\n  }\n\n  /**\n     * Gets the IP of the node.\n     *\n     * @returns {String}\n     */\n  get ip() {\n    return this[P_IP];\n  }\n}\n\nmodule.exports = NodeServer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst NetProtocol = require('./NetProtocol');\nconst NetStats = require('./NetStats');\nconst NodeServer = require('./NodeServer');\n\nconst P_READY = Symbol('ready');\nconst P_READY_S = Symbol('ready_s');\nconst P_STATUS_S = Symbol('status_s');\nconst P_PORT = Symbol('port');\nconst P_LOCKED = Symbol('locked');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_BLOCKS = Symbol('blocks');\nconst P_NODESERVERS = Symbol('nodeservers');\nconst P_NETSTATS = Symbol('netstats');\nconst P_VERSION = Symbol('version');\nconst P_NETPROTOCOL = Symbol('netprotocol');\nconst P_SBH = Symbol('sbh');\nconst P_POW = Symbol('pow');\nconst P_OPENSSL = Symbol('openssl');\n\nclass NodeStatus extends Abstract {\n  constructor(data) {\n    super(data);\n\n    this[P_READY] = !!data.ready;\n    this[P_READY_S] = data.ready_s;\n    this[P_STATUS_S] = data.status_s;\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LOCKED] = !!data.locked;\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_BLOCKS] = parseInt(data.blocks, 10);\n    this[P_VERSION] = data.version;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_OPENSSL] = BC.fromHex(data.openssl);\n    this[P_NETPROTOCOL] = new NetProtocol(data.netprotocol);\n    this[P_NETSTATS] = new NetStats(data.netstats);\n    this[P_NODESERVERS] = data.nodeservers.map(ns => new NodeServer(ns));\n  }\n\n  /**\n     * Gets a flag indicating whether the node is ready.\n     *\n     * @returns {Boolean}\n     */\n  get ready() {\n    return this[P_READY];\n  }\n\n  /**\n     * Gets a string explaining the ready status.\n     *\n     * @returns {String}\n     */\n  get readyS() {\n    return this[P_READY_S];\n  }\n\n  /**\n     * Gets a string defining the status of the node.\n     *\n     * @returns {String}\n     */\n  get statusS() {\n    return this[P_STATUS_S];\n  }\n\n  /**\n     * Gets the port of the node.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets a value indicating whether the wallet is locked.\n     *\n     * @returns {Boolean}\n     */\n  get locked() {\n    return this[P_LOCKED];\n  }\n\n  /**\n     * Gets the timestamp where the node runs.\n     *\n     * @returns {Number}\n     */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {Number}\n     */\n  get blocks() {\n    return this[P_BLOCKS];\n  }\n\n  /**\n     * Gets the list of nodeservers.\n     *\n     * @returns {NodeServer[]}\n     */\n  get nodeservers() {\n    return this[P_NODESERVERS];\n  }\n\n  /**\n     * Gets the netstats\n     *\n     * @returns {NetStats}\n     */\n  get netstats() {\n    return this[P_NETSTATS];\n  }\n\n  /**\n     * Gets the node version info.\n     *\n     * @returns {Version}\n     */\n  get version() {\n    return this[P_VERSION];\n  }\n\n  /**\n     * Gets the info about the protocol versions.\n     *\n     * @returns {NetProtocol}\n     */\n  get netprotocol() {\n    return this[P_NETPROTOCOL];\n  }\n\n  /**\n     * Gets the last safebox hash.\n     *\n     * @returns {BC}\n     */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n     * Gets the last known POW.\n     *\n     * @returns {BC}\n     */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n     * Gets the openssl info.\n     *\n     * @returns {BC}\n     */\n  get openssl() {\n    return this[P_OPENSSL];\n  }\n}\n\nmodule.exports = NodeStatus;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\n\nconst opHashCoder = new OperationHashCoder();\n\nconst Sender = require('./Sender');\nconst Receiver = require('./Receiver');\nconst Changer = require('./Changer');\n\nconst P_VALID = Symbol('valid');\nconst P_ERRORS = Symbol('errors');\nconst P_BLOCK = Symbol('block');\nconst P_TIME = Symbol('time');\nconst P_OPBLOCK = Symbol('opblock');\nconst P_PAYLOAD = Symbol('payload');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPTYPE = Symbol('optype');\nconst P_ACCOUNT = Symbol('account');\nconst P_OPTXT = Symbol('optxt');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_BALANCE = Symbol('balance');\nconst P_OPHASH = Symbol('ophash');\nconst P_OLD_OPHASH = Symbol('old_ophash');\nconst P_SUBTYPE = Symbol('subtype');\nconst P_SIGNER_ACCOUNT = Symbol('signer_account');\nconst P_CHANGERS = Symbol('changers');\nconst P_SENDERS = Symbol('senders');\nconst P_RECEIVERS = Symbol('receivers');\n\n/**\n * A class thats holds the information about an operation.\n */\nclass Operation extends Abstract {\n  // The available optypes\n  static get BLOCKCHAIN_REWARD() {\n    return 0;\n  }\n\n  static get TRANSACTION() {\n    return 1;\n  }\n\n  static get CHANGE_KEY() {\n    return 2;\n  }\n\n  static get RECOVER_FUNDS() {\n    return 3;\n  }\n\n  static get LIST_FOR_SALE() {\n    return 4;\n  }\n\n  static get DELIST() {\n    return 5;\n  }\n\n  static get BUY() {\n    return 6;\n  }\n\n  static get CHANGE_KEY_ACCOUNT() {\n    return 7;\n  }\n\n  static get CHANGE_ACCOUNT_INFO() {\n    return 8;\n  }\n\n  static get MULTI_OPERATION() {\n    return 9;\n  }\n\n  static get DATA() {\n    return 10;\n  }\n\n  static get SUBTYPE_MINER() {\n    return 1;\n  }\n  static get SUBTYPE_DEVELOPER() {\n    return 2;\n  }\n  static get SUBTYPE_TX_SENDER() {\n    return 11;\n  }\n  static get SUBTYPE_TX_RECEIVER() {\n    return 12;\n  }\n  static get SUBTYPE_TX_BUY_BUYER() {\n    return 13;\n  }\n  static get SUBTYPE_TX_BUY_TARGET() {\n    return 14;\n  }\n  static get SUBTYPE_TX_BUY_SELLER() {\n    return 15;\n  }\n  static get SUBTYPE_CHANGE_KEY() {\n    return 21;\n  }\n  static get SUBTYPE_RECOVER() {\n    return 31;\n  }\n  static get SUBTYPE_LIST_PUBLIC() {\n    return 41;\n  }\n  static get SUBTYPE_LIST_PRIVATE() {\n    return 42;\n  }\n  static get SUBTYPE_DELIST() {\n    return 51;\n  }\n  static get SUBTYPE_BUY_BUYER() {\n    return 61;\n  }\n  static get SUBTYPE_BUY_TARGET() {\n    return 62;\n  }\n  static get SUBTYPE_BUY_SELLER() {\n    return 63;\n  }\n  static get SUBTYPE_CHANGE_KEY_SIGNED() {\n    return 71;\n  }\n  static get SUBTYPE_CHANGE_ACCOUNT_INFO() {\n    return 81;\n  }\n  static get SUBTYPE_MULTI_GLOBAL() {\n    return 91;\n  }\n  static get SUBTYPE_MULTI_ACCOUNT_INFO() {\n    return 92;\n  }\n  static get SUBTYPE_DATA_GLOBAL() {\n    return 101;\n  }\n  static get SUBTYPE_DATA_SENDER() {\n    return 102;\n  }\n  static get SUBTYPE_DATA_SIGNER() {\n    return 103;\n  }\n  static get SUBTYPE_DATA_RECEIVER() {\n    return 104;\n  }\n\n  /**\n   * Creates a new Operation instance from an rpc response.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_VALID] = true;\n    if (data.valid !== undefined) {\n      this[P_VALID] = !!data.valid;\n    }\n\n    this[P_ERRORS] = null;\n    if (data.errors !== undefined) {\n      this[P_ERRORS] = data.errors;\n    }\n\n    if (data.payload !== undefined) {\n      this[P_PAYLOAD] = BC.fromHex(data.payload);\n    } else {\n      this[P_PAYLOAD] = BC.fromHex('');\n    }\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_TIME] = parseInt(data.time, 10);\n    this[P_OPBLOCK] = parseInt(data.opblock, 10);\n    this[P_MATURATION] = 0;\n    // pending\n    if (data.maturation !== null) {\n      this[P_MATURATION] = parseInt(data.maturation, 10);\n    }\n\n    this[P_OPTYPE] = parseInt(data.optype, 10);\n    // multi-op\n    this[P_ACCOUNT] = null;\n    if (data.account !== undefined) {\n      this[P_ACCOUNT] = new AccountNumber(data.account);\n    }\n    this[P_OPTXT] = data.optxt;\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_BALANCE] = null;\n    if (data.balance !== undefined) {\n      this[P_BALANCE] = new Currency(data.balance);\n    }\n\n    this[P_OPHASH] = null;\n    if (data.ophash !== undefined) {\n      this[P_OPHASH] = BC.fromHex(data.ophash);\n      if (this[P_OPTYPE] !== Operation.BLOCKCHAIN_REWARD) {\n        this[P_OPHASH] = opHashCoder.decodeFromBytes(this[P_OPHASH]);\n      }\n    }\n\n    this[P_OLD_OPHASH] = null;\n    if (data.old_ophash !== undefined) {\n      this[P_OLD_OPHASH] = BC.fromHex(data.old_ophash);\n    }\n\n    this[P_SUBTYPE] = data.subtype;\n    this[P_SIGNER_ACCOUNT] = null;\n    if (data.signer_account !== undefined) {\n      this[P_SIGNER_ACCOUNT] = new AccountNumber(data.signer_account);\n    }\n\n    // eslint-disable-next-line no-multi-assign\n    this[P_SENDERS] = [];\n    this[P_RECEIVERS] = [];\n    this[P_CHANGERS] = [];\n\n    // loop given data and initialize objects\n    data.senders.forEach(s => this[P_SENDERS].push(new Sender(s)));\n    data.receivers.forEach(r => this[P_RECEIVERS].push(new Receiver(r)));\n    data.changers.forEach(c => this[P_CHANGERS].push(new Changer(c)));\n  }\n\n  /**\n   * Gets an indicator whether the operation was valid.\n   *\n   * @returns {Boolean}\n   */\n  get valid() {\n    return this[P_VALID];\n  }\n\n  /**\n   * If the operation is invalid you'll get the error message.\n   *\n   * @returns {String|null}\n   */\n  get errors() {\n    return this[P_ERRORS];\n  }\n\n  /**\n   * Gets the block that is associated with the operation.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the time of the operation.\n   *\n   * @returns {Number}\n   */\n  get time() {\n    return this[P_TIME];\n  }\n\n  /**\n   * Gets the position inside a block.\n   *\n   * @returns {Number}\n   */\n  get opBlock() {\n    return this[P_OPBLOCK];\n  }\n\n  /**\n   * Gets the age in blocks of the operation.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the type of the operation.\n   *\n   * @returns {Number}\n   */\n  get opType() {\n    return this[P_OPTYPE];\n  }\n\n  /**\n   * Gets the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets a textual representation of the operation.\n   *\n   * @returns {String}\n   */\n  get opTxt() {\n    return this[P_OPTXT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the fee.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Number}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {OperationHash}\n   */\n  get opHash() {\n    return this[P_OPHASH];\n  }\n\n  /**\n   * Gets the <= V2 operation Hash.\n   *\n   * @returns {BC|null}\n   */\n  get oldOpHash() {\n    return this[P_OLD_OPHASH];\n  }\n\n  /**\n   * Gets the subtype.\n   *\n   * @returns {String}\n   */\n  get subType() {\n    return this[P_SUBTYPE];\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get signerAccount() {\n    return this[P_SIGNER_ACCOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the list of changers.\n   *\n   * @returns {Changer[]}\n   */\n  get changers() {\n    return this[P_CHANGERS];\n  }\n\n  /**\n   * Gets the list of senders.\n   *\n   * @returns {Sender[]}\n   */\n  get senders() {\n    return this[P_SENDERS];\n  }\n\n  /**\n   * Gets the list of receivers.\n   *\n   * @returns {Receiver[]}\n   */\n  get receivers() {\n    return this[P_RECEIVERS];\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BLOCKCHAIN_REWARD operation.\n   *\n   * @returns {boolean}\n   */\n  isBlockchainReward() {\n    return this[P_OPTYPE] === Operation.BLOCKCHAIN_REWARD;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a TRANSACTION operation.\n   *\n   * @returns {boolean}\n   */\n  isTransaction() {\n    return this[P_OPTYPE] === Operation.TRANSACTION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKey() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a RECOVER_FUNDS operation.\n   *\n   * @returns {boolean}\n   */\n  isRecoverFunds() {\n    return this[P_OPTYPE] === Operation.RECOVER_FUNDS;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a LIST_FOR_SALE operation.\n   *\n   * @returns {boolean}\n   */\n  isListForSale() {\n    return this[P_OPTYPE] === Operation.LIST_FOR_SALE;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DELIST operation.\n   *\n   * @returns {boolean}\n   */\n  isDelist() {\n    return this[P_OPTYPE] === Operation.DELIST;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BUY operation.\n   *\n   * @returns {boolean}\n   */\n  isBuy() {\n    return this[P_OPTYPE] === Operation.BUY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY_ACCOUNT operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKeyAccount() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY_ACCOUNT;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_ACCOUNT_INFO operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeAccountInfo() {\n    return this[P_OPTYPE] === Operation.CHANGE_ACCOUNT_INFO;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a MULTI_OPERATION operation.\n   *\n   * @returns {boolean}\n   */\n  isMultiOperation() {\n    return this[P_OPTYPE] === Operation.MULTI_OPERATION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DATA operation.\n   *\n   * @returns {boolean}\n   */\n  isData() {\n    return this[P_OPTYPE] === Operation.DATA;\n  }\n\n  /**\n   * Gets a value indicating whether the op is pending.\n   *\n   * @returns {boolean}\n   */\n  isPending() {\n    return this[P_BLOCK] === 0;\n  }\n\n  /**\n   * Gets a value indicating whether the operation was not executed because of\n   * fees.\n   *\n   * @returns {boolean}\n   */\n  isZeroFeeError() {\n    return this.valid === false &&\n        this[P_ERRORS].indexOf('zero fee operations per block') > -1;\n  }\n}\n\nmodule.exports = Operation;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\n\n/**\n * Represents a receiver in an operation.\n */\nclass Receiver extends Abstract {\n  /**\n   * Creates a new instance of the Receiver class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the account of the receiver.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Receiver;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Represents a sender in an operation.\n */\nclass Sender extends Abstract {\n  /**\n   * Creates a new instance of the Sender class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the n operation of thwe sender.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the account of the sender.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Sender;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_DIGEST = Symbol('digest');\nconst P_PUBKEY = Symbol('public_key');\nconst P_SIGNATURE = Symbol('signature');\n\n/**\n * Represents a sender in an operation.\n */\nclass SignedMessage extends Abstract {\n  /**\n     * Creates a new instance of the Sender class.\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_DIGEST] = BC.fromHex(data.digest);\n    if (data.enc_pubkey !== undefined) {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    } else {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBase58(data.b58_pubkey);\n    }\n    this[P_SIGNATURE] = BC.fromHex(data.signature);\n  }\n\n  /**\n     * Gets the digest.\n     *\n     * @returns {BC}\n     */\n  get digest() {\n    return this[P_DIGEST];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBKEY];\n  }\n\n  /**\n     * Gets the signature.\n     *\n     * @returns {BC}\n     */\n  get amount() {\n    return this[P_SIGNATURE];\n  }\n}\n\nmodule.exports = SignedMessage;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Curve = require('@pascalcoin-sbx/common').Types.Keys.Curve;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst P_NAME = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('publicKey');\nconst P_CAN_USE = Symbol('can_user');\nconst P_B58_PUBKEY = Symbol('b58_pubkey');\nconst P_EC_NID = Symbol('ec_nid');\nconst P_X = Symbol('x');\nconst P_Y = Symbol('y');\n\n/**\n * Holds information about a public key in the wallet (fetched via rpc).\n */\nclass WalletPublicKey extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_NAME] = data.name;\n    this[P_ENC_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.publicKey));\n    this[P_CAN_USE] = !!data.can_use;\n\n    this[P_B58_PUBKEY] = null;\n    this[P_EC_NID] = null;\n    this[P_X] = null;\n    this[P_Y] = null;\n    if (data.b58_pubkey !== undefined) {\n      this[P_B58_PUBKEY] = data.b58_pubkey;\n    }\n    if (data.ec_nid !== undefined) {\n      this[P_EC_NID] = new Curve(parseInt(data.ec_nid, 10));\n    }\n    if (data.x !== undefined) {\n      this[P_X] = BC.fromHex(data.x);\n    }\n    if (data.y !== undefined) {\n      this[P_Y] = BC.fromHex(data.y);\n    }\n  }\n\n  /**\n     * Gets the name of the key.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {BC}\n     */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n     * Gets a flag indicating whether the key can be used.\n     *\n     * @returns {Boolean}\n     */\n  get canUse() {\n    return this[P_CAN_USE];\n  }\n\n  /**\n     * Gets the base58 public key if returned by the node.\n     *\n     * @returns {String|null}\n     */\n  get base58PublicKey() {\n    return this[P_B58_PUBKEY];\n  }\n\n  /**\n     * Gets the used curve if returned by the node.\n     *\n     * @returns {Curve|null}\n     */\n  get ecNid() {\n    return this[P_EC_NID];\n  }\n\n  /**\n     * Gets the X value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the Y value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get y() {\n    return this[P_Y];\n  }\n}\n\nmodule.exports = WalletPublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Account: require('./Account'),\n  Block: require('./Block'),\n  NodeStatus: require('./NodeStatus'),\n  NetStats: require('./NetStats'),\n  NetProtocol: require('./NetProtocol'),\n  NodeServer: require('./NodeServer'),\n  Operation: require('./Operation'),\n  Changer: require('./Changer'),\n  Receiver: require('./Receiver'),\n  Sender: require('./Sender'),\n  WalletPublicKey: require('./WalletPublicKey')\n};\n","/* (ignored) */"],"sourceRoot":""}