{"version":3,"sources":["webpack://@pascalcoin-sbx/json-rpc/webpack/universalModuleDefinition","webpack://@pascalcoin-sbx/json-rpc/webpack/bootstrap","webpack://@pascalcoin-sbx/json-rpc/../common/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/BC.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Abstract.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Endian.js","webpack://@pascalcoin-sbx/json-rpc/external \"stream\"","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/AbstractType.js","webpack://@pascalcoin-sbx/json-rpc/external \"zlib\"","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int32.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObject.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/CompositeType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/AbstractInt.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int16.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int8.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isFunction.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseGetTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObjectLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArray.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/BaseAction.js","webpack://@pascalcoin-sbx/json-rpc/external \"url\"","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Currency.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bn.js/lib/bn.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/module.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Block.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/WalletPublicKey.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Account.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_root.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/OperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Sender.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Receiver.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Changer.js","webpack://@pascalcoin-sbx/json-rpc/external \"http\"","webpack://@pascalcoin-sbx/json-rpc/./src/Executor.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Base58.js","webpack://@pascalcoin-sbx/json-rpc/external \"buffer\"","webpack://@pascalcoin-sbx/json-rpc/../common/src/PascalCoinInfo.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Sha.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/base.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Util.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int64.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/NOperation.js","webpack://@pascalcoin-sbx/json-rpc/./src/Caller.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseAssignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_defineProperty.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_Symbol.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_freeGlobal.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/eq.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/identity.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArrayLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isLength.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIndex.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isUndefined.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/v4.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ConnectionError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ResultError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/PagedAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/SignOperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeStatus.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetProtocol.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetStats.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeServer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Operation.js","webpack://@pascalcoin-sbx/json-rpc/external \"https\"","webpack://@pascalcoin-sbx/json-rpc/./index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Client.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bs58/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base-x/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/safe-buffer/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha256.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha512.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/KeyPair.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Repeating.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Decissive.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesFixedLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Currency.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OpType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/client/browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/extend.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/assignIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_copyObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_assignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getRawTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_objectToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isMasked.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_coreJsData.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_toSource.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_createAssigner.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_overRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_apply.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_setToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseSetToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/constant.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_shortOut.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIterateeCall.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/keysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_arrayLikeKeys.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseTimes.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isBuffer.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/stubFalse.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseUnary.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nodeUtil.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isPrototype.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nativeKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/negate.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/rng.js","webpack://@pascalcoin-sbx/json-rpc/external \"crypto\"","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/bytesToUuid.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/generateRequest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/node-fetch/lib/index.mjs","webpack://@pascalcoin-sbx/json-rpc/./src/Types/SignedMessage.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Connection.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Base58","require","BC","Endian","PascalCoinInfo","Sha","Util","Types","Coding","P_BUFFER","constructor","buffer","Buffer","from","[object Object]","data","stringType","Uint8Array","fromHex","e","fromString","hex","strict","length","Error","test","str","int","nBytes","parseInt","toString","instance","prepend","repeat","toBinary","toHex","lowerCase","toLowerCase","toUpperCase","toInt","hexLength","switchEndian","match","reverse","join","switchEndianIf","targetEndian","detect","slice","start","end","bytes","reduce","prev","curr","append","concat","equals","bc","compare","readInt8","offset","unsigned","readInt16","endian","method","readInt32","buf","allocUnsafe","P_INITIALIZATION_DATA","Abstract","initializationData","TypeError","__initializationData","detected","BIG_ENDIAN","LITTLE_ENDIAN","b","ArrayBuffer","a","Uint32Array","P_ID","P_FIXED_VALUE","P_HAS_FIXED_VALUE","P_DESCRIPTION","id","hasFixedValue","fixedValue","typeInfo","description","extra","hierarchy","encodedSize","decodeFromBytes","options","all","encodeToBytes","describe","type","fixed","withFixedValue","canDecode","AbstractInt","super","info","push","fromInt32","AbstractType","P_SUBTYPES","P_SIZE_ENCODED","subTypes","addSubType","field","toArray","obj","forEach","subType","values","objOrArray","empty","idx","subTypeValue","Array","isArray","arguments","decoded","encoded","P_ENDIAN","P_UNSIGNED","fromInt16","fromInt8","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","undefined","P_PARAMS","P_METHOD","P_EXECUTOR","P_DESTINATION_TYPE","P_RETURNS_ARRAY","params","executor","DestinationType","returnsArray","destinationType","changeParam","execute","isValid","BN","P_VALUE","toFixed","x","base","pow","dm","divmod","mod","div","isNegative","substr","Currency","pasc","isBN","split","negative","substring","comps","whole","fraction","molina","mul","add","neg","isVague","toStringOpt","decimals","replace","RegExp","toMolina","addValue","sub","subValue","toPositive","isNeg","eq","gt","lt","lteq","lte","gteq","gte","bn","serialize","pascal","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","words","red","_init","wordSize","parseHex","len","Math","min","charCodeAt","parseBase","num","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","ceil","j","w","off","limbLen","limbPow","total","word","imuln","_iaddn","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","out","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","positive","divn","umod","divRound","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","output","outLen","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","webpackPolyfill","deprecate","paths","children","P_ACCOUNT","P_CHECKSUM","P_CREATED_IN_BLOCK","P_IS_FOUNDATION_REWARD","AccountNumber","account","splitted","map","isNaN","calculateChecksum","floor","isDeveloperReward","checksum","createdInBlock","isFoundationReward","accountNumber","CURVES","0","714","715","729","716","XYL_PUBKEYS","L_PRIVKEYS","ID","NAME","Curve","CN_SECP256K1","CN_P384","CN_SECT283K1","CN_P521","CI_SECP256K1","CI_P384","CI_SECT283K1","CI_P521","curve","indexOf","keys","xylPublicKey","xOrY","lPrivateKey","supported","Int8","Int16","Int32","BytesWithoutLength","P_LENGTH_FIELD","P_BYTES_FIELD","byteSize","decodedSimple","CurveType","pkCoder","PublicKeyCoder","Pascal","Keys","PublicKey","P_BLOCK","P_ENC_PUBKEY","P_REWARD","P_FEE","P_VER","P_VER_A","P_TIMESTAMP","P_TARGET","P_NONCE","P_PAYLOAD","P_SBH","P_OPH","P_POW","P_HASHRATEKHS","P_MATURATION","P_OPERATIONS","block","enc_pubkey","reward","fee","ver","ver_a","timestamp","target","nonce","payload","sbh","oph","hashratekhs","maturation","operations","publicKey","verA","createdAccounts","P_NAME","P_CAN_USE","P_B58_PUBKEY","P_EC_NID","P_X","P_Y","can_use","b58_pubkey","ec_nid","canUse","base58PublicKey","ecNid","AccountName","P_BALANCE","P_N_OPERATION","P_UPDATED_B","P_STATE","P_TYPE","P_LOCKED_UNTIL_BLOCK","P_PRICE","P_SELLER_ACCOUNT","P_PRIVATE_SALE","P_NEW_ENC_PUBKEY","Account","STATE_LISTED","STATE_NORMAL","balance","n_operation","updated_b","state","locked_until_block","price","seller_account","private_sale","new_enc_pubkey","nOperation","updatedB","lockedUntilBlock","sellerAccount","privateSale","newPublicKey","isForSale","freeGlobal","freeSelf","Function","BaseAction","payload_method","withPayload","payloadMethod","password","pwd","withFee","withMinFee","lastKnownBlock","MIN_FEE","P_AMOUNT","amount","P_NEW_NAME","P_NEW_TYPE","P_ACCOUNT_PRICE","new_name","new_type","account_price","newName","newType","accountPrice","P_CALLER","OperationHash","OperationHashCoder","KeyPair","Block","WalletPublicKey","publicKeyCoder","opHashCoder","transformRpcResult","caller","action","transformCallback","Promise","resolve","reject","newParams","item","newField","senderItem","receiverItem","changerItem","new_b58_pubkey","encodeToBase58","transformRpcParams","then","response","catch","error","v","bs58","encode","decode","fromMolina","PIP_0010","INFLATION_REDUCTION","PIP_0009","RANDOM_HASH","PIP_0011","DEVELOPER_REWARD","sha256","sha512","buffers","hasher","SHA256","update","digest","SHA512","version","Convert","str2bin","bin","subarray","hex2bin","int2bin","integer","number2bin","f","Float64Array","set","base642bin","base64","strlen","charAt","atob","decodingTable","Int8Array","sextet_a","sextet_b","sextet_c","sextet_d","triple","bin2hex","uppercase","bin2str","c2","c3","String","fromCharCode","bin2longbin","longbin","bin2number","bin2base64","url","btoa","apply","encodingTable","octet_a","octet_b","octet_c","lh","rh","clear","fill","ind","litteendian","string","CHARS_TO_ESCAPE","REGEX_TO_ESCAPE","escapeRegex","ALLOWED_ALL","ALLOWED_START","validate","pos","toStringEscaped","c1","P_MD160","md160","P_KEY","P_CURVE","privateKeyLength","ec","P_XL","P_YL","yl","xl","ecdh","fromInt","validate64Bit","isUnsigned","StringWithoutLength","P_STRING_FIELD","AccountNumberType","jaysonBrowserClient","fetch","ConnectionError","ResultError","P_CLIENT","host","request","callback","body","headers","Content-Type","text","err","result","code","message","configurable","writable","getNative","func","global","other","isFunction","isLength","MAX_SAFE_INTEGER","reIsUint","rng","bytesToUuid","rnds","random","ii","P_ORIGINAL","P_MESSAGE","originalFetchError","original","P_CODE","executeAllReport","reporter","restEach","restSeconds","restCallback","reports","setTimeout","OperationAction","last_n_operation","rawoperations","withLastNOperation","lastNOperation","withRawOperations","NetProtocol","NetStats","NodeServer","P_READY","P_READY_S","P_STATUS_S","P_PORT","P_LOCKED","P_BLOCKS","P_NODESERVERS","P_NETSTATS","P_VERSION","P_NETPROTOCOL","P_OPENSSL","ready","ready_s","status_s","port","locked","blocks","openssl","netprotocol","netstats","nodeservers","readyS","statusS","P_BRECEIVED","P_SERVERS_T","P_TSERVERS","P_TOTAL","P_BSEND","P_SERVERS","P_CLIENTS","P_ACTIVE","P_TCLIENTS","breceived","servers_t","tservers","bsend","servers","clients","active","tclients","serversT","P_LASTCON","P_ATTEMPTS","P_IP","lastcon","attempts","ip","Sender","Receiver","Changer","P_VALID","P_ERRORS","P_TIME","P_OPBLOCK","P_OPTYPE","P_OPTXT","P_OPHASH","P_OLD_OPHASH","P_SUBTYPE","P_SIGNER_ACCOUNT","P_CHANGERS","P_SENDERS","P_RECEIVERS","Operation","BLOCKCHAIN_REWARD","TRANSACTION","CHANGE_KEY","RECOVER_FUNDS","LIST_FOR_SALE","DELIST","BUY","CHANGE_KEY_ACCOUNT","CHANGE_ACCOUNT_INFO","MULTI_OPERATION","DATA","SUBTYPE_MINER","SUBTYPE_DEVELOPER","SUBTYPE_TX_SENDER","SUBTYPE_TX_RECEIVER","SUBTYPE_TX_BUY_BUYER","SUBTYPE_TX_BUY_TARGET","SUBTYPE_TX_BUY_SELLER","SUBTYPE_CHANGE_KEY","SUBTYPE_RECOVER","SUBTYPE_LIST_PUBLIC","SUBTYPE_LIST_PRIVATE","SUBTYPE_DELIST","SUBTYPE_BUY_BUYER","SUBTYPE_BUY_TARGET","SUBTYPE_BUY_SELLER","SUBTYPE_CHANGE_KEY_SIGNED","SUBTYPE_CHANGE_ACCOUNT_INFO","SUBTYPE_MULTI_GLOBAL","SUBTYPE_MULTI_ACCOUNT_INFO","SUBTYPE_DATA_GLOBAL","SUBTYPE_DATA_SENDER","SUBTYPE_DATA_SIGNER","SUBTYPE_DATA_RECEIVER","valid","errors","time","opblock","optype","optxt","ophash","old_ophash","subtype","signer_account","senders","receivers","changers","opBlock","opType","opTxt","opHash","oldOpHash","signerAccount","isBlockchainReward","isTransaction","isChangeKey","isRecoverFunds","isListForSale","isDelist","isBuy","isChangeKeyAccount","isChangeAccountInfo","isMultiOperation","isData","isPending","isZeroFeeError","Client","Executor","Caller","Actions","Errors","RPCCaller","PagedAction","SignOperationAction","SignedMessage","NodeStatus","Connection","rpcHostAddress","addNode","nodes","Number","getAccount","findAccounts","onlyAccountsForSale","exact","minBalance","maxBalance","pubkey","only_accounts_for_sale","min_balance","max_balance","getWalletAccounts","getWalletAccountsCount","getWalletCoins","getWalletPubKeys","getWalletPubKey","inportPubKey","getBlock","getBlocks","last","getBlockCount","getBlockOperation","getBlockOperations","getAccountOperations","depth","startblock","getPendings","getPendingsCount","decodeOpHash","findOperation","findNOperation","findNOperations","nOperationMin","nOperationMax","n_operation_min","n_operation_max","sendTo","sender","signSendTo","senderPubkey","targetPubkey","sender_pubkey","target_pubkey","changeKey","newPubkey","accountSigner","new_pubkey","account_signer","changeKeys","accounts","signChangeKey","oldPubkey","old_pubkey","listAccountForSale","accountTarget","account_target","signListAccountForSale","signerPubkey","signer_pubkey","DelistAccountForSale","signDelistAccountForSale","buyAccount","buyerAccount","accountToPurchase","buyer_account","account_to_purchase","signBuyAccount","changeAccountInfo","signChangeAccountInfo","signMessage","verifySign","signature","operationsDelete","index","operationsInfo","executeOperations","nodeStatus","encodePubKey","decodePubKey","payloadEncrypt","payloadDecrypt","pwds","getConnections","addNewKey","lock","Boolean","unlock","setWalletPassword","stopNode","startNode","cleanBlackList","nodeIPStats","multiOperationAddOperation","autoNOperation","changesinfo","auto_n_operation","sen","rec","chng","multiOperationSignOffline","accountsAndKeys","accounts_and_keys","multiOperationSignOnline","basex","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","alloc","psz","zeroes","b256","it","vch","isBuffer","pbegin","pend","b58","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","allocUnsafeSlow","encoding","SlowBuffer","base_1","hashSize","K","init","H","bufferIndex","count","h0","h1","h2","h3","h4","h5","h6","h7","hash","selftest","cumulative","sha","toBeHashed","gamma0xl","gamma0xh","gamma0l","gamma0h","gamma1xl","gamma1xh","gamma1l","gamma1h","wrl","wrh","wr16l","chl","majl","majh","sig0l","sig0h","krl","t1l","t1h","t2l","h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","PrivateKey","P_PRIVATE_KEY","P_PUBLIC_KEY","privateKey","CompositeType","Repeating","Decissive","Core","Int64","StringWithLength","BytesWithLength","BytesFixedLength","NOperation","OpType","P_REPEAT_LIMIT","repeatLimit","counter","limitArrived","arr","P_SUBTYPE_RESOLVER","P_MARKER_FIELD","markerField","subTypeResolver","P_SIZE","PublicKeyType","omitXYLenghts","prefix","suffix","raw","decodeFromBase58","base58","PrivateKeyType","AccountNameType","CurrencyType","P_INT_TYPE","OperationHashType","extend","isUndefined","negate","uuid","generateRequest","ClientBrowser","callServer","defaults","reviver","replacer","generator","isBatch","isRaw","hasCallback","JSON","stringify","_parseResponse","responseText","parse","isError","filter","copyObject","createAssigner","keysIn","assignIn","assignValue","baseAssignValue","props","customizer","isNew","newValue","objValue","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","nativeObjectToString","isOwn","unmasked","uid","coreJsData","maskSrcKey","exec","IE_PROTO","baseRest","isIterateeCall","assigner","sources","guard","identity","overRest","setToString","nativeMax","args","array","otherArgs","thisArg","baseSetToString","shortOut","constant","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","lastCalled","stamp","remaining","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","argsTag","stubFalse","freeExports","nodeType","freeModule","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","typedArrayTags","freeProcess","process","types","binding","isPrototype","nativeKeysIn","isProto","Ctor","FUNC_ERROR_TEXT","predicate","crypto","randomBytes","byteToHex","bth","isString","jsonrpc","stringTag","__webpack_exports__","Headers","Request","Response","FetchError","stream__WEBPACK_IMPORTED_MODULE_0__","http__WEBPACK_IMPORTED_MODULE_1__","url__WEBPACK_IMPORTED_MODULE_2__","https__WEBPACK_IMPORTED_MODULE_3__","zlib__WEBPACK_IMPORTED_MODULE_4__","Readable","BUFFER","TYPE","Blob","blobParts","element","isView","byteOffset","ab","readable","_read","relativeStart","relativeEnd","span","slicedBuffer","blob","systemError","errno","captureStackTrace","convert","defineProperties","INTERNALS","PassThrough","Body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","disturbed","on","consumeBody","_this4","accum","accumBytes","abort","resTimeout","chunk","clearTimeout","delete","getAll","has","sort","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","ct","assign","_this2","_this3","charset","pop","convertBody","arrayBuffer","json","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","rawHeaders","headerNames","headerName","iterator","pairs","pair","getHeaders","_pairs$i","createHeadersIterator","kind","entries","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","getPrototypeOf","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","opts","status","contentType","statusText","ok","INTERNALS$2","parse_url","format_url","format","streamDestructionSupported","isRequest","parsedURL","href","inputBody","signal","isAbortSignal","redirect","follow","compress","agent","AbortError","PassThrough$1","resolve_url","protocol","hostname","contentLengthValue","totalBytes","getNodeRequestOptions","send","destroy","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","socket","createHeadersLenient","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","write","writeToStream","P_DIGEST","P_PUBKEY","P_SIGNATURE","P_RECV","P_TIMEDIFF","P_NETVER_A","P_SECS","P_SERVER","P_NETVER","P_SENT","P_APPVER","recv","timediff","netver_a","secs","server","netver","sent","appver","timeDiff","netVerA","netVer","appVer"],"mappings":"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","file":"@pascalcoin-sbx/json-rpc.node.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@pascalcoin-sbx/json-rpc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@pascalcoin-sbx/json-rpc\"] = factory();\n\telse\n\t\troot[\"@pascalcoin-sbx/json-rpc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 74);\n","module.exports = {\n  Base58: require('./src/Base58'),\n  BC: require('./src/BC'),\n  Endian: require('./src/Endian'),\n  PascalCoinInfo: require('./src/PascalCoinInfo'),\n  Sha: require('./src/Sha'),\n  Util: require('./src/Util'),\n  Types: require('./src/Types'),\n  Coding: require('./src/Coding')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./Endian');\n\nconst P_BUFFER = Symbol('buffer');\n\n/**\n * A BC value as defined in PascalCoin. In essence its a wrapper for\n * a buffer.\n */\nclass BC {\n  /**\n     * Constructor\n     *\n   * @param {Buffer|Uint8Array} buffer\n     */\n  constructor(buffer) {\n    this[P_BUFFER] = Buffer.from(buffer);\n  }\n\n  /**\n   * Gets a BC instance from the given value. If a string it expects it to be\n   * in hex format.\n   *\n   * This method it called everywhere, so we make sure that\n   *\n   * @param {Buffer|Uint8Array|BC|String} data\n   * @param {String} stringType\n   * @returns {BC}\n   */\n  static from(data, stringType = 'hex') {\n    if (data instanceof BC) {\n      return data;\n    } else if (data instanceof Buffer) {\n      return new BC(data);\n    } else if (data instanceof Uint8Array) {\n      return new BC(data);\n    }\n\n    if (stringType === 'hex') {\n      try {\n        return BC.fromHex(data);\n      } catch (e) {\n        return BC.fromString(data);\n      }\n    }\n\n    return BC.fromString(data);\n  }\n\n  /**\n   * Gets an empty BC.\n   *\n   * @returns {BC}\n   */\n  static empty() {\n    return BC.from([]);\n  }\n\n  /**\n     * Creates a new BC instance from the given hex string.\n     *\n   * @param {string} hex\n   * @param {Boolean} strict\n     * @returns {BC}\n     */\n  static fromHex(hex, strict = true) {\n    if (hex instanceof BC) {\n      return hex;\n    }\n\n    if (hex.length % 2 === 1) {\n      if (strict) {\n        throw new Error('Invalid hex - number of nibbles need to be divideable by 2');\n      } else {\n        hex = `0${hex}`; // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (hex.length > 0 && /^[0-9a-fA-F]+$/.test(hex) === false) {\n      throw new Error('Invalid hex');\n    }\n\n    return new BC(Buffer.from(hex, 'hex'));\n  }\n\n  /**\n     * Creates a new BC instance from the given string.\n     *\n     * @param {string} str\n     * @returns {BC}\n     */\n  static fromString(str) {\n    if (str instanceof BC) {\n      return str;\n    }\n\n    // TODO: UTF8?\n    return new BC(Buffer.from(str, 'utf8'));\n  }\n\n  /**\n     * Gets a new BC from an integer.\n     *\n     * @param {Number} int\n     * @param {Number} nBytes\n     * @returns {BC}\n     */\n  static fromInt(int, nBytes = null) {\n    let hex = parseInt(int, 10).toString(16);\n\n    const instance = BC.fromHex(hex, false);\n\n    if (nBytes !== null && instance.length < nBytes) {\n      return instance.prepend(BC.fromHex('00'.repeat(nBytes - instance.length)));\n    }\n    return instance;\n  }\n\n  /**\n     * Gets the binary presentation of the hexa string.\n     *\n     * @returns {string}\n     */\n  toBinary() {\n    return this[P_BUFFER].toString('binary');\n  }\n\n  /**\n     * Gets the BC as a string.\n     *\n     * @returns {string}\n     * // TODO: UTF8?\n     */\n  toString() {\n    return this[P_BUFFER].toString('utf8');\n  }\n\n  /**\n   * Gets the BC as hex.\n   *\n   * @returns {string}\n   */\n  toHex(lowerCase = false) {\n    if (lowerCase) {\n      return this[P_BUFFER].toString('hex').toLowerCase();\n    }\n\n    return this[P_BUFFER].toString('hex').toUpperCase();\n  }\n\n  /**\n     * Gets the integer value of the BC.\n     *\n     * @return {Number}\n     */\n  toInt() {\n    return parseInt(this.toHex(), 16);\n  }\n\n  /**\n     * Gets the length of BC bytes.\n     *\n     * @returns {number}\n     */\n  get length() {\n    return this[P_BUFFER].length;\n  }\n\n  /**\n     * Gets the length of the parsed BC (the bytes).\n     *\n     * @returns {number}\n     */\n  get hexLength() {\n    return this.length * 2;\n  }\n\n  /**\n     * Gets a copy of the current buffer.\n     *\n     * @returns {Buffer}\n     */\n  get buffer() {\n    return Buffer.from(this[P_BUFFER].toString('hex'), 'hex');\n  }\n\n  /**\n   * Switches the endianness of the BC.\n   *\n   * @returns {BC}\n   */\n  switchEndian() {\n    return BC.fromHex(\n      this[P_BUFFER].toString('hex').match(/../g).reverse().join(''),\n    );\n  }\n\n  /**\n   * Switches the endianness of the BC.\n   *\n   * @returns {BC}\n   */\n  switchEndianIf(targetEndian) {\n    if (Endian.detect() !== targetEndian) {\n      return this.switchEndian();\n    }\n\n    return this;\n  }\n\n  /**\n     * Returns a sub-BC defined by the start and end position.\n     *\n     * @param {Number}start\n     * @param {Number} end\n     * @returns {BC}\n     */\n  slice(start, end = null) {\n    if (end === null) {\n      return new BC(this[P_BUFFER].slice(start));\n    }\n\n    return new BC(this[P_BUFFER].slice(start, end));\n  }\n\n  /**\n     * Concatenates one or more BC instances and returns a new instance.\n     *\n     * @param {...BC} bytes\n     * @returns {BC}\n     */\n  static concat(...bytes) {\n    return BC.fromHex(bytes.reduce((prev, curr) => {\n      if (prev instanceof Object) {\n        return `${prev.toHex()}${curr.toHex()}`;\n      }\n      return `${prev}${curr.toHex()}`;\n    }));\n  }\n\n  /**\n   * Appends a single BC instance to the current BC and\n   * returns a new instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bytes\n   * @returns {BC}\n   */\n  append(bytes) {\n    return BC.concat(this, BC.from(bytes));\n  }\n\n  /**\n     * Appends a single BC instance to the current BC and\n     * returns a new instance.\n     *\n     * @param {BC|Buffer|Uint8Array|String} bytes\n     * @returns {BC}\n     */\n  prepend(bytes) {\n    return BC.concat(BC.from(bytes), this);\n  }\n\n  /**\n   * Gets a value indicating the current bc equals the given bc.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @returns {boolean}\n   */\n  equals(bc) {\n    return Buffer.compare(BC.from(bc).buffer, this.buffer) === 0;\n  }\n\n  /**\n   * Reads an 8 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @returns {Number}\n   */\n  readInt8(offset, unsigned = true) {\n    return this[P_BUFFER][unsigned ? 'readUInt8' : 'readInt8'](offset);\n  }\n\n  /**\n   * Reads a 16 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt16(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int16${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Reads a 32 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt32(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int32${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Creates an 8 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @returns {BC}\n   */\n  static fromInt8(value, unsigned = true) {\n    const method = `write${unsigned ? 'U' : ''}Int8`;\n    const buf = Buffer.allocUnsafe(1);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 16 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt16(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int16${endian}`;\n    const buf = Buffer.allocUnsafe(2);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 32 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt32(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int32${endian}`;\n    const buf = Buffer.allocUnsafe(4);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n}\n\nmodule.exports = BC;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_INITIALIZATION_DATA = Symbol('__initialization_data');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  /**\n     * Constructor.\n     *\n   * @param {Object} initializationData\n     */\n  constructor(initializationData) {\n    if (new.target === Abstract) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n\n    this[P_INITIALIZATION_DATA] = initializationData;\n  }\n\n  /**\n     * Gets the initialization data. This should normally not be used at all but\n     * in case there are new fields which are not implemented in the library yet,\n     * the user will still have access to it.\n     *\n     * @returns {Object}\n     */\n  get __initializationData() {\n    return this[P_INITIALIZATION_DATA];\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nlet detected = null;\n\nclass Endian {\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get BIG_ENDIAN() {\n    return 'BE';\n  }\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get LITTLE_ENDIAN() {\n    return 'LE';\n  }\n\n  /**\n   * Detects the systems endianness.\n   *\n   * @returns {string}\n   */\n  static detect() {\n    if (detected === null) {\n      const b = new ArrayBuffer(4);\n      const a = new Uint32Array(b);\n      const c = new Uint8Array(b);\n\n      a[0] = 0xdeadbeef;\n      if (c[0] === 0xef) {\n        detected = Endian.LITTLE_ENDIAN;\n      }\n      if (c[0] === 0xde) {\n        detected = Endian.BIG_ENDIAN;\n      }\n    }\n\n    return detected;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses little endian.\n   *\n   * @returns {boolean}\n   */\n  static isLittleEndian() {\n    return Endian.detect() === Endian.LITTLE_ENDIAN;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses big endian.\n   *\n   * @returns {boolean}\n   */\n  static isBigEndian() {\n    return Endian.detect() === Endian.BIG_ENDIAN;\n  }\n}\n\nmodule.exports = Endian;\n","module.exports = require(\"stream\");","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ID = Symbol('id');\nconst P_FIXED_VALUE = Symbol('fixed_value');\nconst P_HAS_FIXED_VALUE = Symbol('has_fixed_value');\nconst P_DESCRIPTION = Symbol('description');\n\n/**\n * Abstract field type to encode and decode values. Abstracts encodeToBytes and decodeFromBytes as\n * basic implementations but in fact it can be anything.\n */\nclass AbstractType {\n  /**\n   * Constructor.\n   *\n   * @param {string|null} id\n   */\n  constructor(id = null) {\n    this[P_ID] = id;\n    this[P_HAS_FIXED_VALUE] = false;\n  }\n\n  /**\n   * Gets the field ident.\n   *\n   * @returns {String}\n   */\n  get id() {\n    return this[P_ID];\n  }\n\n  /**\n   * Gets a value indicating whether the field type has a fixed value.\n   *\n   * @returns {Boolean}\n   */\n  get hasFixedValue() {\n    return this[P_HAS_FIXED_VALUE];\n  }\n\n  /**\n   * Gets the fixed value.\n   *\n   * @returns {*}\n   */\n  get fixedValue() {\n    return this[P_FIXED_VALUE];\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    return {\n      name: 'AbstractType',\n      description: this.description(),\n      extra: {},\n      hierarchy: ['AbstractType']\n    };\n  }\n\n  /**\n   * Gets the encoded size of the type.\n   *\n   * @return {Number}\n   */\n  get encodedSize() {\n    throw new Error('Encoded size getter not implemented');\n  }\n\n  /**\n   * Decodes a value using the rules defined in the method from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    throw new Error('Missing implementation for decodeFromBytes.');\n  }\n\n  /**\n   * Returns the encoded bytes for the given value.\n   *\n   * @param {*} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    throw new Error('Missing implementation for encodeToBytes.');\n  }\n\n  /**\n   * Describes the type.\n   *\n   * @param {*} value\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = {\n      id: this.id,\n      type: this.typeInfo\n    };\n\n    if (this.hasFixedValue) {\n      description.fixed = this.fixedValue;\n    }\n\n    return description;\n  }\n\n  /**\n   * Sets a fixed value.\n   *\n   * @param {*} value\n   * @returns {AbstractType}\n   */\n  withFixedValue(value) {\n    this[P_FIXED_VALUE] = value;\n    this[P_HAS_FIXED_VALUE] = true;\n    return this;\n  }\n\n  /**\n   * Sets the description and returns the type or gets the description itself.\n   *\n   * @param {String} description\n   * @returns {AbstractType|String}\n   */\n  description(description = null) {\n    if (description === null) {\n      return this[P_DESCRIPTION];\n    }\n\n    this[P_DESCRIPTION] = description;\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the type can be decoded. It is\n   * not possible in some circumstances.\n   *\n   * @return {boolean}\n   */\n  get canDecode() {\n    return true;\n  }\n}\n\nmodule.exports = AbstractType;\n","module.exports = require(\"zlib\");","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for 32bit int values.\n */\nclass Int32 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int32', unsigned, endian);\n    this.description('4byte 32bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Int32';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 4;\n  }\n\n  /**\n   * Reads the given int32 value.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt32(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Appends the given Int32 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt32(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int32;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SUBTYPES = Symbol('subtypes');\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A Type that itself is made up of multiple other (sub-)types.\n */\nclass CompositeType extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id) {\n    super(id || 'composite_type');\n    super.description('A type that itself is made up of multiple other types.');\n    this[P_SUBTYPES] = [];\n  }\n\n  /**\n   * Gets all subtypes.\n   *\n   * @returns {Array}\n   */\n  get subTypes() {\n    return this[P_SUBTYPES];\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'CompositeType';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Adds a new field (type) definition.\n   *\n   * @param {AbstractType} field\n   */\n  addSubType(field) {\n    this[P_SUBTYPES].push(field);\n    return this;\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = { toArray: false }, all = null) {\n    if (this.canDecode === false) {\n      throw new Error('This type cannot be decoded.');\n    }\n    const obj = {};\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    this.subTypes.forEach((subType) => {\n      obj[subType.id] = subType.decodeFromBytes(bc.slice(offset), options, obj);\n      offset += subType.encodedSize;\n    });\n\n    return options.toArray ? Object.values(obj) : obj;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array|*} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray) {\n    let bc = BC.empty();\n\n    this.subTypes.forEach((subType, idx) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = Array.isArray(objOrArray) ? objOrArray[idx] : objOrArray[subType.id];\n      }\n\n      // we will use the first available\n      bc = bc.append(subType.encodeToBytes(subTypeValue, objOrArray));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    if (arguments.length > 0) {\n      description.decoded = this.decodeFromBytes(this.encodeToBytes(value));\n      description.encoded = this.encodeToBytes(value).toHex();\n      description.encodedSize = description.encoded.length;\n    }\n\n    description.subTypes = [];\n\n    this.subTypes.forEach((subType) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = value[subType.id];\n      }\n\n      description.subTypes.push(subType.describe(subTypeValue));\n    });\n\n    return description;\n  }\n}\n\nmodule.exports = CompositeType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst P_ENDIAN = Symbol('endian');\nconst P_UNSIGNED = Symbol('unsigned');\n\n/**\n * Abstract integer field type.\n */\nclass AbstractInt extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id);\n    this[P_UNSIGNED] = unsigned;\n    this[P_ENDIAN] = endian;\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'AbstractInt';\n    info.extra = {\n      unsigned: this.unsigned,\n      endian: this.endian\n    };\n\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Gets the endianness.\n   *\n   * @returns {String}\n   */\n  get endian() {\n    return this[P_ENDIAN];\n  }\n\n  /**\n   * Gets a value indicating whether the value is an unsigned integer.\n   *\n   * @returns {Boolean}\n   */\n  get unsigned() {\n    return this[P_UNSIGNED];\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    description.encodedSize = this.encodedSize;\n\n    if (arguments.length > 0) {\n      description.decoded = value;\n      description.encoded = this.encodeToBytes(value).toHex();\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = AbstractInt;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for a 16bit int value.\n */\nclass Int16 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int16', unsigned, endian);\n    this.description('2byte 16bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Int16';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 2;\n  }\n\n  /**\n   * Decodes the int16 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt16(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Encodes the given Int16 value to a byte sequence.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt16(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int16;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\n/**\n * Fields type for an 8Bit int value.\n */\nclass Int8 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   */\n  constructor(id, unsigned) {\n    super(id || 'int8', unsigned, Endian.LITTLE_ENDIAN);\n    this.description('1byte 8bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Int8';\n    info.hierarchy.push(info.name);\n\n    delete info.extra.endian;\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 1;\n  }\n\n  /**\n   * Reads the int8 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt8(0, this.unsigned);\n  }\n\n  /**\n   * Encodes the given int8 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt8(value, this.unsigned);\n  }\n}\n\nmodule.exports = Int8;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write bytes without prepending the length. This cannot be decoded in some circumstances.\n */\nclass BytesWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'bytes_without_length');\n    this.description('Bytes without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'BytesWithoutLength';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * In fact this does nothing other than updating the internal size.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value);\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = {\n      id: this.id,\n      type: this.typeInfo\n    };\n\n    if (arguments.length > 0) {\n      description.value = value;\n      description.encoded = this.encodeToBytes(value);\n      description.encodedSize = this.encodedSize;\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = BytesWithoutLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PARAMS = Symbol('params');\nconst P_METHOD = Symbol('method');\nconst P_EXECUTOR = Symbol('executor');\nconst P_DESTINATION_TYPE = Symbol('destination_type');\nconst P_RETURNS_ARRAY = Symbol('returns_array');\n\n/**\n * A basic action that holds the rpc method and its parameters.\n */\nclass BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    this[P_METHOD] = method;\n    this[P_PARAMS] = params;\n    this[P_EXECUTOR] = executor;\n    this[P_DESTINATION_TYPE] = DestinationType;\n    this[P_RETURNS_ARRAY] = returnsArray;\n  }\n\n  /**\n   * Gets the destination type.\n   *\n   * @returns {*}\n   */\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  /**\n   * Gets a value indicating whether the action returns an array.\n   *\n   * @returns {Boolean}\n   */\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Gets the params for the rpc call.\n     *\n   * @returns {Object}\n     */\n  get params() {\n    return this[P_PARAMS];\n  }\n\n  /**\n   * Changes a single param of the params object.\n   *\n   * @param {String} name\n   * @param {*} value\n   * @returns {BaseAction}\n   */\n  changeParam(name, value) {\n    this[P_PARAMS][name] = value;\n    return this;\n  }\n\n  /**\n     * Gets the method.\n     *\n     * @returns {*}\n     */\n  get method() {\n    return this[P_METHOD];\n  }\n\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Executes the current action and returns the raw result.\n     *\n     * @returns {Promise}\n     */\n  async execute() {\n    return this[P_EXECUTOR].execute(this);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = BaseAction;\n","module.exports = require(\"url\");","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\n\nconst P_VALUE = Symbol('value');\n\nfunction toFixed(x) {\n  let base = new BN(10).pow(new BN(4));\n  let dm = x.divmod(base);\n\n  let mod = dm.mod.toString(10, 4);\n  let m = dm.div.toString();\n\n  let isNegative = false;\n\n  if (x.toString().substr(0, 1) === '-') {\n    if (m.substr(0, 1) === '-') {\n      m = m.substr(1);\n    }\n    if (mod.substr(0, 1) === '-') {\n      mod = mod.substr(1);\n    }\n    isNegative = true;\n  }\n\n  return `${isNegative ? '-' : ''}${m}.${mod}`;\n}\n\n/**\n * A simple wrapper around bignumber for the pascal currency and\n * basic math functions.\n */\nclass Currency {\n  /**\n     * Creates a new Currency instance.\n     *\n     * @param {Number|String|BigNumber|Currency} value\n     */\n  constructor(value) {\n    let pasc = value;\n\n    if (pasc instanceof Currency) {\n      this[P_VALUE] = pasc.value;\n      return;\n    }\n\n    if (BN.isBN(pasc)) {\n      this[P_VALUE] = pasc;\n      return;\n    }\n\n    pasc = pasc.toString();\n    pasc = pasc.split(',').join(''); // remove commas\n    // now split the '.'\n\n    const ten = new BN(10);\n    const base = ten.pow(new BN(4));\n\n    // Is it negative?\n    let negative = (pasc.substring(0, 1) === '-');\n\n    if (negative) {\n      pasc = pasc.substring(1);\n    }\n\n    if (pasc === '.') {\n      throw new Error(\n        `Invalid value ${pasc} cannot be converted to` +\n          ' base unit with 4 decimals.');\n    }\n\n    // Split it into a whole and fractional part\n    let comps = pasc.split('.');\n\n    if (comps.length > 2) { throw new Error('Too many decimal points'); }\n\n    let whole = comps[0], fraction = comps[1];\n\n    if (!whole) { whole = '0'; }\n    if (!fraction) { fraction = '0'; }\n    if (fraction.length > 4) {\n      throw new Error('Too many decimal places');\n    }\n\n    while (fraction.length < 4) {\n      fraction += '0';\n    }\n\n    whole = new BN(whole);\n    fraction = new BN(fraction);\n    let molina = (whole.mul(base)).add(fraction);\n\n    if (negative) {\n      molina = molina.neg();\n    }\n\n    this[P_VALUE] = new BN(molina.toString(10), 10);\n  }\n\n  static fromMolina(molina) {\n    return new Currency(\n      new BN(molina.toString())\n    );\n  }\n\n  /**\n     * Gets the BigNumber instance.\n     *\n     * @returns {BigNumber}\n     */\n  get value() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {string}\n     */\n  toString() {\n    return toFixed(this[P_VALUE]);\n  }\n\n  /**\n   * Gets a value indicating that the current value has more decimals than\n   * allowed.\n   */\n  isVague() {\n    return this.toStringOpt(5) !== this.toStringOpt(4);\n  }\n\n  /**\n   * Gets an optimized pascal value with less zeros as possible.\n   *\n   * @returns {string}\n   */\n  toStringOpt(decimals = 4) {\n    return toFixed(this[P_VALUE])\n      .replace(new RegExp('[0]+$'), '')\n      .replace(new RegExp('[\\.]+$'), '');\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {Number}\n     */\n  toMolina() {\n    return this[P_VALUE].toString();\n  }\n\n  /**\n     * Adds the given value to the current value and returns a **new**\n     * value.\n     *\n     * @param {Number|String|BigNumber|Currency} addValue\n     * @returns {Currency}\n     */\n  add(addValue) {\n    return new Currency(\n      this.value.add(new Currency(addValue).value),\n    );\n  }\n\n  /**\n     * Subtracts the given value from the current value and returns a\n     * **new** value.\n     *\n     * @param {Currency} subValue\n     * @returns {Currency}\n     */\n  sub(subValue) {\n    return new Currency(\n      this.value.sub(new Currency(subValue).value)\n    );\n  }\n\n  /**\n     * Gets a positive variant of the value. If the value is already\n     * positive, the current instance will be returned, else a new\n     * instance.\n     *\n     * @returns {Currency}\n     */\n  toPositive() {\n    if (this[P_VALUE].isNeg() === true) {\n      return new Currency(\n        this[P_VALUE].neg(),\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the given value is equal to the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  eq(value) {\n    return this[P_VALUE].eq(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gt(value) {\n    return this[P_VALUE].gt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lt(value) {\n    return this[P_VALUE].lt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lteq(value) {\n    return this[P_VALUE].lte(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gteq(value) {\n    return this[P_VALUE].gte(new Currency(value).value);\n  }\n\n  get bn() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the serialized version of this instance.\n     *\n     * @returns {Object}\n     */\n  serialize() {\n    return {\n      pascal: this.toStringOpt(),\n      molina: this.toMolina()\n    };\n  }\n}\n\nmodule.exports = Currency;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst PascalCoinInfo = require('../PascalCoinInfo');\n\nconst P_ACCOUNT = Symbol('account');\nconst P_CHECKSUM = Symbol('checksum');\nconst P_CREATED_IN_BLOCK = Symbol('created_in_block');\nconst P_IS_FOUNDATION_REWARD = Symbol('is_foundation_reward');\n\n/**\n * A simple type that holds an account number in a reliable way.\n */\nclass AccountNumber {\n  /**\n   * Creates a new AccountNumber instance, either from an account string\n   * without checksum (which can be a number), an account string with checksum\n   * or another account instance.\n   *\n   * @param {String|Number|AccountNumber|Account} account\n   */\n  constructor(account) {\n    if (account instanceof AccountNumber) {\n      this[P_ACCOUNT] = account[P_ACCOUNT];\n      this[P_CHECKSUM] = account[P_CHECKSUM];\n    } else if (typeof account === 'string') {\n      const splitted = account.split('-');\n\n      splitted.map(s => {\n        if (isNaN(s) || parseInt(s, 10).toString() !== s) {\n          throw new Error(`Invalid account number part: ${s}`);\n        }\n      });\n\n      if (splitted.length === 2) {\n        this[P_ACCOUNT] = parseInt(splitted[0], 10);\n        this[P_CHECKSUM] = parseInt(splitted[1], 10);\n        if (this[P_CHECKSUM] !== AccountNumber.calculateChecksum(this[P_ACCOUNT])) {\n          throw new Error(`Invalid checksum for account ${this[P_ACCOUNT]}`);\n        }\n      } else {\n        this[P_ACCOUNT] = parseInt(account, 10);\n        this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n      }\n    } else if (typeof account === 'number') {\n      this[P_ACCOUNT] = account;\n      this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n    } else {\n      throw new Error(`Unable to parse Account: ${account.toString()}`);\n    }\n\n    this[P_CREATED_IN_BLOCK] = Math.floor(this[P_ACCOUNT] / 5);\n    this[P_IS_FOUNDATION_REWARD] = PascalCoinInfo.isDeveloperReward(this[P_CREATED_IN_BLOCK]) &&\n        this[P_ACCOUNT] % 5 === 4;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @returns {Number}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the checksum of the account.\n   *\n   * @returns {Number}\n   */\n  get checksum() {\n    return this[P_CHECKSUM];\n  }\n\n  /**\n   * Gets the block number the account was created in.\n   *\n   * @returns {Number}\n   */\n  get createdInBlock() {\n    return this[P_CREATED_IN_BLOCK];\n  }\n\n  /**\n   * Gets a value indicating whether the foundation got this account initially.\n   *\n   * @returns {Boolean}\n   */\n  get isFoundationReward() {\n    return this[P_IS_FOUNDATION_REWARD];\n  }\n\n  /**\n   * Gets the account string.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.account}-${this.checksum}`;\n  }\n\n  /**\n   * Gets a value indicating whether the given account equals the current\n   * account.\n   *\n   * @param {AccountNumber|String|Number} accountNumber\n   * @returns {boolean}\n   */\n  equals(accountNumber) {\n    return (accountNumber !== null && this.toString() === accountNumber.toString());\n  }\n\n  /**\n   * Calculates the checksum for the given account number.\n   *\n   * @param {Number} account\n   * @returns {Number}\n   */\n  static calculateChecksum(account) {\n    return ((account * 101) % 89) + 10;\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * The list of available curves in pascalcoin.\n */\nconst CURVES = {\n  0: 'empty',\n  714: 'secp256k1',\n  715: 'p384',\n  729: 'sect283k1',\n  716: 'p521'\n};\n\nconst XYL_PUBKEYS = {\n  714: {x: 32, y: 32},\n  715: {x: 48, y: 48},\n  716: {x: 66, y: 66},\n  729: {x: 36, y: 36},\n  0: {x: 0, y: 0}\n};\n\nconst L_PRIVKEYS = {\n  714: 32,\n  715: 48,\n  716: 66,\n  729: 36\n};\n\nconst ID = Symbol('id');\nconst NAME = Symbol('name');\n\n/**\n * Simple elliptic curve representation of keys in pascalcoin.\n */\nclass Curve {\n\n  /**\n   * Gets the curve name of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECP256K1() {\n    return 'secp256k1';\n  }\n\n  /**\n   * Gets the curve name of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P384() {\n    return 'p384';\n  }\n\n  /**\n   * Gets the curve name of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECT283K1() {\n    return 'sect283k1';\n  }\n\n  /**\n   * Gets the curve name of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P521() {\n    return 'p521';\n  }\n\n  /**\n   * Gets the curve id of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECP256K1() {\n    return 714;\n  }\n\n  /**\n   * Gets the curve id of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P384() {\n    return 715;\n  }\n\n  /**\n   * Gets the curve id of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECT283K1() {\n    return 729;\n  }\n\n  /**\n   * Gets the curve id of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P521() {\n    return 716;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Number|String} curve\n   */\n  constructor(curve) {\n    if (typeof curve === 'number') {\n      if (CURVES[curve] === undefined) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[ID] = curve;\n      this[NAME] = CURVES[curve];\n    } else {\n      if (Object.values(CURVES).indexOf(curve.toString()) === -1) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[NAME] = curve.toString();\n      this[ID] = parseInt(Object.keys(CURVES)[Object.values(CURVES).indexOf(this[NAME])], 10);\n    }\n  }\n\n  /**\n     * Gets the id of the curve.\n     *\n     * @returns {Number}\n     */\n  get id() {\n    return this[ID];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[NAME];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  toString() {\n    return this.name;\n  }\n\n  /**\n     * Gets the default curve.\n     *\n     * @returns {Curve}\n     */\n  static getDefaultCurve() {\n    return new Curve(Curve.CI_SECP256K1);\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  xylPublicKey(xOrY) {\n    return XYL_PUBKEYS[this.id][xOrY];\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  lPrivateKey() {\n    return L_PRIVKEYS[this.id];\n  }\n\n  /**\n   * Gets a value indicating whether the key is supported for signing /\n   * generation etc.\n   *\n   * @returns {boolean}\n   */\n  get supported() {\n    return this.id !== Curve.CI_SECT283K1 && this.id !== 0;\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\nconst BytesWithoutLength = require('./BytesWithoutLength');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_BYTES_FIELD = Symbol('bytes_field');\n\n/**\n * A field type to write dynamic content in form of bytes (prepends the length).\n */\nclass BytesWithLength extends AbstractType {\n  /**\n   * Constructor\n   *\n   * @param {string} id\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize = 1) {\n    super(id || `bytes_with_length_${byteSize * 8}`);\n    this.description('Bytes with variable size prepended');\n    this[P_BYTES_FIELD] = new BytesWithoutLength('value');\n\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8('length', true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16('length', true, Endian.LITTLE_ENDIAN);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32('length', true, Endian.LITTLE_ENDIAN);\n        break;\n      default:\n        throw new Error('InByteSize must be either 8, 16 or 32');\n    }\n\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'BytesWithLength';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].decodeFromBytes(bc) + this[P_LENGTH_FIELD].encodedSize;\n    return this[P_BYTES_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize,\n        this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    this[P_SIZE_ENCODED] = value.length + this[P_LENGTH_FIELD].encodedSize;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(\n      this[P_SIZE_ENCODED] - this[P_LENGTH_FIELD].encodedSize\n    );\n\n    return bc.append(this[P_BYTES_FIELD].encodeToBytes(value));\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    if (arguments.length > 0) {\n      description.decoded = value;\n      description.decodedSimple = value.toHex();\n      description.encoded = this.encodeToBytes(value).toHex();\n      description.encodedSize = this.encodedSize;\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = BytesWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CurveType = require('./../../../Types/Keys/Curve');\nconst Endian = require('./../../../Endian');\nconst Int16 = require('./../../Core/Int16');\n\n/**\n * A special pascal type that can en/decode a curve id.\n */\nclass Curve extends Int16 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'curve', true, Endian.LITTLE_ENDIAN);\n    this.description('Key curve id');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Curve';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurveType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new CurveType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurveType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.id);\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\nconst Abstract = require('./Abstract');\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_BLOCK = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_REWARD = Symbol('reward');\nconst P_FEE = Symbol('fee');\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('ver_a');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_TARGET = Symbol('target');\nconst P_NONCE = Symbol('nonce');\nconst P_PAYLOAD = Symbol('payload');\nconst P_SBH = Symbol('sbh');\nconst P_OPH = Symbol('oph');\nconst P_POW = Symbol('pow');\nconst P_HASHRATEKHS = Symbol('hashratekhs');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * Represents a block.\n */\nclass Block extends Abstract {\n  /**\n   * Creates a new instance of the Block class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_REWARD] = new Currency(data.reward);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_TARGET] = new BN(data.target.toString(), 10);\n    this[P_NONCE] = new BN(data.nonce.toString(), 10);\n    this[P_PAYLOAD] = data.payload;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_OPH] = BC.fromHex(data.oph);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_HASHRATEKHS] = new BN(data.hashratekhs.toString(), 10);\n    this[P_MATURATION] = parseInt(data.maturation, 10);\n    this[P_OPERATIONS] = null;\n    if (data.operations !== undefined) {\n      this[P_OPERATIONS] = parseInt(data.operations, 10);\n    }\n  }\n\n  /**\n   * Gets the number of a block.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the public key of the miner of the block.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the reward.\n   *\n   * @returns {Currency}\n   */\n  get reward() {\n    return this[P_REWARD];\n  }\n\n  /**\n   * Gets the collective fee awarded to the miner.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the version of the protocol.\n   *\n   * @returns {Number}\n   */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n   * Gets the protocol version of the miner.\n   *\n   * @returns {Number}\n   */\n  get verA() {\n    return this[P_VER_A];\n  }\n\n  /**\n   * Gets the UTC timestamp of the block.\n   *\n   * @returns {Number}\n   */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n   * Gets the used target.\n   *\n   * @returns {BigNumber}\n   */\n  get target() {\n    return this[P_TARGET];\n  }\n\n  /**\n   * Gets the calculated nonce.\n   *\n   * @returns {BigNumber}\n   */\n  get nonce() {\n    return this[P_NONCE];\n  }\n\n  /**\n   * Gets the payload of the miner.\n   *\n   * @returns {String}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the safebox hash.\n   *\n   * @returns {BC}\n   */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {BC}\n   */\n  get oph() {\n    return this[P_OPH];\n  }\n\n  /**\n   * Gets the POW.\n   *\n   * @returns {BC}\n   */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n   * Gets the hashrate in kh/s.\n   *\n   * @returns {BigNumber}\n   */\n  get hashratekhs() {\n    return this[P_HASHRATEKHS];\n  }\n\n  /**\n   * Gets the age of the block in terms of blocks.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the number of operations in the block.\n   *\n   * @returns {Number}\n   */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n   * Gets the list of accounts created.\n   *\n   * @returns {AccountNumber[]}\n   */\n  get createdAccounts() {\n    return [\n      new AccountNumber(this[P_BLOCK] * 5),\n      new AccountNumber(this[P_BLOCK] * 5 + 1),\n      new AccountNumber(this[P_BLOCK] * 5 + 2),\n      new AccountNumber(this[P_BLOCK] * 5 + 3),\n      new AccountNumber(this[P_BLOCK] * 5 + 4)\n    ];\n  }\n}\n\nmodule.exports = Block;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Curve = require('@pascalcoin-sbx/common').Types.Keys.Curve;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst P_NAME = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('publicKey');\nconst P_CAN_USE = Symbol('can_user');\nconst P_B58_PUBKEY = Symbol('b58_pubkey');\nconst P_EC_NID = Symbol('ec_nid');\nconst P_X = Symbol('x');\nconst P_Y = Symbol('y');\n\n/**\n * Holds information about a public key in the wallet (fetched via rpc).\n */\nclass WalletPublicKey extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_NAME] = data.name;\n    this[P_ENC_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.publicKey));\n    this[P_CAN_USE] = !!data.can_use;\n\n    this[P_B58_PUBKEY] = null;\n    this[P_EC_NID] = null;\n    this[P_X] = null;\n    this[P_Y] = null;\n    if (data.b58_pubkey !== undefined) {\n      this[P_B58_PUBKEY] = data.b58_pubkey;\n    }\n    if (data.ec_nid !== undefined) {\n      this[P_EC_NID] = new Curve(parseInt(data.ec_nid, 10));\n    }\n    if (data.x !== undefined) {\n      this[P_X] = BC.fromHex(data.x);\n    }\n    if (data.y !== undefined) {\n      this[P_Y] = BC.fromHex(data.y);\n    }\n  }\n\n  /**\n     * Gets the name of the key.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {BC}\n     */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n     * Gets a flag indicating whether the key can be used.\n     *\n     * @returns {Boolean}\n     */\n  get canUse() {\n    return this[P_CAN_USE];\n  }\n\n  /**\n     * Gets the base58 public key if returned by the node.\n     *\n     * @returns {String|null}\n     */\n  get base58PublicKey() {\n    return this[P_B58_PUBKEY];\n  }\n\n  /**\n     * Gets the used curve if returned by the node.\n     *\n     * @returns {Curve|null}\n     */\n  get ecNid() {\n    return this[P_EC_NID];\n  }\n\n  /**\n     * Gets the X value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the Y value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get y() {\n    return this[P_Y];\n  }\n}\n\nmodule.exports = WalletPublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_BALANCE = Symbol('balance');\nconst P_N_OPERATION = Symbol('n_operation');\nconst P_UPDATED_B = Symbol('updated_b');\nconst P_STATE = Symbol('state');\nconst P_NAME = Symbol('name');\nconst P_TYPE = Symbol('type');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\nconst P_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller_account');\nconst P_PRIVATE_SALE = Symbol('private_sale');\nconst P_NEW_ENC_PUBKEY = Symbol('new_enc_pubkey');\n\n/**\n * Represents an account.\n */\nclass Account extends Abstract {\n  /**\n   * The state of an account when it is listed for sale.\n   *\n   * @returns {string}\n   */\n  static get STATE_LISTED() {\n    return 'listed';\n  }\n\n  /**\n   * The state of an account when it is not listed.\n   *\n   * @returns {string}\n   */\n  static get STATE_NORMAL() {\n    return 'normal';\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_BALANCE] = new Currency(data.balance);\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_UPDATED_B] = parseInt(data.updated_b, 10);\n\n    if (data.state !== Account.STATE_NORMAL && data.state !== Account.STATE_LISTED) {\n      throw new Error('Invalid account state.');\n    }\n\n    this[P_STATE] = data.state;\n    this[P_NAME] = new AccountName(data.name);\n    this[P_TYPE] = data.type;\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    // when not listed\n    this[P_PRICE] = null;\n    this[P_SELLER_ACCOUNT] = null;\n    this[P_PRIVATE_SALE] = null;\n    this[P_NEW_ENC_PUBKEY] = null;\n\n    if (this[P_STATE] === Account.STATE_LISTED) {\n      this[P_PRICE] = new Currency(data.price);\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n      this[P_PRIVATE_SALE] = data.private_sale;\n      if (data.new_enc_pubkey !== '000000000000' && data.new_enc_pubkey !== undefined) {\n        this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n      }\n    }\n  }\n\n  /**\n   * Gets the account number of the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the public key of the account.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Currency}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the number of operations of this account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the block number when the account was last updated.\n   *\n   * @returns {Number}\n   */\n  get updatedB() {\n    return this[P_UPDATED_B];\n  }\n\n  /**\n   * Gets the state of the account (normal, listed).\n   *\n   * @returns {String}\n   */\n  get state() {\n    return this[P_STATE];\n  }\n\n  /**\n   * Gets the name of the account.\n   *\n   * @returns {AccountName}\n   */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n   * Gets the type of the account.\n   *\n   * @returns {Number}\n   */\n  get type() {\n    return this[P_TYPE];\n  }\n\n  /**\n   * Gets the block number until the account is locked when it's listed for\n   * sale.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the price of the account in case its listed.\n   *\n   * @returns {Currency|null}\n   */\n  get price() {\n    return this[P_PRICE];\n  }\n\n  /**\n   * Gets the account of the seller in case the account is listed for sale.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets a flag indicating whether the account is for sale. Attention:\n   * null and false = not for sale.\n   *\n   * @returns {boolean}\n   */\n  get privateSale() {\n    return !!this[P_PRIVATE_SALE];\n  }\n\n  /**\n   * Gets the new public key in case of a escrow.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets a value indicating whether the account is for sale.\n   *\n   * @returns {boolean}\n   */\n  isForSale() {\n    return this[P_STATE] === Account.STATE_LISTED;\n  }\n}\n\nmodule.exports = Account;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\nconst PascalCoinInfo = require('@pascalcoin-sbx/common').PascalCoinInfo;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\n\n/**\n * An object that holds infos about an operation action. It extends the\n * BaseAction functionality by methods which are useful for operations.\n */\nclass OperationAction extends BaseAction {\n  /**\n   * Constructor\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.fee = new Currency(0);\n    this.params.payload = '';\n    this.params.payload_method = 'none';\n  }\n\n  /**\n     * Sets the payload of the action.\n     *\n     * @param {String|BC} payload\n     * @param {String} payloadMethod\n     * @param {String} password\n     * @returns {OperationAction}\n     */\n  withPayload(payload, payloadMethod = 'none', password = null) {\n    this.params.payload = payload;\n    this.params.payload_method = payloadMethod;\n    if (password !== null) {\n      this.params.pwd = password;\n    }\n\n    return this;\n  }\n\n  /**\n     * Sets the fee.\n     *\n     * @param {Number|Currency} fee\n     * @returns {OperationAction}\n     */\n  withFee(fee) {\n    this.params.fee = new Currency(fee);\n    return this;\n  }\n\n  /**\n   * Sets the fee to the minimum.\n   *\n   * @returns {OperationAction}\n   */\n  withMinFee(lastKnownBlock = null) {\n    this.params.fee = PascalCoinInfo.MIN_FEE(lastKnownBlock);\n    return this;\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return super.isValid();\n  }\n}\n\nmodule.exports = OperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Represents a sender in an operation.\n */\nclass Sender extends Abstract {\n  /**\n   * Creates a new instance of the Sender class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the n operation of thwe sender.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the account of the sender.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Sender;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\n\n/**\n * Represents a receiver in an operation.\n */\nclass Receiver extends Abstract {\n  /**\n   * Creates a new instance of the Receiver class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the account of the receiver.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Receiver;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_NEW_ENC_PUBKEY = Symbol('newPublicKey');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\nconst P_SELLER_ACCOUNT = Symbol('sellerAccount');\nconst P_ACCOUNT_PRICE = Symbol('account_price');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('lockedUntilBlock');\nconst P_FEE = Symbol('fee');\n\n/**\n * Represents a Changer in an operation.\n */\nclass Changer extends Abstract {\n  /**\n   * Creates a new instance of the Changer class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_N_OPERATION] = null;\n    if (data.n_operation !== undefined) {\n      this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    }\n\n    this[P_NEW_ENC_PUBKEY] = null;\n    if (data.new_enc_pubkey !== undefined) {\n      this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n    }\n\n    this[P_NEW_NAME] = null;\n    if (data.new_name !== undefined) {\n      this[P_NEW_NAME] = new AccountName(data.new_name);\n    }\n\n    this[P_NEW_TYPE] = null;\n    if (data.new_type !== undefined) {\n      this[P_NEW_TYPE] = data.new_type;\n    }\n\n    this[P_SELLER_ACCOUNT] = null;\n    if (data.seller_account !== undefined) {\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n    }\n\n    this[P_ACCOUNT_PRICE] = null;\n    if (data.account_price !== undefined) {\n      this[P_ACCOUNT_PRICE] = new Currency(data.account_price);\n    }\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    this[P_FEE] = new Currency(0);\n    if (data.fee !== undefined) {\n      this[P_FEE] = new Currency(data.fee);\n    }\n  }\n\n  /**\n   * Gets the changed account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the n op of the account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the new public key.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the new name.\n   *\n   * @returns {String|null}\n   */\n  get newName() {\n    return this[P_NEW_NAME];\n  }\n\n  /**\n   * Gets the new type.\n   *\n   * @returns {Number|null}\n   */\n  get newType() {\n    return this[P_NEW_TYPE];\n  }\n\n  /**\n   * Gets the seller account.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets the sales price of the account.\n   *\n   * @returns {Currency|null}\n   */\n  get accountPrice() {\n    return this[P_ACCOUNT_PRICE];\n  }\n\n  /**\n   * Gets the block number until the account is blocked.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the fee for the change operation.\n   *\n   * @returns {Currency|null}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n}\n\nmodule.exports = Changer;\n","module.exports = require(\"http\");","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CALLER = Symbol('caller');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\nconst PublicKey = require('@pascalcoin-sbx/common').Types.Keys.PublicKey;\nconst KeyPair = require('@pascalcoin-sbx/common').Types.Keys.KeyPair;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst Block = require('./Types/Block');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst Account = require('./Types/Account');\n\nconst publicKeyCoder = new PublicKeyCoder();\nconst opHashCoder = new OperationHashCoder();\n\n/**\n * Simple function that transforms the values of an object to make them usable\n * in rpc calls.\n *\n * @param {Object} params\n * @returns {Object}\n */\nfunction transformRpcParams(params) {\n  const newParams = {};\n\n  Object.keys(params).forEach((field) => {\n    const item = params[field];\n\n    // we weill delete fields that are null\n    if (item === null) {\n\n    } else if (field.indexOf('pubkey') !== -1) {\n      // correct the field name..\n      let newField = field.replace('pubkey', 'enc_pubkey');\n\n      // and set the value\n      if (item instanceof BC) {\n        newParams[newField] = item.toHex();\n      } else if (item instanceof PublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item).toHex();\n      } else if (item instanceof WalletPublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else if (item instanceof KeyPair) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else {\n        newField = newField.replace('enc_pubkey', 'b58_pubkey');\n        newParams[newField] = item.toString();\n      }\n    } else if (field === 'payload' && !(item instanceof BC)) {\n      newParams[field] = BC.fromString(item).toHex();\n    } else if (field === 'max' || field === 'start' || field === 'end' || field === 'depth') {\n      newParams[field] = parseInt(item, 10);\n    } else if ((field === 'fee' || field === 'amount' || field === 'price') &&\n        !(params[field] instanceof Currency)\n    ) {\n      newParams[field] = new Currency(item);\n      if (newParams[field].isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      } else {\n        newParams[field] = newParams[field].toStringOpt();\n      }\n    } else if (typeof item === 'boolean') {\n      newParams[field] = item;\n    } else if (field === 'senders') {\n      newParams[field] = item.map(senderItem => {\n        let o = {\n          account: senderItem.account.account,\n          amount: senderItem.amount.toStringOpt(),\n          payload: senderItem.payload.toHex()\n        };\n\n        if (!isNaN(senderItem.nOperation)) {\n          o.n_operation = senderItem.nOperation;\n        }\n        return o;\n      });\n    } else if (field === 'receivers') {\n      newParams[field] = item.map(receiverItem => {\n        return {\n          account: receiverItem.account.account,\n          amount: receiverItem.amount.toStringOpt(),\n          payload: receiverItem.payload.toHex()\n        };\n      });\n    } else if (field === 'changesinfo') {\n      newParams[field] = item.map(changerItem => {\n        let o = {\n          account: changerItem.account.account\n        };\n\n        if (changerItem.newPublicKey !== null) {\n          o.new_b58_pubkey = new PublicKeyCoder().encodeToBase58(changerItem.newPublicKey);\n        }\n        if (changerItem.newName !== null) {\n          o.new_name = changerItem.newName.toString();\n        }\n        if (changerItem.newType !== null) {\n          o.new_type = changerItem.newType;\n        }\n\n        if (!isNaN(changerItem.nOperation)) {\n          o.n_operation = changerItem.nOperation;\n        }\n        return o;\n      });\n    } else if (item.constructor.name === 'Array') {\n      if (item.length > 0) {\n        newParams[field] = item;\n      }\n    } else if (item instanceof BC) {\n      newParams[field] = item.toHex();\n    } else if (item instanceof OperationHash) {\n      newParams[field] = opHashCoder.encodeToBytes(item).toHex();\n    } else if (item instanceof Account) {\n      newParams[field] = item.account.account; // NICE!!!!! :-D\n    } else if (item instanceof AccountNumber) {\n      newParams[field] = item.account;\n    } else if (item instanceof AccountName) {\n      newParams[field] = item.toString();\n    } else if (item instanceof Block) {\n      newParams[field] = item.block;\n    } else if (item instanceof Currency) {\n      if (item.isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      }\n      newParams[field] = item.toStringOpt();\n    } else if (typeof item === 'number') {\n      newParams[field] = item;\n    } else {\n      newParams[field] = item.toString();\n    }\n  });\n\n  return newParams;\n}\n\nfunction transformRpcResult(value, DestinationType) {\n  switch (DestinationType.name) {\n    case 'Boolean':\n      return !!value;\n    case 'String':\n      return value.toString();\n    case 'Object':\n      return value;\n    case 'BC':\n      return BC.from(value);\n    default:\n      return new DestinationType(value);\n  }\n};\n\n/**\n * This class will execute an rpc call and returns a promise.\n */\nclass Executor {\n  /**\n     * Constructor\n     *\n     * @param {Caller} caller\n     */\n  constructor(caller) {\n    this[P_CALLER] = caller;\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {BaseAction} action\n   * @param {Function|null} transformCallback\n   * @returns {Promise<any>}\n   */\n  async execute(action, transformCallback = null) {\n    transformCallback = transformCallback || this.transform(action.destinationType, action.returnsArray);\n    return new Promise((resolve, reject) => {\n      this[P_CALLER].call(action.method, transformRpcParams(action.params))\n        .then((response) => {\n          resolve([response, transformCallback]);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Transforms a raw response value to a special type.\n   *\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   * @returns {*}\n   */\n  transform(DestinationType, returnsArray) {\n    if (returnsArray) {\n      return function (value) {\n        return value.map(v => transformRpcResult(v, DestinationType));\n      };\n    }\n\n    return function (value) {\n      return transformRpcResult(value, DestinationType);\n    };\n  }\n}\n\nmodule.exports = Executor;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst bs58 = require('bs58');\nconst BC = require('./BC');\n\n/**\n * Contains methods to convert stuff to various formats.\n */\nclass Base58 {\n  /**\n     * Gets the base58 representation of the given buffer.\n     *\n     * @param {BC|Buffer|Uint8Array|String} data\n     * @returns {String}\n     */\n  static encode(data) {\n    return bs58.encode(BC.from(data).buffer);\n  }\n\n  /**\n   * Decodes a Base58 encoded string.\n   *\n   * @param {String} str\n   * @returns {BC}\n   */\n  static decode(str) {\n    return new BC(bs58.decode(str));\n  }\n}\n\nmodule.exports = Base58;\n","module.exports = require(\"buffer\");","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Currency = require('./Types/Currency');\n\n/**\n * Gets information about forks and features.\n */\nclass PascalCoinInfo {\n\n  /**\n   * Gets the min fee.\n   *\n   * @param {Number|null} block\n   * @returns {Currency}\n   * @constructor\n   */\n  static MIN_FEE(block = null) {\n    return Currency.fromMolina(1);\n  }\n\n  /**\n   * Gets the block number when 50% inflation reduction was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0010() {\n    return 210240;\n  }\n\n  /**\n   * Gets the block number when PIP-10 was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get INFLATION_REDUCTION() {\n    return PascalCoinInfo.PIP_0010;\n  }\n\n  /**\n   * Gets a value indicating whether the given block has inflation reduction\n   * activated (PIP-10).\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isInflationReduction(block) {\n    return block >= PascalCoinInfo.INFLATION_REDUCTION;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0009() {\n    return 260000;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get RANDOM_HASH() {\n    return PascalCoinInfo.PIP_0009;\n  }\n\n  /**\n   * Gets a value indicating if randomhash was active at the given block.\n   *\n   * @param {Number} block\n   * @returns {boolean}\n   */\n  static isRandomHash(block) {\n    return block >= PascalCoinInfo.RANDOM_HASH;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0011() {\n    return 210000;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get DEVELOPER_REWARD() {\n    return PascalCoinInfo.PIP_0011;\n  }\n\n  /**\n   * Gets a value indicating whether the given block was mined with activated\n   * developer award.\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isDeveloperReward(block) {\n    return block >= PascalCoinInfo.DEVELOPER_REWARD;\n  }\n}\n\nmodule.exports = PascalCoinInfo;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst sha256 = require('mipher/dist/sha256');\nconst sha512 = require('mipher/dist/sha512');\nconst BC = require('./BC');\n\n/**\n * Holds methods to hash.\n */\nclass Sha {\n  /**\n   * Calculates the sha256 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {BC}\n   */\n  static sha256(...buffers) {\n    const hasher = new sha256.SHA256();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n\n  /**\n   * Calculates the sha512 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {Buffer}\n   */\n  static sha512(...buffers) {\n    const hasher = new sha512.SHA512();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n}\n\nmodule.exports = Sha;\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief mipher interface, convert and util functions\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n///////////////////////////////////////////////////////////////////////////////\r\n// V E R S I O N\r\nexports.version = '1.1.4';\r\n///////////////////////////////////////////////////////////////////////////////\r\n// C O N V E R T E R\r\nvar Convert;\r\n(function (Convert) {\r\n    /**\r\n     * Convert a string (UTF-8 encoded) to a byte array\r\n     * @param {String} str UTF-8 encoded string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function str2bin(str) {\r\n        str = str.replace(/\\r\\n/g, '\\n');\r\n        var bin = new Uint8Array(str.length * 3), p = 0;\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if (c < 128) {\r\n                bin[p++] = c;\r\n            }\r\n            else if (c < 2048) {\r\n                bin[p++] = (c >>> 6) | 192;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n            else {\r\n                bin[p++] = (c >>> 12) | 224;\r\n                bin[p++] = ((c >>> 6) & 63) | 128;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n        }\r\n        return bin.subarray(0, p);\r\n    }\r\n    Convert.str2bin = str2bin;\r\n    /**\r\n     * Convert a hex string to byte array\r\n     * @param {String} hex Hex string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function hex2bin(hex) {\r\n        if (hex.indexOf('0x') === 0 || hex.indexOf('0X') === 0) {\r\n            hex = hex.substr(2);\r\n        }\r\n        if (hex.length % 2) {\r\n            hex += '0';\r\n        }\r\n        var bin = new Uint8Array(hex.length >>> 1);\r\n        for (var i = 0, len = hex.length >>> 1; i < len; i++) {\r\n            bin[i] = parseInt(hex.substr(i << 1, 2), 16);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.hex2bin = hex2bin;\r\n    /**\r\n     * Convert a 32 bit integer number to a 4 byte array, LSB is first\r\n     * @param {Number} integer Integer number\r\n     * @return {Uint8Array} bin 4 byte array\r\n     */\r\n    function int2bin(integer) {\r\n        var bin = new Uint8Array(4);\r\n        bin[0] = (integer) & 0xff;\r\n        bin[1] = (integer >>> 8) & 0xff;\r\n        bin[2] = (integer >>> 16) & 0xff;\r\n        bin[3] = (integer >>> 24) & 0xff;\r\n        return bin;\r\n    }\r\n    Convert.int2bin = int2bin;\r\n    /**\r\n     * Convert a number to a 8 byte array, LSB is first\r\n     * @param {Number} value Long number\r\n     * @return {Uint8Array} bin 8 byte array\r\n     */\r\n    function number2bin(value) {\r\n        var bin = new Uint8Array(8);\r\n        if (Math.floor(value) === value) {\r\n            var TWO_PWR_32 = 4294967296;\r\n            var lo = (value % TWO_PWR_32) | 0, hi = (value / TWO_PWR_32) | 0;\r\n            if (value < 0) {\r\n                lo = ~(-value % TWO_PWR_32) | 0, hi = ~(-value / TWO_PWR_32) | 0;\r\n                lo = (lo + 1) & 0xffffffff;\r\n                if (!lo)\r\n                    hi++;\r\n            }\r\n            var i = 0;\r\n            bin[i++] = (lo & 0xff);\r\n            bin[i++] = (lo >>> 8) & 0xff;\r\n            bin[i++] = (lo >>> 16) & 0xff;\r\n            bin[i++] = (lo >>> 24) & 0xff;\r\n            bin[i++] = (hi & 0xff);\r\n            bin[i++] = (hi >>> 8) & 0xff;\r\n            bin[i++] = (hi >>> 16) & 0xff;\r\n            bin[i] = (hi >>> 24) & 0xff;\r\n        }\r\n        else {\r\n            var f = new Float64Array([value]);\r\n            var d = new Uint8Array(f.buffer);\r\n            bin.set(d);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.number2bin = number2bin;\r\n    /**\r\n     * Convert a base64/base64url string to a byte array\r\n     * @param {String} base64 Base64/Base64url encoded string\r\n     * @return {Uint8Array} Byte array or undefined if error\r\n     */\r\n    function base642bin(base64) {\r\n        // remove base64url encoding\r\n        base64 = base64.replace(/-/g, '+').replace(/_/g, '/').replace(/%3d/g, '=');\r\n        // length must be multiple of 4\r\n        if (base64.length % 4 !== 0)\r\n            return;\r\n        var strlen = base64.length / 4 * 3;\r\n        if (base64.charAt(base64.length - 1) === '=')\r\n            strlen--;\r\n        if (base64.charAt(base64.length - 2) === '=')\r\n            strlen--;\r\n        if (typeof atob !== 'undefined') {\r\n            return new Uint8Array(atob(base64).split('').map(function (c) { return c.charCodeAt(0); }));\r\n        }\r\n        else {\r\n            // atob not available\r\n            var decodingTable = new Int8Array([\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, 62, -1, 62, -1, 63,\r\n                52, 53, 54, 55, 56, 57, 58, 59,\r\n                60, 61, -1, -1, -1, -2, -1, -1,\r\n                -1, 0, 1, 2, 3, 4, 5, 6,\r\n                7, 8, 9, 10, 11, 12, 13, 14,\r\n                15, 16, 17, 18, 19, 20, 21, 22,\r\n                23, 24, 25, -1, -1, -1, -1, 63,\r\n                -1, 26, 27, 28, 29, 30, 31, 32,\r\n                33, 34, 35, 36, 37, 38, 39, 40,\r\n                41, 42, 43, 44, 45, 46, 47, 48,\r\n                49, 50, 51, -1, -1, -1, -1, -1 // x y z .  . . . .\r\n            ]);\r\n            var p = 0, bin = new Uint8Array(strlen);\r\n            for (var i = 0, len = base64.length; i < len;) {\r\n                var sextet_a = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_b = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_c = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_d = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var triple = (sextet_a << 18) +\r\n                    (sextet_b << 12) +\r\n                    (sextet_c << 6) +\r\n                    (sextet_d);\r\n                if (base64.charAt(i - 3) !== '=')\r\n                    bin[p++] = (triple >>> 16) & 0xff;\r\n                if (base64.charAt(i - 2) !== '=')\r\n                    bin[p++] = (triple >>> 8) & 0xff;\r\n                if (base64.charAt(i - 1) !== '=')\r\n                    bin[p++] = (triple) & 0xff;\r\n            }\r\n            return bin;\r\n        }\r\n    }\r\n    Convert.base642bin = base642bin;\r\n    /**\r\n     * Convert a byte array to hex string\r\n     * @param {Uint8Array} bin The input byte array\r\n     * @param {Boolean} uppercase True for upper case hex numbers\r\n     * @return {String} Hex sting\r\n     */\r\n    function bin2hex(bin, uppercase) {\r\n        if (uppercase === void 0) { uppercase = false; }\r\n        var hex = uppercase ? '0123456789ABCDEF' : '0123456789abcdef';\r\n        var str = '';\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            str += hex.charAt((bin[i] >>> 4) & 0x0f) + hex.charAt(bin[i] & 0x0f);\r\n            // str += bin[i].toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2hex = bin2hex;\r\n    /**\r\n     * Convert a byte array to string (UTF-8 dedode)\r\n     * @param {Uint8Array} bin UTF-8 text given as array of bytes\r\n     * @return {String} UTF-8 Text string\r\n     */\r\n    function bin2str(bin) {\r\n        var str = '', len = bin.length, i = 0, c, c2, c3;\r\n        while (i < len) {\r\n            c = bin[i];\r\n            if (c < 128) {\r\n                str += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                c2 = bin[i + 1];\r\n                str += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = bin[i + 1];\r\n                c3 = bin[i + 2];\r\n                str += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2str = bin2str;\r\n    /**\r\n     * Convert a byte value array in a long value array\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @return {Uint32Array} bin values in long format\r\n     */\r\n    function bin2longbin(bin) {\r\n        var longbin = new Uint32Array(bin.length >>> 2);\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            longbin[i >>> 2] |= (bin[i] << ((i % 4) << 3));\r\n        }\r\n        return longbin;\r\n    }\r\n    Convert.bin2longbin = bin2longbin;\r\n    /**\r\n     * Convert a 8 byte (int64) array into a number\r\n     * @param {Uint8Array} bin Array of 8 bytes (int64), LSB is [0], MSB is [7]\r\n     * @return {Number} int64 value as number\r\n     */\r\n    function bin2number(bin) {\r\n        var TWO_PWR_32 = 4294967296;\r\n        var i = 0;\r\n        var lo = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i++] << 24;\r\n        var hi = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i] << 24;\r\n        return hi * TWO_PWR_32 + ((lo >= 0) ? lo : TWO_PWR_32 + lo);\r\n    }\r\n    Convert.bin2number = bin2number;\r\n    /**\r\n     * Convert byte array to base64/base64url string\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @param {Boolean} url True if the string should be URL encoded (base64url encoding)\r\n     * @return {String} Base64 encoded string\r\n     */\r\n    function bin2base64(bin, url) {\r\n        if (url === void 0) { url = false; }\r\n        if (typeof btoa !== 'undefined') {\r\n            return url ? btoa(String.fromCharCode.apply(null, bin)).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '%3d') :\r\n                btoa(String.fromCharCode.apply(null, bin));\r\n        }\r\n        else {\r\n            // btoa not available\r\n            var base64 = '', encodingTable = url ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' :\r\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            for (var i = 0, len = bin.length; i < len;) {\r\n                var octet_a = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_b = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_c = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var triple = (octet_a << 0x10) + (octet_b << 0x08) + octet_c;\r\n                base64 += encodingTable.charAt((triple >>> 18) & 0x3F);\r\n                base64 += encodingTable.charAt((triple >>> 12) & 0x3F);\r\n                base64 += (i < bin.length + 2) ? encodingTable.charAt((triple >>> 6) & 0x3F) : (url ? '%3d' : '=');\r\n                base64 += (i < bin.length + 1) ? encodingTable.charAt((triple >>> 0) & 0x3F) : (url ? '%3d' : '=');\r\n            }\r\n            return base64;\r\n        }\r\n    }\r\n    Convert.bin2base64 = bin2base64;\r\n})(Convert = exports.Convert || (exports.Convert = {}));\r\n///////////////////////////////////////////////////////////////////////////////\r\n// U T I L S\r\nvar Util;\r\n(function (Util) {\r\n    /**\r\n     * Time constant comparison of two arrays\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Boolean} True if the arrays are equal (length and content), false otherwise\r\n     */\r\n    function compare(lh, rh) {\r\n        if (lh.length !== rh.length) {\r\n            // abort\r\n            return false;\r\n        }\r\n        var i, d = 0, len = lh.length;\r\n        for (i = 0; i < len; i++) {\r\n            d |= lh[i] ^ rh[i];\r\n        }\r\n        return d === 0;\r\n    }\r\n    Util.compare = compare;\r\n    /**\r\n     * Clear an array\r\n     * @param {Uint8Array | Uint16Array | Uint32Array} Array to clear\r\n     */\r\n    function clear(data) {\r\n        data.fill(0);\r\n    }\r\n    Util.clear = clear;\r\n    /**\r\n     * XOR two arrays and return the result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} XORed result array\r\n     */\r\n    function xor(lh, rh) {\r\n        return lh.map(function (val, ind) { return val ^ rh[ind]; });\r\n    }\r\n    Util.xor = xor;\r\n    /**\r\n     * Concat two arrays and returns a new result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} Concatenated result array\r\n     */\r\n    function concat(lh, rh) {\r\n        var x = new Uint8Array(lh.length + rh.length);\r\n        x.set(lh, 0);\r\n        x.set(rh, lh.length);\r\n        return x;\r\n    }\r\n    Util.concat = concat;\r\n    /**\r\n     * Returns true if LITTLE endian is detected\r\n     * @return {Boolean} True for LE, false for BE\r\n     */\r\n    function litteendian() {\r\n        return (new Uint32Array((new Uint8Array([1, 2, 3, 4])).buffer))[0] === 0x04030201;\r\n    }\r\n    Util.litteendian = litteendian;\r\n})(Util = exports.Util || (exports.Util = {}));\r\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nclass Util {\n\n  /**\n   * https://github.com/MauroJr/escape-regex/blob/master/index.js\n   * Tests are not performed.\n   *\n   * @param {String} string\n   * @returns {string}\n   */\n  /* istanbul ignore next */\n  static escapeRegex(string) {\n    return ('' + string).replace(/([?!${}*:()|=^[\\]\\/\\\\.+])/g, '\\\\$1');\n  }\n}\n\nmodule.exports = Util;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Util = require('../Util');\n\nconst P_VALUE = Symbol('value');\n\n// the list of characters to escape.\nconst CHARS_TO_ESCAPE = '(){}[]:\"<>'.split('');\nconst REGEX_TO_ESCAPE = `(${CHARS_TO_ESCAPE.map(c => Util.escapeRegex(c)).join('|')})`;\n\nconst ALLOWED_ALL = '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()-+{}[]_:\"|<>,.?/~'.split('');\nconst ALLOWED_START = ALLOWED_ALL.slice(10);\n\n/**\n * AccountName encoding for account names.\n */\nclass AccountName {\n  /**\n   * Constructor\n   * @param {String|AccountName} value\n   */\n  constructor(value) {\n    if (value instanceof AccountName) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = AccountName.validate(value);\n    }\n  }\n\n  /**\n   * Validates a string.\n   *\n   * @param {String} value\n   * @return {String}\n     */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    if (value.length < 3) {\n      throw new Error('Invalid account name, must be at least 3 characters long.');\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (pos === 0 && ALLOWED_START.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position 0`);\n      } else if (pos > 0 && ALLOWED_ALL.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n\n  /**\n   * Gets an escaped string representation for EPasa usage.\n   *\n   * @returns {*}\n   */\n  toStringEscaped() {\n    return this[P_VALUE].replace(new RegExp(REGEX_TO_ESCAPE, 'gm'), '\\\\$1');\n\n  }\n\n  /**\n   * Gets a value indicating whether the current char c1 is an escape modifier\n   * and the second is in the list of chars to escape.\n   *\n   * @param {String} c1\n   * @param {String} c2\n   * @returns {boolean}\n   */\n  static isEscape(c1, c2) {\n    return c1 === '\\\\' && CHARS_TO_ESCAPE.indexOf(c2) > -1;\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../BC');\nconst AccountNumber = require('./AccountNumber');\n\nconst P_BLOCK = Symbol('block');\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_MD160 = Symbol('md160');\n\n/**\n * Holds information about an operation hash.\n */\nclass OperationHash {\n  /**\n   * Constructor\n   *\n   * @param {Number} block\n   * @param {Number} account\n   * @param {Number} nOperation\n   * @param {BC|Buffer|Uint8Array|String} md160\n   */\n  constructor(block, account, nOperation, md160) {\n    this[P_BLOCK] = block;\n    this[P_ACCOUNT] = new AccountNumber(account);\n    this[P_N_OPERATION] = nOperation;\n    this[P_MD160] = BC.from(md160);\n\n    if (this[P_MD160].length !== 20) {\n      throw new Error('Invalid operation hash - md160 size !== 20 bytes.');\n    }\n  }\n\n  /**\n   * Gets the account that executed the operation.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the block number.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the number of operations for the executing account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the md160 of the op.\n   *\n   * @returns {BC}\n   */\n  get md160() {\n    return this[P_MD160];\n  }\n}\n\nmodule.exports = OperationHash;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\n\nconst P_KEY = Symbol('key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PrivateKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} key\n     * @param {Curve} curve\n     */\n  constructor(key, curve) {\n    this[P_KEY] = BC.from(key);\n    this[P_CURVE] = curve;\n\n    const privateKeyLength = curve.lPrivateKey();\n\n    if (this[P_KEY].length > privateKeyLength) {\n      throw new Error(`Invalid length for curve ${curve.name} - ` +\n          `expected <= ${privateKeyLength}, got ${this[P_KEY].length}`\n      );\n    }\n  }\n\n  /**\n     * Gets the key value.\n     *\n     * @returns {BC}\n     */\n  get key() {\n    return this[P_KEY];\n  }\n\n  /**\n     * Gets the ec key.\n     *\n     * @returns {BC}\n     */\n  get ec() {\n    return this.key;\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\nconst Curve = require('./Curve');\n\nconst P_X = Symbol('x');\nconst P_XL = Symbol('xl');\nconst P_Y = Symbol('y');\nconst P_YL = Symbol('yl');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PublicKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} x\n     * @param {BC|Buffer|Uint8Array|String} y\n     * @param {Curve} curve\n     */\n  constructor(x, y, curve) {\n    x = BC.from(x);\n    y = BC.from(y);\n\n    this[P_X] = x;\n    this[P_Y] = y;\n    this[P_XL] = x.length;\n    this[P_YL] = y.length;\n    this[P_CURVE] = curve;\n\n    if (this[P_XL] > curve.xylPublicKey('x') || this[P_YL] > curve.xylPublicKey('y')) {\n      throw new Error(`Invalid x and/or y length for curve ${curve.name} - ` +\n          `expected <= X${curve.xylPublicKey('x')}:Y${curve.xylPublicKey('y')}, ` +\n          `got X${this[P_XL]}:Y${this[P_YL]}`\n      );\n    }\n  }\n\n  /**\n     * Gets the X value of the key.\n     *\n     * @returns {BC}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the y value of the key.\n     *\n     * @returns {BC}\n     */\n  get y() {\n    return this[P_Y];\n  }\n\n  /**\n     * Gets the length of X.\n     *\n     * @returns {Number}\n     */\n  get yl() {\n    return this[P_YL];\n  }\n\n  /**\n     * Gets the length of Y.\n     *\n     * @returns {Number}\n     */\n  get xl() {\n    return this[P_XL];\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ec() {\n    return BC.concat(this.x, this.y);\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ecdh() {\n    return BC.concat(BC.fromInt(4), this.x, this.y);\n  }\n\n  /**\n     * Gets an empty public key instance.\n     *\n     * @returns {PublicKey}\n     */\n  static empty() {\n    return new PublicKey(\n      BC.fromString(''),\n      BC.fromString(''),\n      new Curve(0),\n    );\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\nconst Endian = require('./../../Endian');\nconst BN = require('bn.js');\n\nfunction validate64Bit(isUnsigned, value) {\n  if (isUnsigned) {\n    if (value.isNeg()) {\n      throw new Error('64bit value is negative. Only signed allowed.');\n    } else if (value.gt(new BN('18446744073709551615'))) {\n      throw new Error('Invalid unsigned 64 bit value.');\n    }\n  } else if (!isUnsigned) {\n    if (value.gt(new BN('9223372036854775807')) || value.lt(new BN('-9223372036854775808'))) {\n      throw new Error('Invalid signed 64 bit value.');\n    }\n  }\n\n  return value;\n}\n\n/**\n * Field type for 64bit int values using BN.js.\n */\nclass Int64 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned = true, endian = Endian.LITTLE_ENDIAN) {\n    super(id || 'int64', unsigned, endian);\n    this.description('8byte 64bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Int64';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 8;\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BN}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let value = new BN(BC.from(bc).buffer, 10, this.endian.toLowerCase());\n\n    if (!this.unsigned) {\n      value = value.fromTwos(64);\n    }\n\n    return validate64Bit(this.unsigned, value);\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {BN} value\n   */\n  encodeToBytes(value) {\n    value = validate64Bit(this.unsigned, value);\n    if (!this.unsigned) {\n      value = value.toTwos(64);\n    }\n\n    return BC.from(value.toBuffer(this.endian.toLowerCase(), this.encodedSize));\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    description.encodedSize = this.encodedSize;\n\n    if (arguments.length > 0) {\n      description.decoded = value;\n      description.decodedSimple = value.toString(10, this.encodedSize);\n      description.encoded = this.encodeToBytes(value).toHex();\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = Int64;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../../BC');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\n\nconst StringWithoutLength = require('./StringWithoutLength');\nconst Endian = require('./../../Endian');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_STRING_FIELD = Symbol('bytes_field');\n\n/**\n * A field type to write dynamic strings (prepends the length).\n */\nclass StringWithLength extends AbstractType {\n\n  constructor(id, byteSize = 1) {\n    super(id || `bytes_size${byteSize * 8}`);\n    this.description('String with size prepended');\n    this[P_STRING_FIELD] = new StringWithoutLength('value');\n\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8('length', true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16('length', true, Endian.LITTLE_ENDIAN);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32('length', true, Endian.LITTLE_ENDIAN);\n        break;\n      default:\n        throw new Error('ByteSize must be either 1, 2 or 4');\n    }\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'StringWithLength';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].decodeFromBytes(BC.from(bc));\n    return this[P_STRING_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize,\n        this[P_LENGTH_FIELD].encodedSize + this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    this[P_SIZE_ENCODED] = value.length;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(this[P_SIZE_ENCODED]);\n\n    return bc.append(this[P_STRING_FIELD].encodeToBytes(value));\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    if (arguments.length > 0) {\n      description.decoded = value;\n      description.encoded = this.encodeToBytes(value);\n      description.encodedSize = this.encodedSize;\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = StringWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write dynamic strings without prepending the length.\n */\nclass StringWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'string_without_length');\n    this.description('Single string value without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'StringWithoutLength';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).toString();\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value, 'string');\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = {\n      id: this.id,\n      type: this.typeInfo\n    };\n\n    if (arguments.length > 0) {\n      description.value = value;\n      description.encoded = this.encodeToBytes(value).toHex();\n      description.encodedSize = this.encodedSize;\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = StringWithoutLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNumberType = require('./../../Types/AccountNumber');\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass AccountNumber extends Int32 {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'account', true, Endian.LITTLE_ENDIAN);\n    this.description('An account number');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'AccountNumber';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNumberType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNumberType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNumberType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.account);\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    return super.describe(value);\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass NOperation extends Int32 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'nOperation', true, Endian.LITTLE_ENDIAN);\n    this.description('Accounts n_operation value.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'NOperation';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n}\n\nmodule.exports = NOperation;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst jaysonBrowserClient = require('jayson/lib/client/browser');\nconst fetch = require('node-fetch');\nconst ConnectionError = require('./Errors/ConnectionError');\nconst ResultError = require('./Errors/ResultError');\n\nconst P_CLIENT = Symbol('client');\n\n/**\n * A caller object that can call JSON-RPC methods.\n */\nclass Caller {\n  /**\n     * Creates a new caller instance.\n     *\n     * @param {String} host\n     */\n  constructor(host) {\n    this[P_CLIENT] = jaysonBrowserClient((request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      return fetch(host, options)\n        .then(res => res.text())\n        .then((text) => {\n          callback(null, text);\n        })\n        .catch((err) => {\n          callback(err);\n        });\n    });\n  }\n\n  /**\n     * Calls the given method with the given params and returns a promise.\n     *\n     * @param {String}method\n     * @param {Object} params\n     * @returns {Promise<any>}\n     */\n  call(method, params) {\n    return new Promise((resolve, reject) => {\n      this[P_CLIENT].request(method, params, (err, error, result) => {\n        if (err !== null || error !== undefined || result === undefined) {\n          if (err !== null && err.constructor.name === 'FetchError') {\n            return reject(new ConnectionError(err));\n          }\n          if (error !== null && error !== undefined && err.constructor.name !== 'FetchError') {\n            return reject(new ResultError(error.code, error.message));\n          }\n          if (result !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          return resolve(result);\n        }\n        return resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Caller;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ORIGINAL = Symbol('original');\nconst P_MESSAGE = Symbol('message');\n\nclass ConnectionError {\n  constructor(originalFetchError) {\n    this[P_ORIGINAL] = originalFetchError;\n    this[P_MESSAGE] = originalFetchError.message;\n  }\n\n  get original() {\n    return this[P_ORIGINAL];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ConnectionError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CODE = Symbol('code');\nconst P_MESSAGE = Symbol('message');\n\nclass ResultError {\n  constructor(code, message) {\n    this[P_CODE] = code;\n    this[P_MESSAGE] = message;\n  }\n\n  get code() {\n    return this[P_CODE];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ResultError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\n\n/**\n * Whenever a remote endpoint has paging possibilities, this action will be\n * returned.\n */\nclass PagedAction extends BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.changeParam('start', 0);\n    this.changeParam('max', 100);\n  }\n\n  set start(start) {\n    this.changeParam('start', start);\n    return this;\n  }\n\n  set max(max) {\n    this.changeParam('max', max);\n    return this;\n  }\n\n  /**\n   * Executes the current action and returns all results.\n   *\n   * @returns {Promise}\n   */\n  async executeAll() {\n    let all = [];\n    let transformCallback = null;\n\n    await this.executeAllReport(([data, transform]) => {\n      if (transformCallback === null) {\n        transformCallback = transform;\n      }\n      data.forEach(item => all.push(item));\n    });\n    return [all, transformCallback];\n  }\n\n  /**\n   * Executes the current action and reports the results of each step to the\n   * given reporter.\n   *\n   * @returns {Promise}\n   */\n  async executeAllReport(reporter, restEach = -1, restSeconds = -1, restCallback = null) {\n    let result = [];\n    var reports = 0;\n\n    do {\n      if (restEach > -1 && reports > 0 && reports % restEach === 0) {\n        if (restCallback !== null) {\n          restCallback();\n        }\n        await (async () => {\n          return new Promise(function (resolve) {\n            setTimeout(function () {\n              resolve();\n            }, restSeconds * 1000);\n          });\n        })();\n      }\n\n      result = await this.execute();\n      let c = reporter(result);\n\n      // being able to stop execution\n      if (c === false) {\n        return;\n      }\n      reports++;\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result[0].length > 0 && result[0].length === this.params.max);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = PagedAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst OperationAction = require('./OperationAction');\nconst BC = require('@pascalcoin-sbx/common').BC;\n\n/**\n * This object derives from an operation action and extends the functionality\n * by methods shared by cold wallet signing operations.\n */\nclass SignOperationAction extends OperationAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.last_n_operation = null;\n    this.params.rawoperations = null;\n  }\n\n  /**\n     * Sets the last n operation value.\n     *\n     * @param {Number} lastNOperation\n     * @return {SignOperationAction}\n     */\n  withLastNOperation(lastNOperation) {\n    this.params.last_n_operation = lastNOperation;\n    return this;\n  }\n\n  /**\n     * Sets the raw operations instance of a previous result.\n     *\n     * @param {BC|String} rawoperations\n     * @return {SignOperationAction}\n     */\n  withRawOperations(rawoperations) {\n    this.params.rawoperations = BC.from(rawoperations);\n  }\n\n  isValid() {\n    return super.isValid() && this.params.last_n_operation !== null;\n  }\n}\n\nmodule.exports = SignOperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst NetProtocol = require('./NetProtocol');\nconst NetStats = require('./NetStats');\nconst NodeServer = require('./NodeServer');\n\nconst P_READY = Symbol('ready');\nconst P_READY_S = Symbol('ready_s');\nconst P_STATUS_S = Symbol('status_s');\nconst P_PORT = Symbol('port');\nconst P_LOCKED = Symbol('locked');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_BLOCKS = Symbol('blocks');\nconst P_NODESERVERS = Symbol('nodeservers');\nconst P_NETSTATS = Symbol('netstats');\nconst P_VERSION = Symbol('version');\nconst P_NETPROTOCOL = Symbol('netprotocol');\nconst P_SBH = Symbol('sbh');\nconst P_POW = Symbol('pow');\nconst P_OPENSSL = Symbol('openssl');\n\nclass NodeStatus extends Abstract {\n  constructor(data) {\n    super(data);\n\n    this[P_READY] = !!data.ready;\n    this[P_READY_S] = data.ready_s;\n    this[P_STATUS_S] = data.status_s;\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LOCKED] = !!data.locked;\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_BLOCKS] = parseInt(data.blocks, 10);\n    this[P_VERSION] = data.version;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_OPENSSL] = BC.fromHex(data.openssl);\n    this[P_NETPROTOCOL] = new NetProtocol(data.netprotocol);\n    this[P_NETSTATS] = new NetStats(data.netstats);\n    this[P_NODESERVERS] = data.nodeservers.map(ns => new NodeServer(ns));\n  }\n\n  /**\n     * Gets a flag indicating whether the node is ready.\n     *\n     * @returns {Boolean}\n     */\n  get ready() {\n    return this[P_READY];\n  }\n\n  /**\n     * Gets a string explaining the ready status.\n     *\n     * @returns {String}\n     */\n  get readyS() {\n    return this[P_READY_S];\n  }\n\n  /**\n     * Gets a string defining the status of the node.\n     *\n     * @returns {String}\n     */\n  get statusS() {\n    return this[P_STATUS_S];\n  }\n\n  /**\n     * Gets the port of the node.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets a value indicating whether the wallet is locked.\n     *\n     * @returns {Boolean}\n     */\n  get locked() {\n    return this[P_LOCKED];\n  }\n\n  /**\n     * Gets the timestamp where the node runs.\n     *\n     * @returns {Number}\n     */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {Number}\n     */\n  get blocks() {\n    return this[P_BLOCKS];\n  }\n\n  /**\n     * Gets the list of nodeservers.\n     *\n     * @returns {NodeServer[]}\n     */\n  get nodeservers() {\n    return this[P_NODESERVERS];\n  }\n\n  /**\n     * Gets the netstats\n     *\n     * @returns {NetStats}\n     */\n  get netstats() {\n    return this[P_NETSTATS];\n  }\n\n  /**\n     * Gets the node version info.\n     *\n     * @returns {Version}\n     */\n  get version() {\n    return this[P_VERSION];\n  }\n\n  /**\n     * Gets the info about the protocol versions.\n     *\n     * @returns {NetProtocol}\n     */\n  get netprotocol() {\n    return this[P_NETPROTOCOL];\n  }\n\n  /**\n     * Gets the last safebox hash.\n     *\n     * @returns {BC}\n     */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n     * Gets the last known POW.\n     *\n     * @returns {BC}\n     */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n     * Gets the openssl info.\n     *\n     * @returns {BC}\n     */\n  get openssl() {\n    return this[P_OPENSSL];\n  }\n}\n\nmodule.exports = NodeStatus;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('verA');\n\n/**\n * Holds information about a nodes version.\n */\nclass NetProtocol extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n  }\n\n  /**\n     * Gets the wallets protocol version.\n     *\n     * @returns {Number}\n     */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n     * Gets the miners protocol version.\n     *\n     * @returns {Number}\n     */\n  get verA() {\n    return this[P_VER_A];\n  }\n}\n\nmodule.exports = NetProtocol;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_BRECEIVED = Symbol('breceived');\nconst P_SERVERS_T = Symbol('servers_t');\nconst P_TSERVERS = Symbol('tservers');\nconst P_TOTAL = Symbol('total');\nconst P_BSEND = Symbol('bsend');\nconst P_SERVERS = Symbol('servers');\nconst P_CLIENTS = Symbol('clients');\nconst P_ACTIVE = Symbol('active');\nconst P_TCLIENTS = Symbol('tclients');\n\n/**\n * Class that holds netstats of a node server.\n */\nclass NetStats extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_BRECEIVED] = parseInt(data.breceived, 10);\n    this[P_SERVERS_T] = parseInt(data.servers_t, 10);\n    this[P_TSERVERS] = parseInt(data.tservers, 10);\n    this[P_TOTAL] = parseInt(data.total, 10);\n    this[P_BSEND] = parseInt(data.bsend, 10);\n    this[P_SERVERS] = parseInt(data.servers, 10);\n    this[P_CLIENTS] = parseInt(data.clients, 10);\n    this[P_ACTIVE] = parseInt(data.active, 10);\n    this[P_TCLIENTS] = parseInt(data.tclients, 10);\n  }\n\n  /**\n     * Gets the received bytes.\n     *\n     * @returns {Number}\n     */\n  get breceived() {\n    return this[P_BRECEIVED];\n  }\n\n  /**\n     * Gets the number of server connections\n     *\n     * @returns {Number}\n     */\n  get serversT() {\n    return this[P_SERVERS_T];\n  }\n\n  /**\n     * Gets the number of server connections.\n     *\n     * @returns {Number}\n     */\n  get tservers() {\n    return this[P_TSERVERS];\n  }\n\n  /**\n     * Gets the number of total connections.\n     *\n     * @returns {Number}\n     */\n  get total() {\n    return this[P_TOTAL];\n  }\n\n  /**\n     * Gets the number of bytes sent.\n     *\n     * @returns {Number}\n     */\n  get bsend() {\n    return this[P_BSEND];\n  }\n\n  /**\n     * Gets the number of servers that responded.\n     *\n     * @returns {Number}\n     */\n  get servers() {\n    return this[P_SERVERS];\n  }\n\n  /**\n     * Gets the number of client connections.\n     *\n     * @returns {Number}\n     */\n  get clients() {\n    return this[P_CLIENTS];\n  }\n\n  /**\n     * Gets the number of active connections.\n     *\n     * @returns {Number}\n     */\n  get active() {\n    return this[P_ACTIVE];\n  }\n\n  /**\n     * Gets the number of total client connections.\n     *\n     * @returns {Number}\n     */\n  get tclients() {\n    return this[P_TCLIENTS];\n  }\n}\n\nmodule.exports = NetStats;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_PORT = Symbol('port');\nconst P_LASTCON = Symbol('lastcon');\nconst P_ATTEMPTS = Symbol('attempts');\nconst P_IP = Symbol('ip');\n\n/**\n * Holds information about a single node server connection.\n */\nclass NodeServer extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LASTCON] = parseInt(data.lastcon, 10);\n    this[P_ATTEMPTS] = parseInt(data.attempts, 10);\n    this[P_IP] = data.ip;\n  }\n\n  /**\n     * Gets the port of the server.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets the timestamp of the last connection.\n     *\n     * @returns {Number}\n     */\n  get lastcon() {\n    return this[P_LASTCON];\n  }\n\n  /**\n     * Gets the number of connection attempts.\n     *\n     * @returns {Number}\n     */\n  get attempts() {\n    return this[P_ATTEMPTS];\n  }\n\n  /**\n     * Gets the IP of the node.\n     *\n     * @returns {String}\n     */\n  get ip() {\n    return this[P_IP];\n  }\n}\n\nmodule.exports = NodeServer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\n\nconst opHashCoder = new OperationHashCoder();\n\nconst Sender = require('./Sender');\nconst Receiver = require('./Receiver');\nconst Changer = require('./Changer');\n\nconst P_VALID = Symbol('valid');\nconst P_ERRORS = Symbol('errors');\nconst P_BLOCK = Symbol('block');\nconst P_TIME = Symbol('time');\nconst P_OPBLOCK = Symbol('opblock');\nconst P_PAYLOAD = Symbol('payload');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPTYPE = Symbol('optype');\nconst P_ACCOUNT = Symbol('account');\nconst P_OPTXT = Symbol('optxt');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_BALANCE = Symbol('balance');\nconst P_OPHASH = Symbol('ophash');\nconst P_OLD_OPHASH = Symbol('old_ophash');\nconst P_SUBTYPE = Symbol('subtype');\nconst P_SIGNER_ACCOUNT = Symbol('signer_account');\nconst P_CHANGERS = Symbol('changers');\nconst P_SENDERS = Symbol('senders');\nconst P_RECEIVERS = Symbol('receivers');\n\n/**\n * A class thats holds the information about an operation.\n */\nclass Operation extends Abstract {\n  // The available optypes\n  static get BLOCKCHAIN_REWARD() {\n    return 0;\n  }\n\n  static get TRANSACTION() {\n    return 1;\n  }\n\n  static get CHANGE_KEY() {\n    return 2;\n  }\n\n  static get RECOVER_FUNDS() {\n    return 3;\n  }\n\n  static get LIST_FOR_SALE() {\n    return 4;\n  }\n\n  static get DELIST() {\n    return 5;\n  }\n\n  static get BUY() {\n    return 6;\n  }\n\n  static get CHANGE_KEY_ACCOUNT() {\n    return 7;\n  }\n\n  static get CHANGE_ACCOUNT_INFO() {\n    return 8;\n  }\n\n  static get MULTI_OPERATION() {\n    return 9;\n  }\n\n  static get DATA() {\n    return 10;\n  }\n\n  static get SUBTYPE_MINER() {\n    return 1;\n  }\n  static get SUBTYPE_DEVELOPER() {\n    return 2;\n  }\n  static get SUBTYPE_TX_SENDER() {\n    return 11;\n  }\n  static get SUBTYPE_TX_RECEIVER() {\n    return 12;\n  }\n  static get SUBTYPE_TX_BUY_BUYER() {\n    return 13;\n  }\n  static get SUBTYPE_TX_BUY_TARGET() {\n    return 14;\n  }\n  static get SUBTYPE_TX_BUY_SELLER() {\n    return 15;\n  }\n  static get SUBTYPE_CHANGE_KEY() {\n    return 21;\n  }\n  static get SUBTYPE_RECOVER() {\n    return 31;\n  }\n  static get SUBTYPE_LIST_PUBLIC() {\n    return 41;\n  }\n  static get SUBTYPE_LIST_PRIVATE() {\n    return 42;\n  }\n  static get SUBTYPE_DELIST() {\n    return 51;\n  }\n  static get SUBTYPE_BUY_BUYER() {\n    return 61;\n  }\n  static get SUBTYPE_BUY_TARGET() {\n    return 62;\n  }\n  static get SUBTYPE_BUY_SELLER() {\n    return 63;\n  }\n  static get SUBTYPE_CHANGE_KEY_SIGNED() {\n    return 71;\n  }\n  static get SUBTYPE_CHANGE_ACCOUNT_INFO() {\n    return 81;\n  }\n  static get SUBTYPE_MULTI_GLOBAL() {\n    return 91;\n  }\n  static get SUBTYPE_MULTI_ACCOUNT_INFO() {\n    return 92;\n  }\n  static get SUBTYPE_DATA_GLOBAL() {\n    return 101;\n  }\n  static get SUBTYPE_DATA_SENDER() {\n    return 102;\n  }\n  static get SUBTYPE_DATA_SIGNER() {\n    return 103;\n  }\n  static get SUBTYPE_DATA_RECEIVER() {\n    return 104;\n  }\n\n  /**\n   * Creates a new Operation instance from an rpc response.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_VALID] = true;\n    if (data.valid !== undefined) {\n      this[P_VALID] = !!data.valid;\n    }\n\n    this[P_ERRORS] = null;\n    if (data.errors !== undefined) {\n      this[P_ERRORS] = data.errors;\n    }\n\n    if (data.payload !== undefined) {\n      this[P_PAYLOAD] = BC.fromHex(data.payload);\n    } else {\n      this[P_PAYLOAD] = BC.fromHex('');\n    }\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_TIME] = parseInt(data.time, 10);\n    this[P_OPBLOCK] = parseInt(data.opblock, 10);\n    this[P_MATURATION] = 0;\n    // pending\n    if (data.maturation !== null) {\n      this[P_MATURATION] = parseInt(data.maturation, 10);\n    }\n\n    this[P_OPTYPE] = parseInt(data.optype, 10);\n    // multi-op\n    this[P_ACCOUNT] = null;\n    if (data.account !== undefined) {\n      this[P_ACCOUNT] = new AccountNumber(data.account);\n    }\n    this[P_OPTXT] = data.optxt;\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_BALANCE] = null;\n    if (data.balance !== undefined) {\n      this[P_BALANCE] = new Currency(data.balance);\n    }\n\n    this[P_OPHASH] = null;\n    if (data.ophash !== undefined) {\n      this[P_OPHASH] = BC.fromHex(data.ophash);\n      if (this[P_OPTYPE] !== Operation.BLOCKCHAIN_REWARD) {\n        this[P_OPHASH] = opHashCoder.decodeFromBytes(this[P_OPHASH]);\n      }\n    }\n\n    this[P_OLD_OPHASH] = null;\n    if (data.old_ophash !== undefined) {\n      this[P_OLD_OPHASH] = BC.fromHex(data.old_ophash);\n    }\n\n    this[P_SUBTYPE] = data.subtype;\n    this[P_SIGNER_ACCOUNT] = null;\n    if (data.signer_account !== undefined) {\n      this[P_SIGNER_ACCOUNT] = new AccountNumber(data.signer_account);\n    }\n\n    // eslint-disable-next-line no-multi-assign\n    this[P_SENDERS] = [];\n    this[P_RECEIVERS] = [];\n    this[P_CHANGERS] = [];\n\n    // loop given data and initialize objects\n    data.senders.forEach(s => this[P_SENDERS].push(new Sender(s)));\n    data.receivers.forEach(r => this[P_RECEIVERS].push(new Receiver(r)));\n    data.changers.forEach(c => this[P_CHANGERS].push(new Changer(c)));\n  }\n\n  /**\n   * Gets an indicator whether the operation was valid.\n   *\n   * @returns {Boolean}\n   */\n  get valid() {\n    return this[P_VALID];\n  }\n\n  /**\n   * If the operation is invalid you'll get the error message.\n   *\n   * @returns {String|null}\n   */\n  get errors() {\n    return this[P_ERRORS];\n  }\n\n  /**\n   * Gets the block that is associated with the operation.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the time of the operation.\n   *\n   * @returns {Number}\n   */\n  get time() {\n    return this[P_TIME];\n  }\n\n  /**\n   * Gets the position inside a block.\n   *\n   * @returns {Number}\n   */\n  get opBlock() {\n    return this[P_OPBLOCK];\n  }\n\n  /**\n   * Gets the age in blocks of the operation.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the type of the operation.\n   *\n   * @returns {Number}\n   */\n  get opType() {\n    return this[P_OPTYPE];\n  }\n\n  /**\n   * Gets the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets a textual representation of the operation.\n   *\n   * @returns {String}\n   */\n  get opTxt() {\n    return this[P_OPTXT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the fee.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Number}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {OperationHash}\n   */\n  get opHash() {\n    return this[P_OPHASH];\n  }\n\n  /**\n   * Gets the <= V2 operation Hash.\n   *\n   * @returns {BC|null}\n   */\n  get oldOpHash() {\n    return this[P_OLD_OPHASH];\n  }\n\n  /**\n   * Gets the subtype.\n   *\n   * @returns {String}\n   */\n  get subType() {\n    return this[P_SUBTYPE];\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get signerAccount() {\n    return this[P_SIGNER_ACCOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the list of changers.\n   *\n   * @returns {Changer[]}\n   */\n  get changers() {\n    return this[P_CHANGERS];\n  }\n\n  /**\n   * Gets the list of senders.\n   *\n   * @returns {Sender[]}\n   */\n  get senders() {\n    return this[P_SENDERS];\n  }\n\n  /**\n   * Gets the list of receivers.\n   *\n   * @returns {Receiver[]}\n   */\n  get receivers() {\n    return this[P_RECEIVERS];\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BLOCKCHAIN_REWARD operation.\n   *\n   * @returns {boolean}\n   */\n  isBlockchainReward() {\n    return this[P_OPTYPE] === Operation.BLOCKCHAIN_REWARD;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a TRANSACTION operation.\n   *\n   * @returns {boolean}\n   */\n  isTransaction() {\n    return this[P_OPTYPE] === Operation.TRANSACTION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKey() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a RECOVER_FUNDS operation.\n   *\n   * @returns {boolean}\n   */\n  isRecoverFunds() {\n    return this[P_OPTYPE] === Operation.RECOVER_FUNDS;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a LIST_FOR_SALE operation.\n   *\n   * @returns {boolean}\n   */\n  isListForSale() {\n    return this[P_OPTYPE] === Operation.LIST_FOR_SALE;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DELIST operation.\n   *\n   * @returns {boolean}\n   */\n  isDelist() {\n    return this[P_OPTYPE] === Operation.DELIST;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BUY operation.\n   *\n   * @returns {boolean}\n   */\n  isBuy() {\n    return this[P_OPTYPE] === Operation.BUY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY_ACCOUNT operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKeyAccount() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY_ACCOUNT;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_ACCOUNT_INFO operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeAccountInfo() {\n    return this[P_OPTYPE] === Operation.CHANGE_ACCOUNT_INFO;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a MULTI_OPERATION operation.\n   *\n   * @returns {boolean}\n   */\n  isMultiOperation() {\n    return this[P_OPTYPE] === Operation.MULTI_OPERATION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DATA operation.\n   *\n   * @returns {boolean}\n   */\n  isData() {\n    return this[P_OPTYPE] === Operation.DATA;\n  }\n\n  /**\n   * Gets a value indicating whether the op is pending.\n   *\n   * @returns {boolean}\n   */\n  isPending() {\n    return this[P_BLOCK] === 0;\n  }\n\n  /**\n   * Gets a value indicating whether the operation was not executed because of\n   * fees.\n   *\n   * @returns {boolean}\n   */\n  isZeroFeeError() {\n    return this.valid === false &&\n        this[P_ERRORS].indexOf('zero fee operations per block') > -1;\n  }\n}\n\nmodule.exports = Operation;\n","module.exports = require(\"https\");","module.exports = {\n  Client: require('./src/Client'),\n  Executor: require('./src/Executor'),\n  Caller: require('./src/Caller'),\n  Actions: require('./src/Actions'),\n  Errors: require('./src/Errors'),\n  Types: require('./src/Types')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Executor = require('./Executor');\nconst RPCCaller = require('./Caller');\nconst BaseAction = require('./Actions/BaseAction');\nconst PagedAction = require('./Actions/PagedAction');\nconst OperationAction = require('./Actions/OperationAction');\nconst SignOperationAction = require('./Actions/SignOperationAction');\nconst Account = require('./Types/Account');\nconst Block = require('./Types/Block');\nconst SignedMessage = require('./Types/SignedMessage');\nconst NodeStatus = require('./Types/NodeStatus');\nconst Operation = require('./Types/Operation');\nconst Sender = require('./Types/Sender');\nconst Receiver = require('./Types/Receiver');\nconst Changer = require('./Types/Changer');\nconst Connection = require('./Types/Connection');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n * A simple rpc client that will prepare an action that can be executed against\n * a node.\n */\nclass Client {\n\n  /**\n   * Returns a standard instance pointing to the given rpc host node.\n   *\n   * @param {String} rpcHostAddress\n   * @returns {Client}\n   */\n  static factory(rpcHostAddress) {\n    return new Client(\n      new Executor(\n        new RPCCaller(rpcHostAddress),\n      ),\n    );\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Executor} executor\n   */\n  constructor(executor) {\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n   * Adds nodes the remote node should connect to.\n   *\n   * @param {String[]} nodes - The list of nodes (will be transformed to a semicolon separated list)\n   *\n   * @returns {BaseAction}\n   */\n  addNode({\n    nodes\n  }) {\n    return new BaseAction('addnode', {\n      nodes: nodes.join(';')\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an account with the given account number.\n   *\n   * @param {AccountNumber|Number|String} account\n   *\n   * @returns {BaseAction}\n   */\n  getAccount({\n    account\n  }) {\n    return new BaseAction('getaccount', {\n      account: new AccountNumber(account)\n    }, this[P_EXECUTOR], Account, false);\n  }\n\n  /**\n   * Searches for accounts.\n   *\n   * @param {AccountName|String|null} name\n   * @param {Number|null} type\n   * @param {Boolean|null} onlyAccountsForSale\n   * @param {Boolean|null} exact\n   * @param {Currency|null} minBalance\n   * @param {Currency|null} maxBalance\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  findAccounts({\n    name = null,\n    type = null,\n    onlyAccountsForSale = null,\n    exact = null,\n    minBalance = null,\n    maxBalance = null,\n    pubkey = null\n  }) {\n    return new PagedAction('findaccounts', {\n      name: name !== null ? new AccountName(name) : name,\n      type: type !== null ? parseInt(type, 10) : type,\n      only_accounts_for_sale: onlyAccountsForSale,\n      exact,\n      min_balance: minBalance !== null ? new Currency(minBalance) : minBalance,\n      max_balance: maxBalance !== null ? new Currency(maxBalance) : maxBalance,\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns all accounts of a wallet with the given public key\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletAccounts({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletaccounts', {\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns the number of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletAccountsCount({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletaccountscount', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the accumulated balance of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletCoins({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletcoins', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the list of public keys managed in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletPubKeys({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletpubkeys', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Gets the info of a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletPubKey({\n    pubkey\n  }) {\n    return new BaseAction('getwalletpubkey', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Imports a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   * @param {String|null} name\n   *\n   * @returns {BaseAction}\n   */\n  inportPubKey({\n    pubkey,\n    name = null\n  }) {\n    return new BaseAction('importpubkey', {\n      pubkey,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Gets the information of a block\n   *\n   * @param {Number} block\n   *\n   * @returns {BaseAction}\n   */\n  getBlock({\n    block\n  }) {\n    return new BaseAction('getblock', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Block, false);\n  }\n\n  /**\n   * Gets a list of blocks\n   *\n   * @param {Number|null} last\n   * @param {Number|null} start\n   * @param {Number|null} end\n   *\n   * @returns {BaseAction}\n   */\n  getBlocks({\n    last = null,\n    start = null,\n    end = null\n  }) {\n    return new BaseAction('getblocks', {\n      last: last !== null ? parseInt(last, 10) : last,\n      start: start !== null ? parseInt(start, 10) : start,\n      end: end !== null ? parseInt(end, 10) : end\n    }, this[P_EXECUTOR], Block, true);\n  }\n\n  /**\n   * Gets the list of all blocks.\n   *\n   * @returns {BaseAction}\n   */\n  getBlockCount() {\n    return new BaseAction('getblockcount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an operation in a block\n   *\n   * @param {Number} block\n   * @param {Number} opblock\n   *\n   * @returns {BaseAction}\n   */\n  getBlockOperation({\n    block,\n    opblock\n  }) {\n    return new BaseAction('getblockoperation', {\n      block: block !== null ? parseInt(block, 10) : block,\n      opblock: opblock !== null ? parseInt(opblock, 10) : opblock\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Get all operations in a block\n   *\n   * @param {Number} block\n   *\n   * @returns {PagedAction}\n   */\n  getBlockOperations({\n    block\n  }) {\n    return new PagedAction('getblockoperations', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Get all operations of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number|null} depth\n   * @param {Number|null} startblock\n   *\n   * @returns {PagedAction}\n   */\n  getAccountOperations({\n    account,\n    depth = null,\n    startblock = null\n  }) {\n    return new PagedAction('getaccountoperations', {\n      account: new AccountNumber(account),\n      depth: depth !== null ? parseInt(depth, 10) : depth,\n      startblock: startblock !== null ? parseInt(startblock, 10) : startblock\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets all pending operations\n   *\n   * @returns {PagedAction}\n   */\n  getPendings() {\n    return new PagedAction('getpendings', {}, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets the number of pending operations\n   *\n   * @returns {BaseAction}\n   */\n  getPendingsCount() {\n    return new BaseAction('getpendingscount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Decodes the given operation hash\n   *\n   * @param {OperationHash} ophash\n   *\n   * @returns {BaseAction}\n   */\n  decodeOpHash({\n    ophash\n  }) {\n    return new BaseAction('decodeophash', {\n      ophash\n    }, this[P_EXECUTOR], OperationHash, false);\n  }\n\n  /**\n   * Searches for an operation\n   *\n   * @param {OperationHash|null} ophash\n   *\n   * @returns {BaseAction}\n   */\n  findOperation({\n    ophash = null\n  }) {\n    return new BaseAction('findoperation', {\n      ophash\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for an operation signed by account and with n_operation, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperation\n   * @param {Number|null} block\n   *\n   * @returns {BaseAction}\n   */\n  findNOperation({\n    account,\n    nOperation,\n    block = null\n  }) {\n    return new BaseAction('findnoperation', {\n      account: new AccountNumber(account),\n      n_operation: nOperation !== null ? parseInt(nOperation, 10) : nOperation,\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for operations signed by account within an n_operation range, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperationMin\n   * @param {Number} nOperationMax\n   *\n   * @returns {PagedAction}\n   */\n  findNOperations({\n    account,\n    nOperationMin,\n    nOperationMax\n  }) {\n    return new PagedAction('findnoperations', {\n      account: new AccountNumber(account),\n      n_operation_min: nOperationMin !== null ? parseInt(nOperationMin, 10) : nOperationMin,\n      n_operation_max: nOperationMax !== null ? parseInt(nOperationMax, 10) : nOperationMax\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {Currency} amount\n   *\n   * @returns {OperationAction}\n   */\n  sendTo({\n    sender,\n    target,\n    amount\n  }) {\n    return new OperationAction('sendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} senderPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} targetPubkey\n   * @param {Currency} amount\n   *\n   * @returns {SignOperationAction}\n   */\n  signSendTo({\n    sender,\n    target,\n    senderPubkey,\n    targetPubkey,\n    amount\n  }) {\n    return new SignOperationAction('signsendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      sender_pubkey: senderPubkey,\n      target_pubkey: targetPubkey,\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {OperationAction}\n   */\n  changeKey({\n    account,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new OperationAction('changekey', {\n      account: new AccountNumber(account),\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of multiple accounts\n   *\n   * @param {AccountNumber[]|Number[]|String[]} accounts\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  changeKeys({\n    accounts,\n    newPubkey\n  }) {\n    return new OperationAction('changekeys', {\n      accounts: accounts.map((acc) => new AccountNumber(acc)),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change key operation\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} oldPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeKey({\n    account,\n    oldPubkey,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new SignOperationAction('signchangekey', {\n      account: new AccountNumber(account),\n      old_pubkey: oldPubkey,\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Lists an account for sale\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  listAccountForSale({\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new OperationAction('listaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a list operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {SignOperationAction}\n   */\n  signListAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new SignOperationAction('signlistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Delists an account\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {OperationAction}\n   */\n  DelistAccountForSale({\n    accountSigner,\n    accountTarget\n  }) {\n    return new OperationAction('delistaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a delist operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {SignOperationAction}\n   */\n  signDelistAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget\n  }) {\n    return new SignOperationAction('signdelistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Buys an account\n   *\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency|null} price\n   * @param {AccountNumber|Number|String|null} sellerAccount\n   *\n   * @returns {OperationAction}\n   */\n  buyAccount({\n    buyerAccount,\n    accountToPurchase,\n    price = null,\n    sellerAccount = null\n  }) {\n    return new OperationAction('buyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: price !== null ? new Currency(price) : price,\n      seller_account: sellerAccount !== null ? new AccountNumber(sellerAccount) : sellerAccount\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a buy account operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency} price\n   * @param {AccountNumber|Number|String} sellerAccount\n   *\n   * @returns {SignOperationAction}\n   */\n  signBuyAccount({\n    signerPubkey,\n    buyerAccount,\n    accountToPurchase,\n    price,\n    sellerAccount\n  }) {\n    return new SignOperationAction('signbuyaccount', {\n      signer_pubkey: signerPubkey,\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: new Currency(price),\n      seller_account: new AccountNumber(sellerAccount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes account infos\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {OperationAction}\n   */\n  changeAccountInfo({\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new OperationAction('changeaccountinfo', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change account info operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeAccountInfo({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new SignOperationAction('signchangeaccountinfo', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a message using the given public key\n   *\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  signMessage({\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('signmessage', {\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Verifies a signature\n   *\n   * @param {BC} signature\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  verifySign({\n    signature,\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('verifysign', {\n      signature,\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Removes an operation from the given rawoperations.\n   *\n   * @param {BC} rawoperations\n   * @param {Number} index\n   *\n   * @returns {BaseAction}\n   */\n  operationsDelete({\n    rawoperations,\n    index\n  }) {\n    return new BaseAction('operationsdelete', {\n      rawoperations,\n      index: index !== null ? parseInt(index, 10) : index\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the information about the given operation\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  operationsInfo({\n    rawoperations\n  }) {\n    return new BaseAction('operationsinfo', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes the given operations\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  executeOperations({\n    rawoperations\n  }) {\n    return new BaseAction('executeoperations', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Returns the current node status\n   *\n   * @returns {BaseAction}\n   */\n  nodeStatus() {\n    return new BaseAction('nodestatus', {}, this[P_EXECUTOR], NodeStatus, false);\n  }\n\n  /**\n   * Encodes a public key to a pascalcoin public key\n   *\n   * @param {BC} x\n   * @param {BC} y\n   * @param {Number} ecNid\n   *\n   * @returns {BaseAction}\n   */\n  encodePubKey({\n    x,\n    y,\n    ecNid\n  }) {\n    return new BaseAction('encodepubkey', {\n      x,\n      y,\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decodes an encoded public key.\n   *\n   * @param {BC} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  decodePubKey({\n    pubkey\n  }) {\n    return new BaseAction('decodepubkey', {\n      pubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Encrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String} payloadMethod\n   * @param {String|null} pwd\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  payloadEncrypt({\n    payload,\n    payloadMethod,\n    pwd = null,\n    pubkey = null\n  }) {\n    return new BaseAction('payloadencrypt', {\n      payload,\n      payload_method: payloadMethod,\n      pwd,\n      pubkey\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String[]} pwds\n   *\n   * @returns {BaseAction}\n   */\n  payloadDecrypt({\n    payload,\n    pwds\n  }) {\n    return new BaseAction('payloaddecrypt', {\n      payload,\n      pwds\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the connections of a node.\n   *\n   * @returns {BaseAction}\n   */\n  getConnections() {\n    return new BaseAction('getconnections', {}, this[P_EXECUTOR], Connection, true);\n  }\n\n  /**\n   * Generates a new key and adds it to the nodes wallet.\n   *\n   * @param {Number} ecNid\n   * @param {String} name\n   *\n   * @returns {BaseAction}\n   */\n  addNewKey({\n    ecNid,\n    name\n  }) {\n    return new BaseAction('addnewkey', {\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Locks the wallet.\n   *\n   * @returns {BaseAction}\n   */\n  lock() {\n    return new BaseAction('lock', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Unlocks the wallet.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  unlock({\n    pwd\n  }) {\n    return new BaseAction('unlock', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Sets the wallet password.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  setWalletPassword({\n    pwd\n  }) {\n    return new BaseAction('setwalletpassword', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Stops the node.\n   *\n   * @returns {BaseAction}\n   */\n  stopNode() {\n    return new BaseAction('stopnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Starts the node.\n   *\n   * @returns {BaseAction}\n   */\n  startNode() {\n    return new BaseAction('startnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Cleans the BlackList.\n   *\n   * @returns {BaseAction}\n   */\n  cleanBlackList() {\n    return new BaseAction('cleanblacklist', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets IP stats\n   *\n   * @returns {BaseAction}\n   */\n  nodeIPStats() {\n    return new BaseAction('node_ip_stats', {}, this[P_EXECUTOR], Object, true);\n  }\n\n  /**\n   * Adds an operation to a multioperation\n   *\n   * @param {BC} rawoperations\n   * @param {Boolean} autoNOperation\n   * @param {Object[]|Sender[]} senders\n   * @param {Object[]|Receiver[]} receivers\n   * @param {Object[]|Changer[]} changesinfo\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationAddOperation({\n    rawoperations,\n    autoNOperation,\n    senders,\n    receivers,\n    changesinfo\n  }) {\n    return new BaseAction('multioperationaddoperation', {\n      rawoperations,\n      auto_n_operation: autoNOperation,\n      senders: senders.map((sen) => new Sender(sen)),\n      receivers: receivers.map((rec) => new Receiver(rec)),\n      changesinfo: changesinfo.map((chng) => new Changer(chng))\n    }, this[P_EXECUTOR], BC, true);\n  }\n\n  /**\n   * Signs the given rawoperations\n   *\n   * @param {BC} rawoperations\n   * @param {Object} accountsAndKeys\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOffline({\n    rawoperations,\n    accountsAndKeys\n  }) {\n    return new BaseAction('multioperationsignoffline', {\n      rawoperations,\n      accounts_and_keys: accountsAndKeys\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Signs the given rawoperations online\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOnline({\n    rawoperations\n  }) {\n    return new BaseAction('multioperationsignonline', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n}\n\nmodule.exports = Client;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nconst Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n\n  const BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n    BASE_MAP[xc] = i\n  }\n\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n\n  function encode (source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n    if (source.length === 0) return ''\n\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (256 * b58[it]) >>> 0\n        b58[it] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      pbegin++\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length\n    while (it !== size && b58[it] === 0) {\n      it++\n    }\n\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n\n    return str\n  }\n\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String')\n    if (source.length === 0) return Buffer.alloc(0)\n\n    let psz = 0\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return\n\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n\n      // Invalid character\n      if (carry === 255) return\n\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (BASE * b256[it]) >>> 0\n        b256[it] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      psz++\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return\n\n    // Skip leading zeroes in b256.\n    let it = size - length\n    while (it !== size && b256[it] === 0) {\n      it++\n    }\n\n    const vch = Buffer.allocUnsafe(zeroes + (size - it))\n    vch.fill(0x00, 0, zeroes)\n\n    let j = zeroes\n    while (it !== size) {\n      vch[j++] = b256[it++]\n    }\n\n    return vch\n  }\n\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA256 implementation\r\n//        Generates a 32 byte hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA256 class\r\n */\r\nvar SHA256 = /** @class */ (function () {\r\n    /**\r\n     * SHA256 ctor\r\n     */\r\n    function SHA256() {\r\n        this.hashSize = 32;\r\n        this.buffer = new Uint8Array(64);\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA256.prototype.transform = function () {\r\n        var h = this.H, h0 = h[0], h1 = h[1], h2 = h[2], h3 = h[3], h4 = h[4], h5 = h[5], h6 = h[6], h7 = h[7];\r\n        // convert byte buffer into w[0..15]\r\n        var i, w = new Uint32Array(16);\r\n        for (i = 0; i < 16; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        for (i = 0; i < 64; i++) {\r\n            var tmp = void 0;\r\n            if (i < 16) {\r\n                tmp = w[i];\r\n            }\r\n            else {\r\n                var a = w[(i + 1) & 15];\r\n                var b = w[(i + 14) & 15];\r\n                tmp = w[i & 15] = ((a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[(i + 9) & 15]) | 0;\r\n            }\r\n            tmp = (tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this.K[i]) | 0;\r\n            h7 = h6;\r\n            h6 = h5;\r\n            h5 = h4;\r\n            h4 = h3 + tmp;\r\n            h3 = h2;\r\n            h2 = h1;\r\n            h1 = h0;\r\n            h0 = (tmp + ((h1 & h2) ^ (h3 & (h1 ^ h2))) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10)) | 0;\r\n        }\r\n        h[0] = (h[0] + h0) | 0;\r\n        h[1] = (h[1] + h1) | 0;\r\n        h[2] = (h[2] + h2) | 0;\r\n        h[3] = (h[3] + h3) | 0;\r\n        h[4] = (h[4] + h4) | 0;\r\n        h[5] = (h[5] + h5) | 0;\r\n        h[6] = (h[6] + h6) | 0;\r\n        h[7] = (h[7] + h7) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Array} msg Additional message data as byte array\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 512 bit (64 byte chunks)\r\n        for (var i = 0, len = msg.length; i < len; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 64) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 56\r\n        while (idx !== 56) {\r\n            if (idx === 64) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[56] = (c[1] >>> 24) & 0xff;\r\n        b[57] = (c[1] >>> 16) & 0xff;\r\n        b[58] = (c[1] >>> 8) & 0xff;\r\n        b[59] = (c[1] >>> 0) & 0xff;\r\n        b[60] = (c[0] >>> 24) & 0xff;\r\n        b[61] = (c[0] >>> 16) & 0xff;\r\n        b[62] = (c[0] >>> 8) & 0xff;\r\n        b[63] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var hash = new Uint8Array(32), i;\r\n        for (i = 0; i < 8; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i] >>> 0) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA256.prototype.selftest = function () {\r\n        var cumulative = new SHA256(), sha = new SHA256();\r\n        var toBeHashed = '', hash, i, n;\r\n        for (i = 0; i < 10; i++) {\r\n            for (n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === 'f305c76d5d457ddf04f1927166f5e13429407049a5c5f29021916321fcdcd8b4';\r\n    };\r\n    return SHA256;\r\n}());\r\nexports.SHA256 = SHA256;\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA512 implementation\r\n//        Generates a 64 byte (512 bit) hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA512 class\r\n */\r\nvar SHA512 = /** @class */ (function () {\r\n    /**\r\n     * SHA512 ctor\r\n     */\r\n    function SHA512() {\r\n        this.hashSize = 64;\r\n        this.buffer = new Uint8Array(128); // 128 byte array\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {Object} this\r\n     */\r\n    SHA512.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\r\n            0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA512.prototype.transform = function () {\r\n        var h = this.H, h0h = h[0], h0l = h[1], h1h = h[2], h1l = h[3], h2h = h[4], h2l = h[5], h3h = h[6], h3l = h[7], h4h = h[8], h4l = h[9], h5h = h[10], h5l = h[11], h6h = h[12], h6l = h[13], h7h = h[14], h7l = h[15];\r\n        var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\r\n        // convert byte buffer into w[0..31]\r\n        var i, w = new Uint32Array(160);\r\n        for (i = 0; i < 32; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        // fill w[32..159]\r\n        var gamma0xl, gamma0xh, gamma0l, gamma0h, gamma1xl, gamma1xh, gamma1l, gamma1h, wrl, wrh, wr7l, wr7h, wr16l, wr16h;\r\n        for (i = 16; i < 80; i++) {\r\n            // Gamma0\r\n            gamma0xh = w[(i - 15) * 2];\r\n            gamma0xl = w[(i - 15) * 2 + 1];\r\n            gamma0h = ((gamma0xl << 31) | (gamma0xh >>> 1)) ^\r\n                ((gamma0xl << 24) | (gamma0xh >>> 8)) ^\r\n                ((gamma0xh >>> 7));\r\n            gamma0l = ((gamma0xh << 31) | (gamma0xl >>> 1)) ^\r\n                ((gamma0xh << 24) | (gamma0xl >>> 8)) ^\r\n                ((gamma0xh << 25) | (gamma0xl >>> 7));\r\n            // Gamma1\r\n            gamma1xh = w[(i - 2) * 2];\r\n            gamma1xl = w[(i - 2) * 2 + 1];\r\n            gamma1h = ((gamma1xl << 13) | (gamma1xh >>> 19)) ^\r\n                ((gamma1xh << 3) | (gamma1xl >>> 29)) ^\r\n                ((gamma1xh >>> 6));\r\n            gamma1l = ((gamma1xh << 13) | (gamma1xl >>> 19)) ^\r\n                ((gamma1xl << 3) | (gamma1xh >>> 29)) ^\r\n                ((gamma1xh << 26) | (gamma1xl >>> 6));\r\n            // shortcuts\r\n            wr7h = w[(i - 7) * 2],\r\n                wr7l = w[(i - 7) * 2 + 1],\r\n                wr16h = w[(i - 16) * 2],\r\n                wr16l = w[(i - 16) * 2 + 1];\r\n            // W(round) = gamma0 + W(round - 7) + gamma1 + W(round - 16)\r\n            wrl = gamma0l + wr7l;\r\n            wrh = gamma0h + wr7h + ((wrl >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n            wrl += gamma1l;\r\n            wrh += gamma1h + ((wrl >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n            wrl += wr16l;\r\n            wrh += wr16h + ((wrl >>> 0) < (wr16l >>> 0) ? 1 : 0);\r\n            // store\r\n            w[i * 2] = wrh;\r\n            w[i * 2 + 1] = wrl;\r\n        }\r\n        // compress\r\n        var chl, chh, majl, majh, sig0l, sig0h, sig1l, sig1h, krl, krh, t1l, t1h, t2l, t2h;\r\n        for (i = 0; i < 80; i++) {\r\n            // Ch\r\n            chh = (eh & fh) ^ (~eh & gh);\r\n            chl = (el & fl) ^ (~el & gl);\r\n            // Maj\r\n            majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n            majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n            // Sigma0\r\n            sig0h = ((al << 4) | (ah >>> 28)) ^ ((ah << 30) | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\r\n            sig0l = ((ah << 4) | (al >>> 28)) ^ ((al << 30) | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\r\n            // Sigma1\r\n            sig1h = ((el << 18) | (eh >>> 14)) ^ ((el << 14) | (eh >>> 18)) ^ ((eh << 23) | (el >>> 9));\r\n            sig1l = ((eh << 18) | (el >>> 14)) ^ ((eh << 14) | (el >>> 18)) ^ ((el << 23) | (eh >>> 9));\r\n            // K(round)\r\n            krh = this.K[i * 2];\r\n            krl = this.K[i * 2 + 1];\r\n            // t1 = h + sigma1 + ch + K(round) + W(round)\r\n            t1l = hl + sig1l;\r\n            t1h = hh + sig1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n            t1l += chl;\r\n            t1h += chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n            t1l += krl;\r\n            t1h += krh + ((t1l >>> 0) < (krl >>> 0) ? 1 : 0);\r\n            t1l = t1l + w[i * 2 + 1];\r\n            t1h += w[i * 2] + ((t1l >>> 0) < (w[i * 2 + 1] >>> 0) ? 1 : 0);\r\n            // t2 = sigma0 + maj\r\n            t2l = sig0l + majl;\r\n            t2h = sig0h + majh + ((t2l >>> 0) < (sig0l >>> 0) ? 1 : 0);\r\n            // update working variables\r\n            hh = gh;\r\n            hl = gl;\r\n            gh = fh;\r\n            gl = fl;\r\n            fh = eh;\r\n            fl = el;\r\n            el = (dl + t1l) | 0;\r\n            eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n            dh = ch;\r\n            dl = cl;\r\n            ch = bh;\r\n            cl = bl;\r\n            bh = ah;\r\n            bl = al;\r\n            al = (t1l + t2l) | 0;\r\n            ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n        }\r\n        // intermediate hash\r\n        h0l = h[1] = (h0l + al) | 0;\r\n        h[0] = (h0h + ah + ((h0l >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\r\n        h1l = h[3] = (h1l + bl) | 0;\r\n        h[2] = (h1h + bh + ((h1l >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\r\n        h2l = h[5] = (h2l + cl) | 0;\r\n        h[4] = (h2h + ch + ((h2l >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\r\n        h3l = h[7] = (h3l + dl) | 0;\r\n        h[6] = (h3h + dh + ((h3l >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n        h4l = h[9] = (h4l + el) | 0;\r\n        h[8] = (h4h + eh + ((h4l >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\r\n        h5l = h[11] = (h5l + fl) | 0;\r\n        h[10] = (h5h + fh + ((h5l >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\r\n        h6l = h[13] = (h6l + gl) | 0;\r\n        h[12] = (h6h + gh + ((h6l >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\r\n        h7l = h[15] = (h7l + hl) | 0;\r\n        h[14] = (h7h + hh + ((h7l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {SHA512} this\r\n     */\r\n    SHA512.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 1024 bit (128 byte chunks)\r\n        for (var i = 0; i < msg.length; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 128) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 112\r\n        while (idx !== 112) {\r\n            if (idx === 128) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[112] = b[113] = b[114] = b[115] = b[116] = b[117] = b[118] = b[119] = 0;\r\n        b[120] = (c[1] >>> 24) & 0xff;\r\n        b[121] = (c[1] >>> 16) & 0xff;\r\n        b[122] = (c[1] >>> 8) & 0xff;\r\n        b[123] = (c[1] >>> 0) & 0xff;\r\n        b[124] = (c[0] >>> 24) & 0xff;\r\n        b[125] = (c[0] >>> 16) & 0xff;\r\n        b[126] = (c[0] >>> 8) & 0xff;\r\n        b[127] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var i, hash = new Uint8Array(64);\r\n        for (i = 0; i < 16; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i]) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Additional message data\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA512.prototype.selftest = function () {\r\n        var cumulative = new SHA512(), sha = new SHA512();\r\n        var toBeHashed = '', hash;\r\n        for (var i = 0; i < 10; i++) {\r\n            for (var n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === '602923787640dd6d77a99b101c379577a4054df2d61f39c74172cafa2d9f5b26a11b40b7ba4cdc87e84a4ab91b85391cb3e1c0200f3e3d5e317486aae7bebbf3';\r\n    };\r\n    return SHA512;\r\n}());\r\nexports.SHA512 = SHA512;\r\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AccountName: require('./AccountName'),\n  AccountNumber: require('./AccountNumber'),\n  Currency: require('./Currency'),\n  OperationHash: require('./OperationHash'),\n  Keys: require('./Keys')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Curve: require('./Curve'),\n  PrivateKey: require('./PrivateKey'),\n  PublicKey: require('./PublicKey'),\n  KeyPair: require('./KeyPair')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nconst P_PRIVATE_KEY = Symbol('private_key');\nconst P_PUBLIC_KEY = Symbol('public_key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a private and public keypair.\n */\nclass KeyPair {\n  /**\n     * Creates a new private-public keypair instance.\n     *\n     * @param {PrivateKey} privateKey\n     * @param {PublicKey} publicKey\n     */\n  constructor(privateKey, publicKey) {\n    this[P_CURVE] = privateKey.curve;\n    this[P_PRIVATE_KEY] = privateKey;\n    this[P_PUBLIC_KEY] = publicKey;\n\n    if (privateKey.curve.id !== publicKey.curve.id) {\n      throw new Error('Mixed up curves between private an public key');\n    }\n  }\n\n  /**\n     * Gets the private key.\n     *\n     * @returns {PrivateKey}\n     */\n  get privateKey() {\n    return this[P_PRIVATE_KEY];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBLIC_KEY];\n  }\n\n  /**\n     * Gets the curve used for the keypair.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = KeyPair;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AbstractType: require('./AbstractType'),\n  CompositeType: require('./CompositeType'),\n  Repeating: require('./Repeating'),\n  Decissive: require('./Decissive'),\n  Core: {\n    AbstractInt: require('./Core/AbstractInt'),\n    Int8: require('./Core/Int8'),\n    Int16: require('./Core/Int16'),\n    Int32: require('./Core/Int32'),\n    Int64: require('./Core/Int64'),\n    StringWithLength: require('./Core/StringWithLength'),\n    StringWithoutLength: require('./Core/StringWithoutLength'),\n    BytesWithLength: require('./Core/BytesWithLength'),\n    BytesWithoutLength: require('./Core/BytesWithoutLength'),\n    BytesFixedLength: require('./Core/BytesFixedLength')\n  },\n  Pascal: {\n    Keys: {\n      Curve: require('./Pascal/Keys/Curve'),\n      PublicKey: require('./Pascal/Keys/PublicKey'),\n      PrivateKey: require('./Pascal/Keys/PrivateKey')\n    },\n    AccountNumber: require('./Pascal/AccountNumber'),\n    AccountName: require('./Pascal/AccountName'),\n    Currency: require('./Pascal/Currency'),\n    NOperation: require('./Pascal/NOperation'),\n    OpType: require('./Pascal/OpType'),\n    OperationHash: require('./Pascal/OperationHash')\n  }\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_REPEAT_LIMIT = Symbol('repeat_limit');\nconst P_TYPE = Symbol('type');\n\n/**\n * A Type that itself is made up of multiple other types.\n */\nclass Repeating extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id, type, repeatLimit = -1) {\n    super(id || 'repeating');\n    super.description('A type that itself has one repeating type that will ' +\n      'be written / read until the limit is reached or data is empty.');\n    this[P_TYPE] = type;\n    this[P_REPEAT_LIMIT] = repeatLimit;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Repeating';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let result = [];\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    let counter = 0;\n    let limitArrived = false;\n\n    do {\n      const decoded = this[P_TYPE].decodeFromBytes(bc.slice(offset));\n\n      result.push(decoded);\n      offset += this[P_TYPE].encodedSize;\n      counter++;\n      limitArrived = (this[P_REPEAT_LIMIT] > -1 && this[P_REPEAT_LIMIT] === counter);\n\n    } while (offset < bc.length && !limitArrived);\n\n    return result;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(arr) {\n    let bc = BC.empty();\n\n    arr.forEach((item, idx) => {\n      if (idx >= this[P_REPEAT_LIMIT] && this[P_REPEAT_LIMIT] > -1) {\n        return;\n      }\n      bc = bc.append(this[P_TYPE].encodeToBytes(item));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    if (arguments.length > 0) {\n      description.decoded = this.decodeFromBytes(this.encodeToBytes(value));\n      description.encoded = this.encodeToBytes(value).toHex();\n      description.encodedSize = description.encoded.length;\n    }\n\n    description.subTypes = [];\n\n    this.subTypes.forEach((subType) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = value[subType.id];\n      }\n\n      description.subTypes.push(subType.describe(subTypeValue));\n    });\n\n    return description;\n  }\n}\n\nmodule.exports = Repeating;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CompositeType = require('./CompositeType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_SUBTYPE_RESOLVER = Symbol('subtype_resolver');\nconst P_MARKER_FIELD = Symbol('marker_field');\n\n/**\n * A Type that itself is made up of multiple other types. The types are selected dynamically\n * depending on the given resolver.\n */\nclass Decissive extends CompositeType {\n  /**\n   * Constructor\n   */\n  constructor(id, markerField, subTypeResolver) {\n    super(id || 'decissive');\n    super.description('A type that itself has many sub types but only some are triggere based on a marker.');\n    this[P_SUBTYPE_RESOLVER] = subTypeResolver;\n    this[P_MARKER_FIELD] = markerField;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Decissive';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n\n    this[P_SIZE_ENCODED] = subType.encodedSize;\n    return subType.decodeFromBytes(bc, options, all);\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray, all) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n    let bc = subType.encodeToBytes(objOrArray);\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    if (arguments.length > 0) {\n      description.decoded = this.decodeFromBytes(this.encodeToBytes(value));\n      description.encoded = this.encodeToBytes(value).toHex();\n      description.encodedSize = description.encoded.length;\n    }\n\n    description.subTypes = [];\n\n    this.subTypes.forEach((subType) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = value[subType.id];\n      }\n\n      description.subTypes.push(subType.describe(subTypeValue));\n    });\n\n    return description;\n  }\n}\n\nmodule.exports = Decissive;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE = Symbol('size');\n\n/**\n * A field type to encode and decode bytes with a fixed length.\n */\nclass BytesFixedLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Number} length\n   */\n  constructor(id, length) {\n    super(id || 'bytes_fixed_length_' + length);\n    this.description('Bytes with a fixed length of ' + length);\n    this[P_SIZE] = length;\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'BytesFixedLength';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE];\n  }\n\n  /**\n   * Returns the values of the given bc in the configured length.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).slice(0, this[P_SIZE]);\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    return value.slice(0, this[P_SIZE]);\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = {\n      id: this.id,\n      type: this.typeInfo\n    };\n\n    description.encodedSize = this[P_SIZE];\n    if (arguments.length > 0) {\n      description.value = value;\n      description.encoded = this.encodeToBytes(value);\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = BytesFixedLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst BytesWithoutLength = require('../../Core/BytesWithoutLength');\nconst CompositeType = require('../../CompositeType');\nconst BC = require('../../../BC');\nconst Sha = require('../../../Sha');\nconst Base58 = require('../../../Base58');\nconst PublicKeyType = require('./../../../../src/Types/Keys/PublicKey');\n\n/**\n * A Public Key value.\n */\nclass PublicKey extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} omitXYLenghts\n   */\n  constructor(id = null, omitXYLenghts = false) {\n    super(id || 'public_key');\n    this.addSubType(new Curve('curve'));\n\n    // oh come on..\n    if (omitXYLenghts) {\n      this.addSubType(new BytesWithoutLength('x'));\n      this.addSubType(new BytesWithoutLength('y'));\n    } else {\n      this.addSubType(new BytesWithLength('x', 2));\n      this.addSubType(new BytesWithLength('y', 2));\n    }\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'PublicKey';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PublicKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PublicKeyType(decoded.x, decoded.y, decoded.curve);\n  }\n\n  /**\n   * Gets the base58 representation of a public key.\n   *\n   * @returns {String}\n   */\n  encodeToBase58(publicKey) {\n    const prefix = BC.fromHex('01');\n    const encoded = this.encodeToBytes(publicKey);\n    const aux = Sha.sha256(encoded);\n    const suffix = aux.slice(0, 4);\n\n    const raw = BC.concat(prefix, encoded, suffix);\n\n    return Base58.encode(raw);\n  }\n\n  /**\n   * Gets a public key instance from the given base58 string.\n   *\n   * @param {String} base58\n   * @returns {PublicKey}\n   */\n  decodeFromBase58(base58) {\n    const decoded = Base58.decode(base58);\n\n    return this.decodeFromBytes(decoded.slice(1, -4));\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst CompositeType = require('../../CompositeType');\nconst PrivateKeyType = require('./../../../../src/Types/Keys/PrivateKey');\n\n/**\n * A coder for a private key.\n */\nclass PrivateKey extends CompositeType {\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'private_key');\n    this.addSubType(new Curve('curve'));\n    this.addSubType(new BytesWithLength('key', 2));\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'PrivateKey';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PrivateKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PrivateKeyType(decoded.key, decoded.curve);\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {PrivateKeyType} value\n   * @returns {PrivateKeyType}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNameType = require('./../../Types/AccountName');\nconst StringWithLength = require('../Core/StringWithLength');\n\n/**\n * A pascal related type that can de/encode an account name.\n */\nclass AccountName extends StringWithLength {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'account_name');\n    this.description('An account name');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'AccountName';\n    info.hierarchy.push(info.name);\n\n    return info;\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNameType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNameType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNameType} value\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.toString());\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    return super.describe(value);\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Int64 = require('./../Core/Int64');\nconst CurrencyType = require('./../../Types/Currency');\nconst Endian = require('./../../Endian');\n\n/**\n * A special Int64 type that can handle pascalcoin currencies.\n */\nclass Currency extends Int64 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'currency', false, Endian.LITTLE_ENDIAN);\n    this.description('A type for currency values.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'Currency';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurrencyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return CurrencyType.fromMolina(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurrencyType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.bn);\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    return super.describe(value);\n  }\n\n}\n\nmodule.exports = Currency;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./../Core/Int8');\nconst Int16 = require('./../Core/Int16');\nconst Int32 = require('./../Core/Int32');\n\nconst P_INT_TYPE = Symbol('int_type');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass OpType extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize) {\n    super(id || `optype_int${byteSize * 8}`);\n    switch (byteSize) {\n      case 1:\n        this[P_INT_TYPE] = new Int8('OpType[Int8]', true);\n        break;\n      case 2:\n        this[P_INT_TYPE] = new Int16('OpType[Int16]', true, Endian.LITTLE_ENDIAN);\n        break;\n      case 4:\n        this[P_INT_TYPE] = new Int32('OpType[Int32]', true, Endian.LITTLE_ENDIAN);\n        break;\n      default:\n        throw Error('Invalid byte size.');\n    }\n    this.description(`Operation type in ${byteSize * 8} bits`);\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = this[P_INT_TYPE].typeInfo;\n\n    info.name = 'OpType';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_INT_TYPE].encodedSize;\n  }\n\n  /**\n   * Decodes and returns the optype.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Number}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return this[P_INT_TYPE].decodeFromBytes(bc);\n  }\n\n  /**\n   * Encodes the given optype to bytes.\n   *\n   * @param {Number} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    return this[P_INT_TYPE].encodeToBytes(value);\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    let description = super.describe(value);\n\n    description.encodedSize = this.encodedSize;\n\n    if (arguments.length > 0) {\n      description.decoded = value;\n      description.encoded = this.encodeToBytes(value).toHex();\n    }\n\n    return description;\n  }\n}\n\nmodule.exports = OpType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst CompositeType = require('./../CompositeType');\nconst Int32 = require('./../Core/Int32');\nconst AccountNumber = require('./AccountNumber');\nconst BytesWithoutLength = require('./../Core/BytesWithoutLength');\nconst NOperation = require('./NOperation');\nconst OperationHashType = require('./../../Types/OperationHash');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass OperationHash extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'ophash');\n    this.description('A pascalCoin operation hash');\n\n    this.addSubType(new Int32('block', true, Endian.LITTLE_ENDIAN));\n    this.addSubType(new AccountNumber('account'));\n    this.addSubType(new NOperation('nOperation', 4));\n    this.addSubType(new BytesWithoutLength('md160'));\n  }\n\n  /**\n   * @inheritDoc AbstractType#typeInfo\n   */\n  /* istanbul ignore next */\n  get typeInfo() {\n    let info = super.typeInfo;\n\n    info.name = 'OperationHash';\n    info.hierarchy.push(info.name);\n    return info;\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {OperationHash}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new OperationHashType(decoded.block, decoded.account, decoded.nOperation, decoded.md160);\n  }\n\n  /**\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {OperationHash} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n\n  /**\n   * @inheritDoc AbstractType#describe\n   */\n  /* istanbul ignore next */\n  describe(value) {\n    return super.describe(value);\n  }\n}\n\nmodule.exports = OperationHash;\n","'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","module.exports = require('./assignIn');\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","module.exports = require(\"crypto\");","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\tbody = body[BUFFER];\n\t} else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\t// body is null\n\tif (this.body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(this.body)) {\n\t\treturn Body.Promise.resolve(this.body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(this.body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\t_this4.body.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\t_this4.body.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\t_this4.body.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\nfunction extractContentType(body) {\n\t// istanbul ignore if: Currently, because of a guard in Request, body\n\t// can never be null. Included here for completeness.\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: included for completion\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url;\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tif (!headers.has('Connection') && !request.agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent: request.agent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_DIGEST = Symbol('digest');\nconst P_PUBKEY = Symbol('public_key');\nconst P_SIGNATURE = Symbol('signature');\n\n/**\n * Represents a sender in an operation.\n */\nclass SignedMessage extends Abstract {\n  /**\n     * Creates a new instance of the Sender class.\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_DIGEST] = BC.fromHex(data.digest);\n    if (data.enc_pubkey !== undefined) {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    } else {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBase58(data.b58_pubkey);\n    }\n    this[P_SIGNATURE] = BC.fromHex(data.signature);\n  }\n\n  /**\n     * Gets the digest.\n     *\n     * @returns {BC}\n     */\n  get digest() {\n    return this[P_DIGEST];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBKEY];\n  }\n\n  /**\n     * Gets the signature.\n     *\n     * @returns {BC}\n     */\n  get amount() {\n    return this[P_SIGNATURE];\n  }\n}\n\nmodule.exports = SignedMessage;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_RECV = Symbol('recv');\nconst P_TIMEDIFF = Symbol('timediff');\nconst P_NETVER_A = Symbol('nerver_a');\nconst P_SECS = Symbol('secs');\nconst P_SERVER = Symbol('server');\nconst P_IP = Symbol('ip');\nconst P_NETVER = Symbol('netver');\nconst P_SENT = Symbol('sent');\nconst P_APPVER = Symbol('appver');\nconst P_PORT = Symbol('port');\n\n/**\n * Holds information about a node connection.\n */\nclass Connection extends Abstract {\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n    this[P_RECV] = parseInt(data.recv, 10);\n    this[P_TIMEDIFF] = parseInt(data.timediff, 10);\n    this[P_NETVER_A] = parseInt(data.netver_a, 10);\n    this[P_SECS] = parseInt(data.secs, 10);\n    this[P_SERVER] = !!data.server;\n    this[P_IP] = data.ip;\n    this[P_NETVER] = parseInt(data.netver, 10);\n    this[P_SENT] = parseInt(data.sent, 10);\n    this[P_APPVER] = data.appver;\n    this[P_PORT] = parseInt(data.port, 10);\n  }\n\n  /**\n   * Gets the number of received bytes from the connection.\n   *\n   * @returns {Number}\n   */\n  get recv() {\n    return this[P_RECV];\n  }\n\n  /**\n   * Gets the time difference of the current and the remote node in seconds.\n   *\n   * @returns {Number}\n   */\n  get timeDiff() {\n    return this[P_TIMEDIFF];\n  }\n\n  /**\n   * Net protocol available of other node\n   *\n   * @returns {Number}\n   */\n  get netVerA() {\n    return this[P_NETVER_A];\n  }\n\n  /**\n   * The duration of the connection.\n   *\n   * @returns {Number}\n   */\n  get secs() {\n    return this[P_SECS];\n  }\n\n  /**\n   * A flag indicating whether the other node is a server node (daemon).\n   * @returns {*}\n   */\n  get server() {\n    return this[P_SERVER];\n  }\n\n  /**\n   * The IP of the remote node.\n   *\n   * @returns {*}\n   */\n  get ip() {\n    return this[P_IP];\n  }\n\n  /**\n   * The netprotocol version of the other node.\n   *\n   * @returns {*}\n   */\n  get netVer() {\n    return this[P_NETVER];\n  }\n\n  /**\n   * The bytes sent to the other node.\n   *\n   * @returns {*}\n   */\n  get sent() {\n    return this[P_SENT];\n  }\n\n  /**\n   * The node version.\n   *\n   * @returns {*}\n   */\n  get appVer() {\n    return this[P_APPVER];\n  }\n\n  /**\n   * The port of the other node.\n   *\n   * @returns {*}\n   */\n  get port() {\n    return this[P_PORT];\n  }\n}\n\nmodule.exports = Connection;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  BaseAction: require('./BaseAction'),\n  OperationAction: require('./OperationAction'),\n  PagedAction: require('./PagedAction'),\n  SignOperationAction: require('./SignOperationAction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  ConnectionError: require('./ConnectionError'),\n  ResultError: require('./ResultError')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Account: require('./Account'),\n  Block: require('./Block'),\n  NodeStatus: require('./NodeStatus'),\n  NetStats: require('./NetStats'),\n  NetProtocol: require('./NetProtocol'),\n  NodeServer: require('./NodeServer'),\n  Operation: require('./Operation'),\n  Changer: require('./Changer'),\n  Receiver: require('./Receiver'),\n  Sender: require('./Sender'),\n  WalletPublicKey: require('./WalletPublicKey')\n};\n"],"sourceRoot":""}