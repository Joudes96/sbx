{"version":3,"sources":["webpack://@pascalcoin-sbx/json-rpc/webpack/universalModuleDefinition","webpack://@pascalcoin-sbx/json-rpc/webpack/bootstrap","webpack://@pascalcoin-sbx/json-rpc/external \"@pascalcoin-sbx/common\"","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Abstract.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isFunction.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseGetTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObjectLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArray.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/BaseAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Block.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/module.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/WalletPublicKey.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Account.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_root.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/OperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Sender.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Receiver.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Changer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Executor.js","webpack://@pascalcoin-sbx/json-rpc/./src/Caller.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseAssignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_defineProperty.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_Symbol.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_freeGlobal.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/eq.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/identity.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArrayLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isLength.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIndex.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isUndefined.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/v4.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ConnectionError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ResultError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/PagedAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/SignOperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeStatus.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetProtocol.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetStats.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeServer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Operation.js","webpack://@pascalcoin-sbx/json-rpc/./index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Client.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bn.js/lib/bn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/client/browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/extend.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/assignIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_copyObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_assignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsNative.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/global.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getRawTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_objectToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isMasked.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_coreJsData.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_toSource.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_createAssigner.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_overRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_apply.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_setToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseSetToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/constant.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_shortOut.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIterateeCall.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/keysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_arrayLikeKeys.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseTimes.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isBuffer.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/stubFalse.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseUnary.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nodeUtil.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isPrototype.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nativeKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/negate.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/rng-browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/bytesToUuid.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/generateRequest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/node-fetch/browser.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/SignedMessage.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Connection.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","P_INITIALIZATION_DATA","Abstract","constructor","initializationData","TypeError","__initializationData","type","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","undefined","isArray","Array","P_PARAMS","P_METHOD","P_EXECUTOR","P_DESTINATION_TYPE","P_RETURNS_ARRAY","method","params","executor","DestinationType","returnsArray","destinationType","changeParam","[object Object]","execute","isValid","BN","Currency","Types","AccountNumber","BC","pkCoder","PublicKeyCoder","Coding","Pascal","Keys","PublicKey","P_BLOCK","P_ENC_PUBKEY","P_REWARD","P_FEE","P_VER","P_VER_A","P_TIMESTAMP","P_TARGET","P_NONCE","P_PAYLOAD","P_SBH","P_OPH","P_POW","P_HASHRATEKHS","P_MATURATION","P_OPERATIONS","data","super","parseInt","block","decodeFromBytes","fromHex","enc_pubkey","reward","fee","ver","ver_a","timestamp","target","toString","nonce","payload","sbh","oph","pow","hashratekhs","maturation","operations","publicKey","verA","createdAccounts","webpackPolyfill","deprecate","paths","children","Curve","P_NAME","P_CAN_USE","P_B58_PUBKEY","P_EC_NID","P_X","P_Y","can_use","b58_pubkey","ec_nid","x","y","canUse","base58PublicKey","ecNid","AccountName","P_ACCOUNT","P_BALANCE","P_N_OPERATION","P_UPDATED_B","P_STATE","P_TYPE","P_LOCKED_UNTIL_BLOCK","P_PRICE","P_SELLER_ACCOUNT","P_PRIVATE_SALE","P_NEW_ENC_PUBKEY","Account","STATE_LISTED","STATE_NORMAL","account","balance","n_operation","updated_b","state","Error","locked_until_block","price","seller_account","private_sale","new_enc_pubkey","nOperation","updatedB","lockedUntilBlock","sellerAccount","privateSale","newPublicKey","isForSale","freeGlobal","freeSelf","Function","BaseAction","PascalCoinInfo","payload_method","withPayload","payloadMethod","password","pwd","withFee","withMinFee","lastKnownBlock","MIN_FEE","P_AMOUNT","amount","P_NEW_NAME","P_NEW_TYPE","P_ACCOUNT_PRICE","new_name","new_type","account_price","newName","newType","accountPrice","P_CALLER","OperationHash","OperationHashCoder","KeyPair","Block","WalletPublicKey","publicKeyCoder","opHashCoder","transformRpcResult","from","caller","action","transformCallback","transform","Promise","resolve","reject","newParams","keys","forEach","field","item","indexOf","newField","replace","toHex","encodeToBytes","map","senderItem","toStringOpt","isNaN","receiverItem","changerItem","new_b58_pubkey","encodeToBase58","length","isVague","fromString","transformRpcParams","then","response","catch","error","v","jaysonBrowserClient","fetch","ConnectionError","ResultError","P_CLIENT","host","request","callback","body","headers","Content-Type","res","text","err","result","code","message","configurable","writable","getNative","func","e","global","other","isFunction","isLength","MAX_SAFE_INTEGER","reIsUint","test","rng","bytesToUuid","options","buf","offset","rnds","random","ii","P_ORIGINAL","P_MESSAGE","originalFetchError","original","P_CODE","start","max","all","executeAllReport","push","reporter","restEach","restSeconds","restCallback","reports","setTimeout","OperationAction","last_n_operation","rawoperations","withLastNOperation","lastNOperation","withRawOperations","NetProtocol","NetStats","NodeServer","P_READY","P_READY_S","P_STATUS_S","P_PORT","P_LOCKED","P_BLOCKS","P_NODESERVERS","P_NETSTATS","P_VERSION","P_NETPROTOCOL","P_OPENSSL","ready","ready_s","status_s","port","locked","blocks","version","openssl","netprotocol","netstats","nodeservers","readyS","statusS","P_BRECEIVED","P_SERVERS_T","P_TSERVERS","P_TOTAL","P_BSEND","P_SERVERS","P_CLIENTS","P_ACTIVE","P_TCLIENTS","breceived","servers_t","tservers","total","bsend","servers","clients","active","tclients","serversT","P_LASTCON","P_ATTEMPTS","P_IP","lastcon","attempts","ip","Sender","Receiver","Changer","P_VALID","P_ERRORS","P_TIME","P_OPBLOCK","P_OPTYPE","P_OPTXT","P_OPHASH","P_OLD_OPHASH","P_SUBTYPE","P_SIGNER_ACCOUNT","P_CHANGERS","P_SENDERS","P_RECEIVERS","Operation","BLOCKCHAIN_REWARD","TRANSACTION","CHANGE_KEY","RECOVER_FUNDS","LIST_FOR_SALE","DELIST","BUY","CHANGE_KEY_ACCOUNT","CHANGE_ACCOUNT_INFO","MULTI_OPERATION","DATA","SUBTYPE_MINER","SUBTYPE_DEVELOPER","SUBTYPE_TX_SENDER","SUBTYPE_TX_RECEIVER","SUBTYPE_TX_BUY_BUYER","SUBTYPE_TX_BUY_TARGET","SUBTYPE_TX_BUY_SELLER","SUBTYPE_CHANGE_KEY","SUBTYPE_RECOVER","SUBTYPE_LIST_PUBLIC","SUBTYPE_LIST_PRIVATE","SUBTYPE_DELIST","SUBTYPE_BUY_BUYER","SUBTYPE_BUY_TARGET","SUBTYPE_BUY_SELLER","SUBTYPE_CHANGE_KEY_SIGNED","SUBTYPE_CHANGE_ACCOUNT_INFO","SUBTYPE_MULTI_GLOBAL","SUBTYPE_MULTI_ACCOUNT_INFO","SUBTYPE_DATA_GLOBAL","SUBTYPE_DATA_SENDER","SUBTYPE_DATA_SIGNER","SUBTYPE_DATA_RECEIVER","valid","errors","time","opblock","optype","optxt","ophash","old_ophash","subtype","signer_account","senders","receivers","changers","opBlock","opType","opTxt","opHash","oldOpHash","subType","signerAccount","isBlockchainReward","isTransaction","isChangeKey","isRecoverFunds","isListForSale","isDelist","isBuy","isChangeKeyAccount","isChangeAccountInfo","isMultiOperation","isData","isPending","isZeroFeeError","Client","Executor","Caller","Actions","Errors","RPCCaller","PagedAction","SignOperationAction","SignedMessage","NodeStatus","Connection","rpcHostAddress","addNode","nodes","join","Number","getAccount","findAccounts","onlyAccountsForSale","exact","minBalance","maxBalance","pubkey","only_accounts_for_sale","min_balance","max_balance","getWalletAccounts","getWalletAccountsCount","getWalletCoins","getWalletPubKeys","getWalletPubKey","inportPubKey","getBlock","getBlocks","last","end","getBlockCount","getBlockOperation","getBlockOperations","getAccountOperations","depth","startblock","getPendings","getPendingsCount","decodeOpHash","findOperation","findNOperation","findNOperations","nOperationMin","nOperationMax","n_operation_min","n_operation_max","sendTo","sender","signSendTo","senderPubkey","targetPubkey","sender_pubkey","target_pubkey","changeKey","newPubkey","accountSigner","new_pubkey","account_signer","changeKeys","accounts","acc","signChangeKey","oldPubkey","old_pubkey","listAccountForSale","accountTarget","account_target","signListAccountForSale","signerPubkey","signer_pubkey","DelistAccountForSale","signDelistAccountForSale","buyAccount","buyerAccount","accountToPurchase","buyer_account","account_to_purchase","signBuyAccount","changeAccountInfo","signChangeAccountInfo","signMessage","digest","verifySign","signature","operationsDelete","index","operationsInfo","executeOperations","nodeStatus","encodePubKey","decodePubKey","payloadEncrypt","payloadDecrypt","pwds","getConnections","addNewKey","lock","Boolean","unlock","setWalletPassword","stopNode","startNode","cleanBlackList","nodeIPStats","multiOperationAddOperation","autoNOperation","changesinfo","auto_n_operation","sen","rec","chng","multiOperationSignOffline","accountsAndKeys","accounts_and_keys","multiOperationSignOnline","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex","str","len","Math","min","charCodeAt","parseBase","mul","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","mod","word","imuln","_iaddn","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","extend","isUndefined","negate","uuid","generateRequest","ClientBrowser","callServer","defaults","reviver","replacer","generator","id","isBatch","isRaw","hasCallback","JSON","stringify","_parseResponse","responseText","parse","isError","filter","copyObject","createAssigner","keysIn","assignIn","source","assignValue","baseAssignValue","props","customizer","isNew","newValue","objValue","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","RegExp","window","nativeObjectToString","isOwn","unmasked","uid","coreJsData","maskSrcKey","exec","IE_PROTO","baseRest","isIterateeCall","assigner","sources","guard","identity","overRest","setToString","apply","nativeMax","args","arguments","array","otherArgs","thisArg","baseSetToString","shortOut","constant","string","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","count","lastCalled","stamp","remaining","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isBuffer","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","argsTag","stubFalse","freeExports","nodeType","freeModule","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","typedArrayTags","freeProcess","process","types","binding","isPrototype","nativeKeysIn","isProto","Ctor","FUNC_ERROR_TEXT","predicate","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","byteToHex","substr","bth","isString","jsonrpc","stringTag","getGlobal","default","Headers","Request","Response","P_DIGEST","P_PUBKEY","P_SIGNATURE","decodeFromBase58","P_RECV","P_TIMEDIFF","P_NETVER_A","P_SECS","P_SERVER","P_NETVER","P_SENT","P_APPVER","recv","timediff","netver_a","secs","server","netver","sent","appver","timeDiff","netVerA","netVer","appVer"],"mappings":"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","file":"@pascalcoin-sbx/json-rpc.light.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@pascalcoin-sbx/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@pascalcoin-sbx/json-rpc\", [\"@pascalcoin-sbx/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@pascalcoin-sbx/json-rpc\"] = factory(require(\"@pascalcoin-sbx/common\"));\n\telse\n\t\troot[\"@pascalcoin-sbx/json-rpc\"] = factory(root[\"@pascalcoin-sbx/common\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_INITIALIZATION_DATA = Symbol('__initialization_data');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  /**\n     * Constructor.\n     *\n   * @param {Object} initializationData\n     */\n  constructor(initializationData) {\n    if (new.target === Abstract) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n\n    this[P_INITIALIZATION_DATA] = initializationData;\n  }\n\n  /**\n     * Gets the initialization data. This should normally not be used at all but\n     * in case there are new fields which are not implemented in the library yet,\n     * the user will still have access to it.\n     *\n     * @returns {Object}\n     */\n  get __initializationData() {\n    return this[P_INITIALIZATION_DATA];\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PARAMS = Symbol('params');\nconst P_METHOD = Symbol('method');\nconst P_EXECUTOR = Symbol('executor');\nconst P_DESTINATION_TYPE = Symbol('destination_type');\nconst P_RETURNS_ARRAY = Symbol('returns_array');\n\n/**\n * A basic action that holds the rpc method and its parameters.\n */\nclass BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    this[P_METHOD] = method;\n    this[P_PARAMS] = params;\n    this[P_EXECUTOR] = executor;\n    this[P_DESTINATION_TYPE] = DestinationType;\n    this[P_RETURNS_ARRAY] = returnsArray;\n  }\n\n  /**\n   * Gets the destination type.\n   *\n   * @returns {*}\n   */\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  /**\n   * Gets a value indicating whether the action returns an array.\n   *\n   * @returns {Boolean}\n   */\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Gets the params for the rpc call.\n     *\n   * @returns {Object}\n     */\n  get params() {\n    return this[P_PARAMS];\n  }\n\n  /**\n   * Changes a single param of the params object.\n   *\n   * @param {String} name\n   * @param {*} value\n   * @returns {BaseAction}\n   */\n  changeParam(name, value) {\n    this[P_PARAMS][name] = value;\n    return this;\n  }\n\n  /**\n     * Gets the method.\n     *\n     * @returns {*}\n     */\n  get method() {\n    return this[P_METHOD];\n  }\n\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Executes the current action and returns the raw result.\n     *\n     * @returns {Promise}\n     */\n  async execute() {\n    return this[P_EXECUTOR].execute(this);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = BaseAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\nconst Abstract = require('./Abstract');\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_BLOCK = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_REWARD = Symbol('reward');\nconst P_FEE = Symbol('fee');\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('ver_a');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_TARGET = Symbol('target');\nconst P_NONCE = Symbol('nonce');\nconst P_PAYLOAD = Symbol('payload');\nconst P_SBH = Symbol('sbh');\nconst P_OPH = Symbol('oph');\nconst P_POW = Symbol('pow');\nconst P_HASHRATEKHS = Symbol('hashratekhs');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * Represents a block.\n */\nclass Block extends Abstract {\n  /**\n   * Creates a new instance of the Block class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_REWARD] = new Currency(data.reward);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_TARGET] = new BN(data.target.toString(), 10);\n    this[P_NONCE] = new BN(data.nonce.toString(), 10);\n    this[P_PAYLOAD] = data.payload;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_OPH] = BC.fromHex(data.oph);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_HASHRATEKHS] = new BN(data.hashratekhs.toString(), 10);\n    this[P_MATURATION] = parseInt(data.maturation, 10);\n    this[P_OPERATIONS] = null;\n    if (data.operations !== undefined) {\n      this[P_OPERATIONS] = parseInt(data.operations, 10);\n    }\n  }\n\n  /**\n   * Gets the number of a block.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the public key of the miner of the block.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the reward.\n   *\n   * @returns {Currency}\n   */\n  get reward() {\n    return this[P_REWARD];\n  }\n\n  /**\n   * Gets the collective fee awarded to the miner.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the version of the protocol.\n   *\n   * @returns {Number}\n   */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n   * Gets the protocol version of the miner.\n   *\n   * @returns {Number}\n   */\n  get verA() {\n    return this[P_VER_A];\n  }\n\n  /**\n   * Gets the UTC timestamp of the block.\n   *\n   * @returns {Number}\n   */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n   * Gets the used target.\n   *\n   * @returns {BigNumber}\n   */\n  get target() {\n    return this[P_TARGET];\n  }\n\n  /**\n   * Gets the calculated nonce.\n   *\n   * @returns {BigNumber}\n   */\n  get nonce() {\n    return this[P_NONCE];\n  }\n\n  /**\n   * Gets the payload of the miner.\n   *\n   * @returns {String}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the safebox hash.\n   *\n   * @returns {BC}\n   */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {BC}\n   */\n  get oph() {\n    return this[P_OPH];\n  }\n\n  /**\n   * Gets the POW.\n   *\n   * @returns {BC}\n   */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n   * Gets the hashrate in kh/s.\n   *\n   * @returns {BigNumber}\n   */\n  get hashratekhs() {\n    return this[P_HASHRATEKHS];\n  }\n\n  /**\n   * Gets the age of the block in terms of blocks.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the number of operations in the block.\n   *\n   * @returns {Number}\n   */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n   * Gets the list of accounts created.\n   *\n   * @returns {AccountNumber[]}\n   */\n  get createdAccounts() {\n    return [\n      new AccountNumber(this[P_BLOCK] * 5),\n      new AccountNumber(this[P_BLOCK] * 5 + 1),\n      new AccountNumber(this[P_BLOCK] * 5 + 2),\n      new AccountNumber(this[P_BLOCK] * 5 + 3),\n      new AccountNumber(this[P_BLOCK] * 5 + 4)\n    ];\n  }\n}\n\nmodule.exports = Block;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Curve = require('@pascalcoin-sbx/common').Types.Keys.Curve;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst P_NAME = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('publicKey');\nconst P_CAN_USE = Symbol('can_user');\nconst P_B58_PUBKEY = Symbol('b58_pubkey');\nconst P_EC_NID = Symbol('ec_nid');\nconst P_X = Symbol('x');\nconst P_Y = Symbol('y');\n\n/**\n * Holds information about a public key in the wallet (fetched via rpc).\n */\nclass WalletPublicKey extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_NAME] = data.name;\n    this[P_ENC_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.publicKey));\n    this[P_CAN_USE] = !!data.can_use;\n\n    this[P_B58_PUBKEY] = null;\n    this[P_EC_NID] = null;\n    this[P_X] = null;\n    this[P_Y] = null;\n    if (data.b58_pubkey !== undefined) {\n      this[P_B58_PUBKEY] = data.b58_pubkey;\n    }\n    if (data.ec_nid !== undefined) {\n      this[P_EC_NID] = new Curve(parseInt(data.ec_nid, 10));\n    }\n    if (data.x !== undefined) {\n      this[P_X] = BC.fromHex(data.x);\n    }\n    if (data.y !== undefined) {\n      this[P_Y] = BC.fromHex(data.y);\n    }\n  }\n\n  /**\n     * Gets the name of the key.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {BC}\n     */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n     * Gets a flag indicating whether the key can be used.\n     *\n     * @returns {Boolean}\n     */\n  get canUse() {\n    return this[P_CAN_USE];\n  }\n\n  /**\n     * Gets the base58 public key if returned by the node.\n     *\n     * @returns {String|null}\n     */\n  get base58PublicKey() {\n    return this[P_B58_PUBKEY];\n  }\n\n  /**\n     * Gets the used curve if returned by the node.\n     *\n     * @returns {Curve|null}\n     */\n  get ecNid() {\n    return this[P_EC_NID];\n  }\n\n  /**\n     * Gets the X value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the Y value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get y() {\n    return this[P_Y];\n  }\n}\n\nmodule.exports = WalletPublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_BALANCE = Symbol('balance');\nconst P_N_OPERATION = Symbol('n_operation');\nconst P_UPDATED_B = Symbol('updated_b');\nconst P_STATE = Symbol('state');\nconst P_NAME = Symbol('name');\nconst P_TYPE = Symbol('type');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\nconst P_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller_account');\nconst P_PRIVATE_SALE = Symbol('private_sale');\nconst P_NEW_ENC_PUBKEY = Symbol('new_enc_pubkey');\n\n/**\n * Represents an account.\n */\nclass Account extends Abstract {\n  /**\n   * The state of an account when it is listed for sale.\n   *\n   * @returns {string}\n   */\n  static get STATE_LISTED() {\n    return 'listed';\n  }\n\n  /**\n   * The state of an account when it is not listed.\n   *\n   * @returns {string}\n   */\n  static get STATE_NORMAL() {\n    return 'normal';\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_BALANCE] = new Currency(data.balance);\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_UPDATED_B] = parseInt(data.updated_b, 10);\n\n    if (data.state !== Account.STATE_NORMAL && data.state !== Account.STATE_LISTED) {\n      throw new Error('Invalid account state.');\n    }\n\n    this[P_STATE] = data.state;\n    this[P_NAME] = new AccountName(data.name);\n    this[P_TYPE] = data.type;\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    // when not listed\n    this[P_PRICE] = null;\n    this[P_SELLER_ACCOUNT] = null;\n    this[P_PRIVATE_SALE] = null;\n    this[P_NEW_ENC_PUBKEY] = null;\n\n    if (this[P_STATE] === Account.STATE_LISTED) {\n      this[P_PRICE] = new Currency(data.price);\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n      this[P_PRIVATE_SALE] = data.private_sale;\n      if (data.new_enc_pubkey !== '000000000000' && data.new_enc_pubkey !== undefined) {\n        this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n      }\n    }\n  }\n\n  /**\n   * Gets the account number of the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the public key of the account.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Currency}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the number of operations of this account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the block number when the account was last updated.\n   *\n   * @returns {Number}\n   */\n  get updatedB() {\n    return this[P_UPDATED_B];\n  }\n\n  /**\n   * Gets the state of the account (normal, listed).\n   *\n   * @returns {String}\n   */\n  get state() {\n    return this[P_STATE];\n  }\n\n  /**\n   * Gets the name of the account.\n   *\n   * @returns {AccountName}\n   */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n   * Gets the type of the account.\n   *\n   * @returns {Number}\n   */\n  get type() {\n    return this[P_TYPE];\n  }\n\n  /**\n   * Gets the block number until the account is locked when it's listed for\n   * sale.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the price of the account in case its listed.\n   *\n   * @returns {Currency|null}\n   */\n  get price() {\n    return this[P_PRICE];\n  }\n\n  /**\n   * Gets the account of the seller in case the account is listed for sale.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets a flag indicating whether the account is for sale. Attention:\n   * null and false = not for sale.\n   *\n   * @returns {boolean}\n   */\n  get privateSale() {\n    return !!this[P_PRIVATE_SALE];\n  }\n\n  /**\n   * Gets the new public key in case of a escrow.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets a value indicating whether the account is for sale.\n   *\n   * @returns {boolean}\n   */\n  isForSale() {\n    return this[P_STATE] === Account.STATE_LISTED;\n  }\n}\n\nmodule.exports = Account;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\nconst PascalCoinInfo = require('@pascalcoin-sbx/common').PascalCoinInfo;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\n\n/**\n * An object that holds infos about an operation action. It extends the\n * BaseAction functionality by methods which are useful for operations.\n */\nclass OperationAction extends BaseAction {\n  /**\n   * Constructor\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.fee = new Currency(0);\n    this.params.payload = '';\n    this.params.payload_method = 'none';\n  }\n\n  /**\n     * Sets the payload of the action.\n     *\n     * @param {String|BC} payload\n     * @param {String} payloadMethod\n     * @param {String} password\n     * @returns {OperationAction}\n     */\n  withPayload(payload, payloadMethod = 'none', password = null) {\n    this.params.payload = payload;\n    this.params.payload_method = payloadMethod;\n    if (password !== null) {\n      this.params.pwd = password;\n    }\n\n    return this;\n  }\n\n  /**\n     * Sets the fee.\n     *\n     * @param {Number|Currency} fee\n     * @returns {OperationAction}\n     */\n  withFee(fee) {\n    this.params.fee = new Currency(fee);\n    return this;\n  }\n\n  /**\n   * Sets the fee to the minimum.\n   *\n   * @returns {OperationAction}\n   */\n  withMinFee(lastKnownBlock = null) {\n    this.params.fee = PascalCoinInfo.MIN_FEE(lastKnownBlock);\n    return this;\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return super.isValid();\n  }\n}\n\nmodule.exports = OperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Represents a sender in an operation.\n */\nclass Sender extends Abstract {\n  /**\n   * Creates a new instance of the Sender class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the n operation of thwe sender.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the account of the sender.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Sender;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\n\n/**\n * Represents a receiver in an operation.\n */\nclass Receiver extends Abstract {\n  /**\n   * Creates a new instance of the Receiver class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the account of the receiver.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Receiver;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_NEW_ENC_PUBKEY = Symbol('newPublicKey');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\nconst P_SELLER_ACCOUNT = Symbol('sellerAccount');\nconst P_ACCOUNT_PRICE = Symbol('account_price');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('lockedUntilBlock');\nconst P_FEE = Symbol('fee');\n\n/**\n * Represents a Changer in an operation.\n */\nclass Changer extends Abstract {\n  /**\n   * Creates a new instance of the Changer class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_N_OPERATION] = null;\n    if (data.n_operation !== undefined) {\n      this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    }\n\n    this[P_NEW_ENC_PUBKEY] = null;\n    if (data.new_enc_pubkey !== undefined) {\n      this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n    }\n\n    this[P_NEW_NAME] = null;\n    if (data.new_name !== undefined) {\n      this[P_NEW_NAME] = new AccountName(data.new_name);\n    }\n\n    this[P_NEW_TYPE] = null;\n    if (data.new_type !== undefined) {\n      this[P_NEW_TYPE] = data.new_type;\n    }\n\n    this[P_SELLER_ACCOUNT] = null;\n    if (data.seller_account !== undefined) {\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n    }\n\n    this[P_ACCOUNT_PRICE] = null;\n    if (data.account_price !== undefined) {\n      this[P_ACCOUNT_PRICE] = new Currency(data.account_price);\n    }\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    this[P_FEE] = new Currency(0);\n    if (data.fee !== undefined) {\n      this[P_FEE] = new Currency(data.fee);\n    }\n  }\n\n  /**\n   * Gets the changed account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the n op of the account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the new public key.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the new name.\n   *\n   * @returns {String|null}\n   */\n  get newName() {\n    return this[P_NEW_NAME];\n  }\n\n  /**\n   * Gets the new type.\n   *\n   * @returns {Number|null}\n   */\n  get newType() {\n    return this[P_NEW_TYPE];\n  }\n\n  /**\n   * Gets the seller account.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets the sales price of the account.\n   *\n   * @returns {Currency|null}\n   */\n  get accountPrice() {\n    return this[P_ACCOUNT_PRICE];\n  }\n\n  /**\n   * Gets the block number until the account is blocked.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the fee for the change operation.\n   *\n   * @returns {Currency|null}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n}\n\nmodule.exports = Changer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CALLER = Symbol('caller');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\nconst PublicKey = require('@pascalcoin-sbx/common').Types.Keys.PublicKey;\nconst KeyPair = require('@pascalcoin-sbx/common').Types.Keys.KeyPair;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst Block = require('./Types/Block');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst Account = require('./Types/Account');\n\nconst publicKeyCoder = new PublicKeyCoder();\nconst opHashCoder = new OperationHashCoder();\n\n/**\n * Simple function that transforms the values of an object to make them usable\n * in rpc calls.\n *\n * @param {Object} params\n * @returns {Object}\n */\nfunction transformRpcParams(params) {\n  const newParams = {};\n\n  Object.keys(params).forEach((field) => {\n    const item = params[field];\n\n    // we weill delete fields that are null\n    if (item === null) {\n\n    } else if (field.indexOf('pubkey') !== -1) {\n      // correct the field name..\n      let newField = field.replace('pubkey', 'enc_pubkey');\n\n      // and set the value\n      if (item instanceof BC) {\n        newParams[newField] = item.toHex();\n      } else if (item instanceof PublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item).toHex();\n      } else if (item instanceof WalletPublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else if (item instanceof KeyPair) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else {\n        newField = newField.replace('enc_pubkey', 'b58_pubkey');\n        newParams[newField] = item.toString();\n      }\n    } else if (field === 'payload' && !(item instanceof BC)) {\n      newParams[field] = BC.fromString(item).toHex();\n    } else if (field === 'max' || field === 'start' || field === 'end' || field === 'depth') {\n      newParams[field] = parseInt(item, 10);\n    } else if ((field === 'fee' || field === 'amount' || field === 'price') &&\n        !(params[field] instanceof Currency)\n    ) {\n      newParams[field] = new Currency(item);\n      if (newParams[field].isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      } else {\n        newParams[field] = newParams[field].toStringOpt();\n      }\n    } else if (typeof item === 'boolean') {\n      newParams[field] = item;\n    } else if (field === 'senders') {\n      newParams[field] = item.map(senderItem => {\n        let o = {\n          account: senderItem.account.account,\n          amount: senderItem.amount.toStringOpt(),\n          payload: senderItem.payload.toHex()\n        };\n\n        if (!isNaN(senderItem.nOperation)) {\n          o.n_operation = senderItem.nOperation;\n        }\n        return o;\n      });\n    } else if (field === 'receivers') {\n      newParams[field] = item.map(receiverItem => {\n        return {\n          account: receiverItem.account.account,\n          amount: receiverItem.amount.toStringOpt(),\n          payload: receiverItem.payload.toHex()\n        };\n      });\n    } else if (field === 'changesinfo') {\n      newParams[field] = item.map(changerItem => {\n        let o = {\n          account: changerItem.account.account\n        };\n\n        if (changerItem.newPublicKey !== null) {\n          o.new_b58_pubkey = new PublicKeyCoder().encodeToBase58(changerItem.newPublicKey);\n        }\n        if (changerItem.newName !== null) {\n          o.new_name = changerItem.newName.toString();\n        }\n        if (changerItem.newType !== null) {\n          o.new_type = changerItem.newType;\n        }\n\n        if (!isNaN(changerItem.nOperation)) {\n          o.n_operation = changerItem.nOperation;\n        }\n        return o;\n      });\n    } else if (item.constructor.name === 'Array') {\n      if (item.length > 0) {\n        newParams[field] = item;\n      }\n    } else if (item instanceof BC) {\n      newParams[field] = item.toHex();\n    } else if (item instanceof OperationHash) {\n      newParams[field] = opHashCoder.encodeToBytes(item).toHex();\n    } else if (item instanceof Account) {\n      newParams[field] = item.account.account; // NICE!!!!! :-D\n    } else if (item instanceof AccountNumber) {\n      newParams[field] = item.account;\n    } else if (item instanceof AccountName) {\n      newParams[field] = item.toString();\n    } else if (item instanceof Block) {\n      newParams[field] = item.block;\n    } else if (item instanceof Currency) {\n      if (item.isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      }\n      newParams[field] = item.toStringOpt();\n    } else if (typeof item === 'number') {\n      newParams[field] = item;\n    } else {\n      newParams[field] = item.toString();\n    }\n  });\n\n  return newParams;\n}\n\nfunction transformRpcResult(value, DestinationType) {\n  switch (DestinationType.name) {\n    case 'Boolean':\n      return !!value;\n    case 'String':\n      return value.toString();\n    case 'Object':\n      return value;\n    case 'BC':\n      return BC.from(value);\n    default:\n      return new DestinationType(value);\n  }\n};\n\n/**\n * This class will execute an rpc call and returns a promise.\n */\nclass Executor {\n  /**\n     * Constructor\n     *\n     * @param {Caller} caller\n     */\n  constructor(caller) {\n    this[P_CALLER] = caller;\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {BaseAction} action\n   * @param {Function|null} transformCallback\n   * @returns {Promise<any>}\n   */\n  async execute(action, transformCallback = null) {\n    transformCallback = transformCallback || this.transform(action.destinationType, action.returnsArray);\n    return new Promise((resolve, reject) => {\n      this[P_CALLER].call(action.method, transformRpcParams(action.params))\n        .then((response) => {\n          resolve([response, transformCallback]);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Transforms a raw response value to a special type.\n   *\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   * @returns {*}\n   */\n  transform(DestinationType, returnsArray) {\n    if (returnsArray) {\n      return function (value) {\n        return value.map(v => transformRpcResult(v, DestinationType));\n      };\n    }\n\n    return function (value) {\n      return transformRpcResult(value, DestinationType);\n    };\n  }\n}\n\nmodule.exports = Executor;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst jaysonBrowserClient = require('jayson/lib/client/browser');\nconst fetch = require('node-fetch');\nconst ConnectionError = require('./Errors/ConnectionError');\nconst ResultError = require('./Errors/ResultError');\n\nconst P_CLIENT = Symbol('client');\n\n/**\n * A caller object that can call JSON-RPC methods.\n */\nclass Caller {\n  /**\n     * Creates a new caller instance.\n     *\n     * @param {String} host\n     */\n  constructor(host) {\n    this[P_CLIENT] = jaysonBrowserClient((request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      return fetch(host, options)\n        .then(res => res.text())\n        .then((text) => {\n          callback(null, text);\n        })\n        .catch((err) => {\n          callback(err);\n        });\n    });\n  }\n\n  /**\n     * Calls the given method with the given params and returns a promise.\n     *\n     * @param {String}method\n     * @param {Object} params\n     * @returns {Promise<any>}\n     */\n  call(method, params) {\n    return new Promise((resolve, reject) => {\n      this[P_CLIENT].request(method, params, (err, error, result) => {\n        if (err !== null || error !== undefined || result === undefined) {\n          if (err !== null && err.constructor.name === 'FetchError') {\n            return reject(new ConnectionError(err));\n          }\n          if (error !== null && err.constructor.name !== 'FetchError') {\n            return reject(new ResultError(error.code, error.message));\n          }\n          if (result !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          return resolve(result);\n        }\n        return resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Caller;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ORIGINAL = Symbol('original');\nconst P_MESSAGE = Symbol('message');\n\nclass ConnectionError {\n  constructor(originalFetchError) {\n    this[P_ORIGINAL] = originalFetchError;\n    this[P_MESSAGE] = originalFetchError.message;\n  }\n\n  get original() {\n    return this[P_ORIGINAL];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ConnectionError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CODE = Symbol('code');\nconst P_MESSAGE = Symbol('message');\n\nclass ResultError {\n  constructor(code, message) {\n    this[P_CODE] = code;\n    this[P_MESSAGE] = message;\n  }\n\n  get code() {\n    return this[P_CODE];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ResultError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\n\n/**\n * Whenever a remote endpoint has paging possibilities, this action will be\n * returned.\n */\nclass PagedAction extends BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.changeParam('start', 0);\n    this.changeParam('max', 100);\n  }\n\n  set start(start) {\n    this.changeParam('start', start);\n    return this;\n  }\n\n  set max(max) {\n    this.changeParam('max', max);\n    return this;\n  }\n\n  /**\n   * Executes the current action and returns all results.\n   *\n   * @returns {Promise}\n   */\n  async executeAll() {\n    let all = [];\n    let transformCallback = null;\n\n    await this.executeAllReport(([data, transform]) => {\n      if (transformCallback === null) {\n        transformCallback = transform;\n      }\n      data.forEach(item => all.push(item));\n    });\n    return [all, transformCallback];\n  }\n\n  /**\n   * Executes the current action and reports the results of each step to the\n   * given reporter.\n   *\n   * @returns {Promise}\n   */\n  async executeAllReport(reporter, restEach = -1, restSeconds = -1, restCallback = null) {\n    let result = [];\n    var reports = 0;\n\n    do {\n      if (restEach > -1 && reports > 0 && reports % restEach === 0) {\n        if (restCallback !== null) {\n          restCallback();\n        }\n        await (async () => {\n          return new Promise(function (resolve) {\n            setTimeout(function () {\n              resolve();\n            }, restSeconds * 1000);\n          });\n        })();\n      }\n\n      result = await this.execute();\n      let c = reporter(result);\n\n      // being able to stop execution\n      if (c === false) {\n        return;\n      }\n      reports++;\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result[0].length > 0 && result[0].length === this.params.max);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = PagedAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst OperationAction = require('./OperationAction');\nconst BC = require('@pascalcoin-sbx/common').BC;\n\n/**\n * This object derives from an operation action and extends the functionality\n * by methods shared by cold wallet signing operations.\n */\nclass SignOperationAction extends OperationAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.last_n_operation = null;\n    this.params.rawoperations = null;\n  }\n\n  /**\n     * Sets the last n operation value.\n     *\n     * @param {Number} lastNOperation\n     * @return {SignOperationAction}\n     */\n  withLastNOperation(lastNOperation) {\n    this.params.last_n_operation = lastNOperation;\n    return this;\n  }\n\n  /**\n     * Sets the raw operations instance of a previous result.\n     *\n     * @param {BC|String} rawoperations\n     * @return {SignOperationAction}\n     */\n  withRawOperations(rawoperations) {\n    this.params.rawoperations = BC.from(rawoperations);\n  }\n\n  isValid() {\n    return super.isValid() && this.params.last_n_operation !== null;\n  }\n}\n\nmodule.exports = SignOperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst NetProtocol = require('./NetProtocol');\nconst NetStats = require('./NetStats');\nconst NodeServer = require('./NodeServer');\n\nconst P_READY = Symbol('ready');\nconst P_READY_S = Symbol('ready_s');\nconst P_STATUS_S = Symbol('status_s');\nconst P_PORT = Symbol('port');\nconst P_LOCKED = Symbol('locked');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_BLOCKS = Symbol('blocks');\nconst P_NODESERVERS = Symbol('nodeservers');\nconst P_NETSTATS = Symbol('netstats');\nconst P_VERSION = Symbol('version');\nconst P_NETPROTOCOL = Symbol('netprotocol');\nconst P_SBH = Symbol('sbh');\nconst P_POW = Symbol('pow');\nconst P_OPENSSL = Symbol('openssl');\n\nclass NodeStatus extends Abstract {\n  constructor(data) {\n    super(data);\n\n    this[P_READY] = !!data.ready;\n    this[P_READY_S] = data.ready_s;\n    this[P_STATUS_S] = data.status_s;\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LOCKED] = !!data.locked;\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_BLOCKS] = parseInt(data.blocks, 10);\n    this[P_VERSION] = data.version;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_OPENSSL] = BC.fromHex(data.openssl);\n    this[P_NETPROTOCOL] = new NetProtocol(data.netprotocol);\n    this[P_NETSTATS] = new NetStats(data.netstats);\n    this[P_NODESERVERS] = data.nodeservers.map(ns => new NodeServer(ns));\n  }\n\n  /**\n     * Gets a flag indicating whether the node is ready.\n     *\n     * @returns {Boolean}\n     */\n  get ready() {\n    return this[P_READY];\n  }\n\n  /**\n     * Gets a string explaining the ready status.\n     *\n     * @returns {String}\n     */\n  get readyS() {\n    return this[P_READY_S];\n  }\n\n  /**\n     * Gets a string defining the status of the node.\n     *\n     * @returns {String}\n     */\n  get statusS() {\n    return this[P_STATUS_S];\n  }\n\n  /**\n     * Gets the port of the node.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets a value indicating whether the wallet is locked.\n     *\n     * @returns {Boolean}\n     */\n  get locked() {\n    return this[P_LOCKED];\n  }\n\n  /**\n     * Gets the timestamp where the node runs.\n     *\n     * @returns {Number}\n     */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {Number}\n     */\n  get blocks() {\n    return this[P_BLOCKS];\n  }\n\n  /**\n     * Gets the list of nodeservers.\n     *\n     * @returns {NodeServer[]}\n     */\n  get nodeservers() {\n    return this[P_NODESERVERS];\n  }\n\n  /**\n     * Gets the netstats\n     *\n     * @returns {NetStats}\n     */\n  get netstats() {\n    return this[P_NETSTATS];\n  }\n\n  /**\n     * Gets the node version info.\n     *\n     * @returns {Version}\n     */\n  get version() {\n    return this[P_VERSION];\n  }\n\n  /**\n     * Gets the info about the protocol versions.\n     *\n     * @returns {NetProtocol}\n     */\n  get netprotocol() {\n    return this[P_NETPROTOCOL];\n  }\n\n  /**\n     * Gets the last safebox hash.\n     *\n     * @returns {BC}\n     */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n     * Gets the last known POW.\n     *\n     * @returns {BC}\n     */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n     * Gets the openssl info.\n     *\n     * @returns {BC}\n     */\n  get openssl() {\n    return this[P_OPENSSL];\n  }\n}\n\nmodule.exports = NodeStatus;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('verA');\n\n/**\n * Holds information about a nodes version.\n */\nclass NetProtocol extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n  }\n\n  /**\n     * Gets the wallets protocol version.\n     *\n     * @returns {Number}\n     */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n     * Gets the miners protocol version.\n     *\n     * @returns {Number}\n     */\n  get verA() {\n    return this[P_VER_A];\n  }\n}\n\nmodule.exports = NetProtocol;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_BRECEIVED = Symbol('breceived');\nconst P_SERVERS_T = Symbol('servers_t');\nconst P_TSERVERS = Symbol('tservers');\nconst P_TOTAL = Symbol('total');\nconst P_BSEND = Symbol('bsend');\nconst P_SERVERS = Symbol('servers');\nconst P_CLIENTS = Symbol('clients');\nconst P_ACTIVE = Symbol('active');\nconst P_TCLIENTS = Symbol('tclients');\n\n/**\n * Class that holds netstats of a node server.\n */\nclass NetStats extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_BRECEIVED] = parseInt(data.breceived, 10);\n    this[P_SERVERS_T] = parseInt(data.servers_t, 10);\n    this[P_TSERVERS] = parseInt(data.tservers, 10);\n    this[P_TOTAL] = parseInt(data.total, 10);\n    this[P_BSEND] = parseInt(data.bsend, 10);\n    this[P_SERVERS] = parseInt(data.servers, 10);\n    this[P_CLIENTS] = parseInt(data.clients, 10);\n    this[P_ACTIVE] = parseInt(data.active, 10);\n    this[P_TCLIENTS] = parseInt(data.tclients, 10);\n  }\n\n  /**\n     * Gets the received bytes.\n     *\n     * @returns {Number}\n     */\n  get breceived() {\n    return this[P_BRECEIVED];\n  }\n\n  /**\n     * Gets the number of server connections\n     *\n     * @returns {Number}\n     */\n  get serversT() {\n    return this[P_SERVERS_T];\n  }\n\n  /**\n     * Gets the number of server connections.\n     *\n     * @returns {Number}\n     */\n  get tservers() {\n    return this[P_TSERVERS];\n  }\n\n  /**\n     * Gets the number of total connections.\n     *\n     * @returns {Number}\n     */\n  get total() {\n    return this[P_TOTAL];\n  }\n\n  /**\n     * Gets the number of bytes sent.\n     *\n     * @returns {Number}\n     */\n  get bsend() {\n    return this[P_BSEND];\n  }\n\n  /**\n     * Gets the number of servers that responded.\n     *\n     * @returns {Number}\n     */\n  get servers() {\n    return this[P_SERVERS];\n  }\n\n  /**\n     * Gets the number of client connections.\n     *\n     * @returns {Number}\n     */\n  get clients() {\n    return this[P_CLIENTS];\n  }\n\n  /**\n     * Gets the number of active connections.\n     *\n     * @returns {Number}\n     */\n  get active() {\n    return this[P_ACTIVE];\n  }\n\n  /**\n     * Gets the number of total client connections.\n     *\n     * @returns {Number}\n     */\n  get tclients() {\n    return this[P_TCLIENTS];\n  }\n}\n\nmodule.exports = NetStats;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_PORT = Symbol('port');\nconst P_LASTCON = Symbol('lastcon');\nconst P_ATTEMPTS = Symbol('attempts');\nconst P_IP = Symbol('ip');\n\n/**\n * Holds information about a single node server connection.\n */\nclass NodeServer extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LASTCON] = parseInt(data.lastcon, 10);\n    this[P_ATTEMPTS] = parseInt(data.attempts, 10);\n    this[P_IP] = data.ip;\n  }\n\n  /**\n     * Gets the port of the server.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets the timestamp of the last connection.\n     *\n     * @returns {Number}\n     */\n  get lastcon() {\n    return this[P_LASTCON];\n  }\n\n  /**\n     * Gets the number of connection attempts.\n     *\n     * @returns {Number}\n     */\n  get attempts() {\n    return this[P_ATTEMPTS];\n  }\n\n  /**\n     * Gets the IP of the node.\n     *\n     * @returns {String}\n     */\n  get ip() {\n    return this[P_IP];\n  }\n}\n\nmodule.exports = NodeServer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\n\nconst opHashCoder = new OperationHashCoder();\n\nconst Sender = require('./Sender');\nconst Receiver = require('./Receiver');\nconst Changer = require('./Changer');\n\nconst P_VALID = Symbol('valid');\nconst P_ERRORS = Symbol('errors');\nconst P_BLOCK = Symbol('block');\nconst P_TIME = Symbol('time');\nconst P_OPBLOCK = Symbol('opblock');\nconst P_PAYLOAD = Symbol('payload');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPTYPE = Symbol('optype');\nconst P_ACCOUNT = Symbol('account');\nconst P_OPTXT = Symbol('optxt');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_BALANCE = Symbol('balance');\nconst P_OPHASH = Symbol('ophash');\nconst P_OLD_OPHASH = Symbol('old_ophash');\nconst P_SUBTYPE = Symbol('subtype');\nconst P_SIGNER_ACCOUNT = Symbol('signer_account');\nconst P_CHANGERS = Symbol('changers');\nconst P_SENDERS = Symbol('senders');\nconst P_RECEIVERS = Symbol('receivers');\n\n/**\n * A class thats holds the information about an operation.\n */\nclass Operation extends Abstract {\n  // The available optypes\n  static get BLOCKCHAIN_REWARD() {\n    return 0;\n  }\n\n  static get TRANSACTION() {\n    return 1;\n  }\n\n  static get CHANGE_KEY() {\n    return 2;\n  }\n\n  static get RECOVER_FUNDS() {\n    return 3;\n  }\n\n  static get LIST_FOR_SALE() {\n    return 4;\n  }\n\n  static get DELIST() {\n    return 5;\n  }\n\n  static get BUY() {\n    return 6;\n  }\n\n  static get CHANGE_KEY_ACCOUNT() {\n    return 7;\n  }\n\n  static get CHANGE_ACCOUNT_INFO() {\n    return 8;\n  }\n\n  static get MULTI_OPERATION() {\n    return 9;\n  }\n\n  static get DATA() {\n    return 10;\n  }\n\n  static get SUBTYPE_MINER() {\n    return 1;\n  }\n  static get SUBTYPE_DEVELOPER() {\n    return 2;\n  }\n  static get SUBTYPE_TX_SENDER() {\n    return 11;\n  }\n  static get SUBTYPE_TX_RECEIVER() {\n    return 12;\n  }\n  static get SUBTYPE_TX_BUY_BUYER() {\n    return 13;\n  }\n  static get SUBTYPE_TX_BUY_TARGET() {\n    return 14;\n  }\n  static get SUBTYPE_TX_BUY_SELLER() {\n    return 15;\n  }\n  static get SUBTYPE_CHANGE_KEY() {\n    return 21;\n  }\n  static get SUBTYPE_RECOVER() {\n    return 31;\n  }\n  static get SUBTYPE_LIST_PUBLIC() {\n    return 41;\n  }\n  static get SUBTYPE_LIST_PRIVATE() {\n    return 42;\n  }\n  static get SUBTYPE_DELIST() {\n    return 51;\n  }\n  static get SUBTYPE_BUY_BUYER() {\n    return 61;\n  }\n  static get SUBTYPE_BUY_TARGET() {\n    return 62;\n  }\n  static get SUBTYPE_BUY_SELLER() {\n    return 63;\n  }\n  static get SUBTYPE_CHANGE_KEY_SIGNED() {\n    return 71;\n  }\n  static get SUBTYPE_CHANGE_ACCOUNT_INFO() {\n    return 81;\n  }\n  static get SUBTYPE_MULTI_GLOBAL() {\n    return 91;\n  }\n  static get SUBTYPE_MULTI_ACCOUNT_INFO() {\n    return 92;\n  }\n  static get SUBTYPE_DATA_GLOBAL() {\n    return 101;\n  }\n  static get SUBTYPE_DATA_SENDER() {\n    return 102;\n  }\n  static get SUBTYPE_DATA_SIGNER() {\n    return 103;\n  }\n  static get SUBTYPE_DATA_RECEIVER() {\n    return 104;\n  }\n\n  /**\n   * Creates a new Operation instance from an rpc response.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_VALID] = true;\n    if (data.valid !== undefined) {\n      this[P_VALID] = !!data.valid;\n    }\n\n    this[P_ERRORS] = null;\n    if (data.errors !== undefined) {\n      this[P_ERRORS] = data.errors;\n    }\n\n    if (data.payload !== undefined) {\n      this[P_PAYLOAD] = BC.fromHex(data.payload);\n    } else {\n      this[P_PAYLOAD] = BC.fromHex('');\n    }\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_TIME] = parseInt(data.time, 10);\n    this[P_OPBLOCK] = parseInt(data.opblock, 10);\n    this[P_MATURATION] = 0;\n    // pending\n    if (data.maturation !== null) {\n      this[P_MATURATION] = parseInt(data.maturation, 10);\n    }\n\n    this[P_OPTYPE] = parseInt(data.optype, 10);\n    // multi-op\n    this[P_ACCOUNT] = null;\n    if (data.account !== undefined) {\n      this[P_ACCOUNT] = new AccountNumber(data.account);\n    }\n    this[P_OPTXT] = data.optxt;\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_BALANCE] = null;\n    if (data.balance !== undefined) {\n      this[P_BALANCE] = new Currency(data.balance);\n    }\n\n    this[P_OPHASH] = null;\n    if (data.ophash !== undefined) {\n      this[P_OPHASH] = BC.fromHex(data.ophash);\n      if (this[P_OPTYPE] !== Operation.BLOCKCHAIN_REWARD) {\n        this[P_OPHASH] = opHashCoder.decodeFromBytes(this[P_OPHASH]);\n      }\n    }\n\n    this[P_OLD_OPHASH] = null;\n    if (data.old_ophash !== undefined) {\n      this[P_OLD_OPHASH] = BC.fromHex(data.old_ophash);\n    }\n\n    this[P_SUBTYPE] = data.subtype;\n    this[P_SIGNER_ACCOUNT] = null;\n    if (data.signer_account !== undefined) {\n      this[P_SIGNER_ACCOUNT] = new AccountNumber(data.signer_account);\n    }\n\n    // eslint-disable-next-line no-multi-assign\n    this[P_SENDERS] = [];\n    this[P_RECEIVERS] = [];\n    this[P_CHANGERS] = [];\n\n    // loop given data and initialize objects\n    data.senders.forEach(s => this[P_SENDERS].push(new Sender(s)));\n    data.receivers.forEach(r => this[P_RECEIVERS].push(new Receiver(r)));\n    data.changers.forEach(c => this[P_CHANGERS].push(new Changer(c)));\n  }\n\n  /**\n   * Gets an indicator whether the operation was valid.\n   *\n   * @returns {Boolean}\n   */\n  get valid() {\n    return this[P_VALID];\n  }\n\n  /**\n   * If the operation is invalid you'll get the error message.\n   *\n   * @returns {String|null}\n   */\n  get errors() {\n    return this[P_ERRORS];\n  }\n\n  /**\n   * Gets the block that is associated with the operation.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the time of the operation.\n   *\n   * @returns {Number}\n   */\n  get time() {\n    return this[P_TIME];\n  }\n\n  /**\n   * Gets the position inside a block.\n   *\n   * @returns {Number}\n   */\n  get opBlock() {\n    return this[P_OPBLOCK];\n  }\n\n  /**\n   * Gets the age in blocks of the operation.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the type of the operation.\n   *\n   * @returns {Number}\n   */\n  get opType() {\n    return this[P_OPTYPE];\n  }\n\n  /**\n   * Gets the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets a textual representation of the operation.\n   *\n   * @returns {String}\n   */\n  get opTxt() {\n    return this[P_OPTXT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the fee.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Number}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {OperationHash}\n   */\n  get opHash() {\n    return this[P_OPHASH];\n  }\n\n  /**\n   * Gets the <= V2 operation Hash.\n   *\n   * @returns {BC|null}\n   */\n  get oldOpHash() {\n    return this[P_OLD_OPHASH];\n  }\n\n  /**\n   * Gets the subtype.\n   *\n   * @returns {String}\n   */\n  get subType() {\n    return this[P_SUBTYPE];\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get signerAccount() {\n    return this[P_SIGNER_ACCOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the list of changers.\n   *\n   * @returns {Changer[]}\n   */\n  get changers() {\n    return this[P_CHANGERS];\n  }\n\n  /**\n   * Gets the list of senders.\n   *\n   * @returns {Sender[]}\n   */\n  get senders() {\n    return this[P_SENDERS];\n  }\n\n  /**\n   * Gets the list of receivers.\n   *\n   * @returns {Receiver[]}\n   */\n  get receivers() {\n    return this[P_RECEIVERS];\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BLOCKCHAIN_REWARD operation.\n   *\n   * @returns {boolean}\n   */\n  isBlockchainReward() {\n    return this[P_OPTYPE] === Operation.BLOCKCHAIN_REWARD;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a TRANSACTION operation.\n   *\n   * @returns {boolean}\n   */\n  isTransaction() {\n    return this[P_OPTYPE] === Operation.TRANSACTION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKey() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a RECOVER_FUNDS operation.\n   *\n   * @returns {boolean}\n   */\n  isRecoverFunds() {\n    return this[P_OPTYPE] === Operation.RECOVER_FUNDS;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a LIST_FOR_SALE operation.\n   *\n   * @returns {boolean}\n   */\n  isListForSale() {\n    return this[P_OPTYPE] === Operation.LIST_FOR_SALE;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DELIST operation.\n   *\n   * @returns {boolean}\n   */\n  isDelist() {\n    return this[P_OPTYPE] === Operation.DELIST;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BUY operation.\n   *\n   * @returns {boolean}\n   */\n  isBuy() {\n    return this[P_OPTYPE] === Operation.BUY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY_ACCOUNT operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKeyAccount() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY_ACCOUNT;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_ACCOUNT_INFO operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeAccountInfo() {\n    return this[P_OPTYPE] === Operation.CHANGE_ACCOUNT_INFO;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a MULTI_OPERATION operation.\n   *\n   * @returns {boolean}\n   */\n  isMultiOperation() {\n    return this[P_OPTYPE] === Operation.MULTI_OPERATION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DATA operation.\n   *\n   * @returns {boolean}\n   */\n  isData() {\n    return this[P_OPTYPE] === Operation.DATA;\n  }\n\n  /**\n   * Gets a value indicating whether the op is pending.\n   *\n   * @returns {boolean}\n   */\n  isPending() {\n    return this[P_BLOCK] === 0;\n  }\n\n  /**\n   * Gets a value indicating whether the operation was not executed because of\n   * fees.\n   *\n   * @returns {boolean}\n   */\n  isZeroFeeError() {\n    return this.valid === false &&\n        this[P_ERRORS].indexOf('zero fee operations per block') > -1;\n  }\n}\n\nmodule.exports = Operation;\n","module.exports = {\n  Client: require('./src/Client'),\n  Executor: require('./src/Executor'),\n  Caller: require('./src/Caller'),\n  Actions: require('./src/Actions'),\n  Errors: require('./src/Errors'),\n  Types: require('./src/Types')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Executor = require('./Executor');\nconst RPCCaller = require('./Caller');\nconst BaseAction = require('./Actions/BaseAction');\nconst PagedAction = require('./Actions/PagedAction');\nconst OperationAction = require('./Actions/OperationAction');\nconst SignOperationAction = require('./Actions/SignOperationAction');\nconst Account = require('./Types/Account');\nconst Block = require('./Types/Block');\nconst SignedMessage = require('./Types/SignedMessage');\nconst NodeStatus = require('./Types/NodeStatus');\nconst Operation = require('./Types/Operation');\nconst Sender = require('./Types/Sender');\nconst Receiver = require('./Types/Receiver');\nconst Changer = require('./Types/Changer');\nconst Connection = require('./Types/Connection');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n * A simple rpc client that will prepare an action that can be executed against\n * a node.\n */\nclass Client {\n\n  /**\n   * Returns a standard instance pointing to the given rpc host node.\n   *\n   * @param {String} rpcHostAddress\n   * @returns {Client}\n   */\n  static factory(rpcHostAddress) {\n    return new Client(\n      new Executor(\n        new RPCCaller(rpcHostAddress),\n      ),\n    );\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Executor} executor\n   */\n  constructor(executor) {\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n   * Adds nodes the remote node should connect to.\n   *\n   * @param {String[]} nodes - The list of nodes (will be transformed to a semicolon separated list)\n   *\n   * @returns {BaseAction}\n   */\n  addNode({\n    nodes\n  }) {\n    return new BaseAction('addnode', {\n      nodes: nodes.join(';')\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an account with the given account number.\n   *\n   * @param {AccountNumber|Number|String} account\n   *\n   * @returns {BaseAction}\n   */\n  getAccount({\n    account\n  }) {\n    return new BaseAction('getaccount', {\n      account: new AccountNumber(account)\n    }, this[P_EXECUTOR], Account, false);\n  }\n\n  /**\n   * Searches for accounts.\n   *\n   * @param {AccountName|String|null} name\n   * @param {Number|null} type\n   * @param {Boolean|null} onlyAccountsForSale\n   * @param {Boolean|null} exact\n   * @param {Currency|null} minBalance\n   * @param {Currency|null} maxBalance\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  findAccounts({\n    name = null,\n    type = null,\n    onlyAccountsForSale = null,\n    exact = null,\n    minBalance = null,\n    maxBalance = null,\n    pubkey = null\n  }) {\n    return new PagedAction('findaccounts', {\n      name: name !== null ? new AccountName(name) : name,\n      type: type !== null ? parseInt(type, 10) : type,\n      only_accounts_for_sale: onlyAccountsForSale,\n      exact,\n      min_balance: minBalance !== null ? new Currency(minBalance) : minBalance,\n      max_balance: maxBalance !== null ? new Currency(maxBalance) : maxBalance,\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns all accounts of a wallet with the given public key\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletAccounts({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletaccounts', {\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns the number of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletAccountsCount({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletaccountscount', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the accumulated balance of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletCoins({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletcoins', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the list of public keys managed in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletPubKeys({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletpubkeys', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Gets the info of a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletPubKey({\n    pubkey\n  }) {\n    return new BaseAction('getwalletpubkey', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Imports a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   * @param {String|null} name\n   *\n   * @returns {BaseAction}\n   */\n  inportPubKey({\n    pubkey,\n    name = null\n  }) {\n    return new BaseAction('importpubkey', {\n      pubkey,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Gets the information of a block\n   *\n   * @param {Number} block\n   *\n   * @returns {BaseAction}\n   */\n  getBlock({\n    block\n  }) {\n    return new BaseAction('getblock', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Block, false);\n  }\n\n  /**\n   * Gets a list of blocks\n   *\n   * @param {Number|null} last\n   * @param {Number|null} start\n   * @param {Number|null} end\n   *\n   * @returns {BaseAction}\n   */\n  getBlocks({\n    last = null,\n    start = null,\n    end = null\n  }) {\n    return new BaseAction('getblocks', {\n      last: last !== null ? parseInt(last, 10) : last,\n      start: start !== null ? parseInt(start, 10) : start,\n      end: end !== null ? parseInt(end, 10) : end\n    }, this[P_EXECUTOR], Block, true);\n  }\n\n  /**\n   * Gets the list of all blocks.\n   *\n   * @returns {BaseAction}\n   */\n  getBlockCount() {\n    return new BaseAction('getblockcount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an operation in a block\n   *\n   * @param {Number} block\n   * @param {Number} opblock\n   *\n   * @returns {BaseAction}\n   */\n  getBlockOperation({\n    block,\n    opblock\n  }) {\n    return new BaseAction('getblockoperation', {\n      block: block !== null ? parseInt(block, 10) : block,\n      opblock: opblock !== null ? parseInt(opblock, 10) : opblock\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Get all operations in a block\n   *\n   * @param {Number} block\n   *\n   * @returns {PagedAction}\n   */\n  getBlockOperations({\n    block\n  }) {\n    return new PagedAction('getblockoperations', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Get all operations of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number|null} depth\n   * @param {Number|null} startblock\n   *\n   * @returns {PagedAction}\n   */\n  getAccountOperations({\n    account,\n    depth = null,\n    startblock = null\n  }) {\n    return new PagedAction('getaccountoperations', {\n      account: new AccountNumber(account),\n      depth: depth !== null ? parseInt(depth, 10) : depth,\n      startblock: startblock !== null ? parseInt(startblock, 10) : startblock\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets all pending operations\n   *\n   * @returns {PagedAction}\n   */\n  getPendings() {\n    return new PagedAction('getpendings', {}, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets the number of pending operations\n   *\n   * @returns {BaseAction}\n   */\n  getPendingsCount() {\n    return new BaseAction('getpendingscount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Decodes the given operation hash\n   *\n   * @param {OperationHash} ophash\n   *\n   * @returns {BaseAction}\n   */\n  decodeOpHash({\n    ophash\n  }) {\n    return new BaseAction('decodeophash', {\n      ophash\n    }, this[P_EXECUTOR], OperationHash, false);\n  }\n\n  /**\n   * Searches for an operation\n   *\n   * @param {OperationHash|null} ophash\n   *\n   * @returns {BaseAction}\n   */\n  findOperation({\n    ophash = null\n  }) {\n    return new BaseAction('findoperation', {\n      ophash\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for an operation signed by account and with n_operation, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperation\n   * @param {Number|null} block\n   *\n   * @returns {BaseAction}\n   */\n  findNOperation({\n    account,\n    nOperation,\n    block = null\n  }) {\n    return new BaseAction('findnoperation', {\n      account: new AccountNumber(account),\n      n_operation: nOperation !== null ? parseInt(nOperation, 10) : nOperation,\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for operations signed by account within an n_operation range, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperationMin\n   * @param {Number} nOperationMax\n   *\n   * @returns {PagedAction}\n   */\n  findNOperations({\n    account,\n    nOperationMin,\n    nOperationMax\n  }) {\n    return new PagedAction('findnoperations', {\n      account: new AccountNumber(account),\n      n_operation_min: nOperationMin !== null ? parseInt(nOperationMin, 10) : nOperationMin,\n      n_operation_max: nOperationMax !== null ? parseInt(nOperationMax, 10) : nOperationMax\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {Currency} amount\n   *\n   * @returns {OperationAction}\n   */\n  sendTo({\n    sender,\n    target,\n    amount\n  }) {\n    return new OperationAction('sendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} senderPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} targetPubkey\n   * @param {Currency} amount\n   *\n   * @returns {SignOperationAction}\n   */\n  signSendTo({\n    sender,\n    target,\n    senderPubkey,\n    targetPubkey,\n    amount\n  }) {\n    return new SignOperationAction('signsendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      sender_pubkey: senderPubkey,\n      target_pubkey: targetPubkey,\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {OperationAction}\n   */\n  changeKey({\n    account,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new OperationAction('changekey', {\n      account: new AccountNumber(account),\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of multiple accounts\n   *\n   * @param {AccountNumber[]|Number[]|String[]} accounts\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  changeKeys({\n    accounts,\n    newPubkey\n  }) {\n    return new OperationAction('changekeys', {\n      accounts: accounts.map((acc) => new AccountNumber(acc)),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change key operation\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} oldPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeKey({\n    account,\n    oldPubkey,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new SignOperationAction('signchangekey', {\n      account: new AccountNumber(account),\n      old_pubkey: oldPubkey,\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Lists an account for sale\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  listAccountForSale({\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new OperationAction('listaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a list operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {SignOperationAction}\n   */\n  signListAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new SignOperationAction('signlistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Delists an account\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {OperationAction}\n   */\n  DelistAccountForSale({\n    accountSigner,\n    accountTarget\n  }) {\n    return new OperationAction('delistaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a delist operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {SignOperationAction}\n   */\n  signDelistAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget\n  }) {\n    return new SignOperationAction('signdelistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Buys an account\n   *\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency|null} price\n   * @param {AccountNumber|Number|String|null} sellerAccount\n   *\n   * @returns {OperationAction}\n   */\n  buyAccount({\n    buyerAccount,\n    accountToPurchase,\n    price = null,\n    sellerAccount = null\n  }) {\n    return new OperationAction('buyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: price !== null ? new Currency(price) : price,\n      seller_account: sellerAccount !== null ? new AccountNumber(sellerAccount) : sellerAccount\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a buy account operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency} price\n   * @param {AccountNumber|Number|String} sellerAccount\n   *\n   * @returns {SignOperationAction}\n   */\n  signBuyAccount({\n    buyerAccount,\n    accountToPurchase,\n    price,\n    sellerAccount,\n    newPubkey,\n    amount,\n    signerPubkey\n  }) {\n    return new SignOperationAction('signbuyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: new Currency(price),\n      seller_account: new AccountNumber(sellerAccount),\n      new_pubkey: newPubkey,\n      amount: amount,\n      signer_pubkey: signerPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes account infos\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {OperationAction}\n   */\n  changeAccountInfo({\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new OperationAction('changeaccountinfo', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change account info operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeAccountInfo({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new SignOperationAction('signchangeaccountinfo', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a message using the given public key\n   *\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  signMessage({\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('signmessage', {\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Verifies a signature\n   *\n   * @param {BC} signature\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  verifySign({\n    signature,\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('verifysign', {\n      signature,\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Removes an operation from the given rawoperations.\n   *\n   * @param {BC} rawoperations\n   * @param {Number} index\n   *\n   * @returns {BaseAction}\n   */\n  operationsDelete({\n    rawoperations,\n    index\n  }) {\n    return new BaseAction('operationsdelete', {\n      rawoperations,\n      index: index !== null ? parseInt(index, 10) : index\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the information about the given operation\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  operationsInfo({\n    rawoperations\n  }) {\n    return new BaseAction('operationsinfo', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes the given operations\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  executeOperations({\n    rawoperations\n  }) {\n    return new BaseAction('executeoperations', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Returns the current node status\n   *\n   * @returns {BaseAction}\n   */\n  nodeStatus() {\n    return new BaseAction('nodestatus', {}, this[P_EXECUTOR], NodeStatus, false);\n  }\n\n  /**\n   * Encodes a public key to a pascalcoin public key\n   *\n   * @param {BC} x\n   * @param {BC} y\n   * @param {Number} ecNid\n   *\n   * @returns {BaseAction}\n   */\n  encodePubKey({\n    x,\n    y,\n    ecNid\n  }) {\n    return new BaseAction('encodepubkey', {\n      x,\n      y,\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decodes an encoded public key.\n   *\n   * @param {BC} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  decodePubKey({\n    pubkey\n  }) {\n    return new BaseAction('decodepubkey', {\n      pubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Encrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String} payloadMethod\n   * @param {String|null} pwd\n   *\n   * @returns {BaseAction}\n   */\n  payloadEncrypt({\n    payload,\n    payloadMethod,\n    pwd = null\n  }) {\n    return new BaseAction('payloadencrypt', {\n      payload,\n      payload_method: payloadMethod,\n      pwd\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String[]} pwds\n   *\n   * @returns {BaseAction}\n   */\n  payloadDecrypt({\n    payload,\n    pwds\n  }) {\n    return new BaseAction('payloaddecrypt', {\n      payload,\n      pwds\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the connections of a node.\n   *\n   * @returns {BaseAction}\n   */\n  getConnections() {\n    return new BaseAction('getconnections', {}, this[P_EXECUTOR], Connection, true);\n  }\n\n  /**\n   * Generates a new key and adds it to the nodes wallet.\n   *\n   * @param {Number} ecNid\n   * @param {String} name\n   *\n   * @returns {BaseAction}\n   */\n  addNewKey({\n    ecNid,\n    name\n  }) {\n    return new BaseAction('addnewkey', {\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Locks the wallet.\n   *\n   * @returns {BaseAction}\n   */\n  lock() {\n    return new BaseAction('lock', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Unlocks the wallet.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  unlock({\n    pwd\n  }) {\n    return new BaseAction('unlock', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Sets the wallet password.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  setWalletPassword({\n    pwd\n  }) {\n    return new BaseAction('setwalletpassword', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Stops the node.\n   *\n   * @returns {BaseAction}\n   */\n  stopNode() {\n    return new BaseAction('stopnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Starts the node.\n   *\n   * @returns {BaseAction}\n   */\n  startNode() {\n    return new BaseAction('startnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Cleans the BlackList.\n   *\n   * @returns {BaseAction}\n   */\n  cleanBlackList() {\n    return new BaseAction('cleanblacklist', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets IP stats\n   *\n   * @returns {BaseAction}\n   */\n  nodeIPStats() {\n    return new BaseAction('node_ip_stats', {}, this[P_EXECUTOR], Object, true);\n  }\n\n  /**\n   * Adds an operation to a multioperation\n   *\n   * @param {BC} rawoperations\n   * @param {Boolean} autoNOperation\n   * @param {Object[]|Sender[]} senders\n   * @param {Object[]|Receiver[]} receivers\n   * @param {Object[]|Changer[]} changesinfo\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationAddOperation({\n    rawoperations,\n    autoNOperation,\n    senders,\n    receivers,\n    changesinfo\n  }) {\n    return new BaseAction('multioperationaddoperation', {\n      rawoperations,\n      auto_n_operation: autoNOperation,\n      senders: senders.map((sen) => new Sender(sen)),\n      receivers: receivers.map((rec) => new Receiver(rec)),\n      changesinfo: changesinfo.map((chng) => new Changer(chng))\n    }, this[P_EXECUTOR], BC, true);\n  }\n\n  /**\n   * Signs the given rawoperations\n   *\n   * @param {BC} rawoperations\n   * @param {Object} accountsAndKeys\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOffline({\n    rawoperations,\n    accountsAndKeys\n  }) {\n    return new BaseAction('multioperationsignoffline', {\n      rawoperations,\n      accounts_and_keys: accountsAndKeys\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Signs the given rawoperations online\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOnline({\n    rawoperations\n  }) {\n    return new BaseAction('multioperationsignonline', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n}\n\nmodule.exports = Client;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","module.exports = require('./assignIn');\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_DIGEST = Symbol('digest');\nconst P_PUBKEY = Symbol('public_key');\nconst P_SIGNATURE = Symbol('signature');\n\n/**\n * Represents a sender in an operation.\n */\nclass SignedMessage extends Abstract {\n  /**\n     * Creates a new instance of the Sender class.\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_DIGEST] = BC.fromHex(data.digest);\n    if (data.enc_pubkey !== undefined) {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    } else {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBase58(data.b58_pubkey);\n    }\n    this[P_SIGNATURE] = BC.fromHex(data.signature);\n  }\n\n  /**\n     * Gets the digest.\n     *\n     * @returns {BC}\n     */\n  get digest() {\n    return this[P_DIGEST];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBKEY];\n  }\n\n  /**\n     * Gets the signature.\n     *\n     * @returns {BC}\n     */\n  get amount() {\n    return this[P_SIGNATURE];\n  }\n}\n\nmodule.exports = SignedMessage;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_RECV = Symbol('recv');\nconst P_TIMEDIFF = Symbol('timediff');\nconst P_NETVER_A = Symbol('nerver_a');\nconst P_SECS = Symbol('secs');\nconst P_SERVER = Symbol('server');\nconst P_IP = Symbol('ip');\nconst P_NETVER = Symbol('netver');\nconst P_SENT = Symbol('sent');\nconst P_APPVER = Symbol('appver');\nconst P_PORT = Symbol('port');\n\n/**\n * Holds information about a node connection.\n */\nclass Connection extends Abstract {\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n    this[P_RECV] = parseInt(data.recv, 10);\n    this[P_TIMEDIFF] = parseInt(data.timediff, 10);\n    this[P_NETVER_A] = parseInt(data.netver_a, 10);\n    this[P_SECS] = parseInt(data.secs, 10);\n    this[P_SERVER] = !!data.server;\n    this[P_IP] = data.ip;\n    this[P_NETVER] = parseInt(data.netver, 10);\n    this[P_SENT] = parseInt(data.sent, 10);\n    this[P_APPVER] = data.appver;\n    this[P_PORT] = parseInt(data.port, 10);\n  }\n\n  /**\n   * Gets the number of received bytes from the connection.\n   *\n   * @returns {Number}\n   */\n  get recv() {\n    return this[P_RECV];\n  }\n\n  /**\n   * Gets the time difference of the current and the remote node in seconds.\n   *\n   * @returns {Number}\n   */\n  get timeDiff() {\n    return this[P_TIMEDIFF];\n  }\n\n  /**\n   * Net protocol available of other node\n   *\n   * @returns {Number}\n   */\n  get netVerA() {\n    return this[P_NETVER_A];\n  }\n\n  /**\n   * The duration of the connection.\n   *\n   * @returns {Number}\n   */\n  get secs() {\n    return this[P_SECS];\n  }\n\n  /**\n   * A flag indicating whether the other node is a server node (daemon).\n   * @returns {*}\n   */\n  get server() {\n    return this[P_SERVER];\n  }\n\n  /**\n   * The IP of the remote node.\n   *\n   * @returns {*}\n   */\n  get ip() {\n    return this[P_IP];\n  }\n\n  /**\n   * The netprotocol version of the other node.\n   *\n   * @returns {*}\n   */\n  get netVer() {\n    return this[P_NETVER];\n  }\n\n  /**\n   * The bytes sent to the other node.\n   *\n   * @returns {*}\n   */\n  get sent() {\n    return this[P_SENT];\n  }\n\n  /**\n   * The node version.\n   *\n   * @returns {*}\n   */\n  get appVer() {\n    return this[P_APPVER];\n  }\n\n  /**\n   * The port of the other node.\n   *\n   * @returns {*}\n   */\n  get port() {\n    return this[P_PORT];\n  }\n}\n\nmodule.exports = Connection;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  BaseAction: require('./BaseAction'),\n  OperationAction: require('./OperationAction'),\n  PagedAction: require('./PagedAction'),\n  SignOperationAction: require('./SignOperationAction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  ConnectionError: require('./ConnectionError'),\n  ResultError: require('./ResultError')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Account: require('./Account'),\n  Block: require('./Block'),\n  NodeStatus: require('./NodeStatus'),\n  NetStats: require('./NetStats'),\n  NetProtocol: require('./NetProtocol'),\n  NodeServer: require('./NodeServer'),\n  Operation: require('./Operation'),\n  Changer: require('./Changer'),\n  Receiver: require('./Receiver'),\n  Sender: require('./Sender'),\n  WalletPublicKey: require('./WalletPublicKey')\n};\n"],"sourceRoot":""}