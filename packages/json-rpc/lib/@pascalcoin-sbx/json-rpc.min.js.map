{"version":3,"sources":["webpack://@pascalcoin-sbx/json-rpc/webpack/universalModuleDefinition","webpack://@pascalcoin-sbx/json-rpc/webpack/bootstrap","webpack://@pascalcoin-sbx/json-rpc/../common/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/BC.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Abstract.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Endian.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/AbstractType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int32.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObject.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/CompositeType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/AbstractInt.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int16.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int8.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isFunction.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseGetTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObjectLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArray.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/BaseAction.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/buffer/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Currency.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bn.js/lib/bn.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/module.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/Curve.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Block.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/WalletPublicKey.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Account.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_root.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/OperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Sender.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Receiver.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Changer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Executor.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Base58.js","webpack://@pascalcoin-sbx/json-rpc/(webpack)/buildin/global.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/PascalCoinInfo.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Sha.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/base.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Util.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/Int64.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/StringWithoutLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Core/BytesFixedLength.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountNumber.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/NOperation.js","webpack://@pascalcoin-sbx/json-rpc/./src/Caller.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseAssignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_defineProperty.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_Symbol.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_freeGlobal.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/eq.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/identity.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArrayLike.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isLength.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIndex.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isUndefined.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/v4.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ConnectionError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/ResultError.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/PagedAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/SignOperationAction.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeStatus.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetProtocol.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NetStats.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/NodeServer.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Operation.js","webpack://@pascalcoin-sbx/json-rpc/./index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Client.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bs58/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base-x/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/safe-buffer/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base64-js/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/ieee754/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/isarray/index.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha256.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha512.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Types/Keys/KeyPair.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/index.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Repeating.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Decissive.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PublicKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Keys/PrivateKey.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/AccountName.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/Currency.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OpType.js","webpack://@pascalcoin-sbx/json-rpc/../common/src/Coding/Pascal/OperationHash.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/client/browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/extend.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/assignIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_copyObject.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_assignValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsNative.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getRawTag.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_objectToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isMasked.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_coreJsData.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_toSource.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getValue.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_createAssigner.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_overRest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_apply.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_setToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseSetToString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/constant.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_shortOut.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIterateeCall.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/keysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_arrayLikeKeys.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseTimes.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsArguments.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isBuffer.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/stubFalse.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsTypedArray.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseUnary.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nodeUtil.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isPrototype.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nativeKeysIn.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/negate.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/rng-browser.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/bytesToUuid.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/generateRequest.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isString.js","webpack://@pascalcoin-sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/node-fetch/browser.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/SignedMessage.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/Connection.js","webpack://@pascalcoin-sbx/json-rpc/./src/Actions/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Errors/index.js","webpack://@pascalcoin-sbx/json-rpc/./src/Types/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Base58","require","BC","Endian","PascalCoinInfo","Sha","Util","Types","Coding","Buffer","P_BUFFER","constructor","buffer","from","[object Object]","data","stringType","Uint8Array","fromHex","e","fromString","hex","strict","length","Error","test","str","int","nBytes","parseInt","toString","instance","prepend","repeat","toBinary","toHex","lowerCase","toLowerCase","toUpperCase","toInt","hexLength","slice","start","end","bytes","reduce","prev","curr","append","concat","equals","bc","compare","readInt8","offset","unsigned","readInt16","endian","detect","method","readInt32","buf","allocUnsafe","split","size","pos","splitted","push","P_INITIALIZATION_DATA","Abstract","initializationData","TypeError","__initializationData","detected","BIG_ENDIAN","LITTLE_ENDIAN","b","ArrayBuffer","a","Uint32Array","P_ID","P_FIXED_VALUE","P_HAS_FIXED_VALUE","P_DESCRIPTION","id","hasFixedValue","fixedValue","encodedSize","decodeFromBytes","options","all","encodeToBytes","withFixedValue","description","undefined","canDecode","AbstractInt","super","fromInt32","type","AbstractType","P_SUBTYPES","P_SIZE_ENCODED","subTypes","addSubType","field","toArray","obj","forEach","subType","values","objOrArray","empty","idx","subTypeValue","Array","isArray","P_ENDIAN","P_UNSIGNED","fromInt16","fromInt8","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","P_PARAMS","P_METHOD","P_EXECUTOR","P_DESTINATION_TYPE","P_RETURNS_ARRAY","params","executor","DestinationType","returnsArray","destinationType","changeParam","execute","isValid","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","isBuffer","len","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","x","y","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","BN","P_VALUE","toFixed","base","dm","divmod","mod","div","isNegative","Currency","pasc","isBN","negative","substring","comps","whole","fraction","molina","add","neg","isVague","toStringOpt","decimals","RegExp","toMolina","addValue","fromMolina","subValue","toPositive","isNeg","eq","gt","lt","lteq","lte","gteq","gte","bn","serialize","pascal","assert","msg","inherits","ctor","superCtor","super_","TempCtor","number","words","red","_init","wordSize","parseHex","parseBase","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","ceil","w","off","limbLen","limbPow","total","word","imuln","_iaddn","dest","clone","_expand","_normSign","zeros","groupSizes","groupBases","smallMulTo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","positive","divn","umod","divRound","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","output","outLen","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","webpackPolyfill","deprecate","paths","children","P_ACCOUNT","P_CHECKSUM","P_CREATED_IN_BLOCK","P_IS_FOUNDATION_REWARD","AccountNumber","account","map","calculateChecksum","isDeveloperReward","checksum","createdInBlock","isFoundationReward","accountNumber","CURVES","0","714","715","729","716","XYL_PUBKEYS","L_PRIVKEYS","ID","NAME","Curve","CN_SECP256K1","CN_P384","CN_SECT283K1","CN_P521","CI_SECP256K1","CI_P384","CI_SECT283K1","CI_P521","curve","keys","xylPublicKey","xOrY","lPrivateKey","supported","Int8","Int16","Int32","BytesWithoutLength","P_LENGTH_FIELD","P_BYTES_FIELD","P_HAS_LEADING_ZB","byteSize","lengthId","lengthDesc","hasLeadingZeroByte","lengthField","encoded","CurveType","pkCoder","PublicKeyCoder","Pascal","Keys","PublicKey","P_BLOCK","P_ENC_PUBKEY","P_REWARD","P_FEE","P_VER","P_VER_A","P_TIMESTAMP","P_TARGET","P_NONCE","P_PAYLOAD","P_SBH","P_OPH","P_POW","P_HASHRATEKHS","P_MATURATION","P_OPERATIONS","block","enc_pubkey","reward","fee","ver","ver_a","timestamp","nonce","payload","sbh","oph","hashratekhs","maturation","operations","publicKey","verA","createdAccounts","P_NAME","P_CAN_USE","P_B58_PUBKEY","P_EC_NID","P_X","P_Y","can_use","b58_pubkey","ec_nid","canUse","base58PublicKey","ecNid","AccountName","P_BALANCE","P_N_OPERATION","P_UPDATED_B","P_STATE","P_TYPE","P_LOCKED_UNTIL_BLOCK","P_PRICE","P_SELLER_ACCOUNT","P_PRIVATE_SALE","P_NEW_ENC_PUBKEY","Account","STATE_LISTED","STATE_NORMAL","balance","n_operation","updated_b","state","locked_until_block","price","seller_account","private_sale","new_enc_pubkey","nOperation","updatedB","lockedUntilBlock","sellerAccount","privateSale","newPublicKey","isForSale","freeGlobal","freeSelf","Function","BaseAction","payload_method","withPayload","payloadMethod","password","pubkey","pwd","withFee","withMinFee","lastKnownBlock","MIN_FEE","P_AMOUNT","amount","P_NEW_NAME","P_NEW_TYPE","P_ACCOUNT_PRICE","new_name","new_type","account_price","newName","newType","accountPrice","P_CALLER","OperationHash","OperationHashCoder","KeyPair","Block","WalletPublicKey","publicKeyCoder","opHashCoder","transformRpcResult","caller","action","transformCallback","Promise","resolve","reject","newParams","item","newField","senderItem","receiverItem","changerItem","new_b58_pubkey","encodeToBase58","transformRpcParams","then","response","catch","error","v","bs58","encode","decode","window","PIP_0010","INFLATION_REDUCTION","PIP_0009","RANDOM_HASH","PIP_0011","DEVELOPER_REWARD","MAX_PAYLOAD_LENGTH","sha256","sha512","buffers","hasher","SHA256","update","digest","SHA512","version","Convert","str2bin","bin","hex2bin","int2bin","integer","number2bin","f","Float64Array","base642bin","strlen","charAt","atob","decodingTable","Int8Array","sextet_a","sextet_b","sextet_c","sextet_d","triple","bin2hex","uppercase","bin2str","c2","c3","bin2longbin","longbin","bin2number","bin2base64","url","btoa","encodingTable","octet_a","octet_b","octet_c","lh","rh","clear","ind","litteendian","CHARS_TO_ESCAPE","REGEX_TO_ESCAPE","escapeRegex","ALLOWED_ALL","ALLOWED_START","validate","toStringEscaped","c1","P_MD160","md160","opHash","ignoreBlock","blockResult","P_KEY","P_CURVE","privateKeyLength","ec","P_XL","P_YL","yl","xl","ecdh","validate64Bit","isUnsigned","StringWithoutLength","P_STRING_FIELD","P_SIZE","AccountNumberType","jaysonBrowserClient","fetch","ConnectionError","ResultError","P_CLIENT","host","request","callback","body","headers","Content-Type","text","err","result","message","writable","getNative","func","other","isFunction","isLength","MAX_SAFE_INTEGER","reIsUint","rng","bytesToUuid","rnds","random","ii","P_ORIGINAL","P_MESSAGE","originalFetchError","original","P_CODE","restEach","restSeconds","restCallback","report","executeAllReport","reporter","reports","setTimeout","OperationAction","last_n_operation","rawoperations","withLastNOperation","lastNOperation","withRawOperations","NetProtocol","NetStats","NodeServer","P_READY","P_READY_S","P_STATUS_S","P_PORT","P_LOCKED","P_BLOCKS","P_NODESERVERS","P_NETSTATS","P_VERSION","P_NETPROTOCOL","P_OPENSSL","ready","ready_s","status_s","port","locked","blocks","openssl","netprotocol","netstats","nodeservers","readyS","statusS","P_BRECEIVED","P_SERVERS_T","P_TSERVERS","P_TOTAL","P_BSEND","P_SERVERS","P_CLIENTS","P_ACTIVE","P_TCLIENTS","breceived","servers_t","tservers","bsend","servers","clients","active","tclients","serversT","P_LASTCON","P_ATTEMPTS","P_IP","lastcon","attempts","ip","Sender","Receiver","Changer","P_VALID","P_ERRORS","P_TIME","P_OPBLOCK","P_OPTYPE","P_OPTXT","P_OPHASH","P_OLD_OPHASH","P_SUBTYPE","P_SIGNER_ACCOUNT","P_CHANGERS","P_SENDERS","P_RECEIVERS","Operation","BLOCKCHAIN_REWARD","TRANSACTION","CHANGE_KEY","RECOVER_FUNDS","LIST_FOR_SALE","DELIST","BUY","CHANGE_KEY_ACCOUNT","CHANGE_ACCOUNT_INFO","MULTI_OPERATION","DATA","SUBTYPE_MINER","SUBTYPE_DEVELOPER","SUBTYPE_TX_SENDER","SUBTYPE_TX_RECEIVER","SUBTYPE_TX_BUY_BUYER","SUBTYPE_TX_BUY_TARGET","SUBTYPE_TX_BUY_SELLER","SUBTYPE_CHANGE_KEY","SUBTYPE_RECOVER","SUBTYPE_LIST_PUBLIC","SUBTYPE_LIST_PRIVATE","SUBTYPE_DELIST","SUBTYPE_BUY_BUYER","SUBTYPE_BUY_TARGET","SUBTYPE_BUY_SELLER","SUBTYPE_CHANGE_KEY_SIGNED","SUBTYPE_CHANGE_ACCOUNT_INFO","SUBTYPE_MULTI_GLOBAL","SUBTYPE_MULTI_ACCOUNT_INFO","SUBTYPE_DATA_GLOBAL","SUBTYPE_DATA_SENDER","SUBTYPE_DATA_SIGNER","SUBTYPE_DATA_RECEIVER","valid","errors","time","opblock","optype","optxt","ophash","old_ophash","subtype","signer_account","senders","receivers","changers","opBlock","opType","opTxt","oldOpHash","signerAccount","isBlockchainReward","isTransaction","isChangeKey","isRecoverFunds","isListForSale","isDelist","isBuy","isChangeKeyAccount","isChangeAccountInfo","isMultiOperation","isData","isPending","isZeroFeeError","Client","Executor","Caller","Actions","Errors","RPCCaller","PagedAction","SignOperationAction","SignedMessage","NodeStatus","Connection","rpcHostAddress","addNode","nodes","getAccount","findAccounts","onlyAccountsForSale","exact","minBalance","maxBalance","only_accounts_for_sale","min_balance","max_balance","getWalletAccounts","getWalletAccountsCount","getWalletCoins","getWalletPubKeys","getWalletPubKey","inportPubKey","getBlock","getBlocks","last","getBlockCount","getBlockOperation","getBlockOperations","getAccountOperations","depth","startblock","getPendings","getPendingsCount","decodeOpHash","findOperation","findNOperation","findNOperations","nOperationMin","nOperationMax","n_operation_min","n_operation_max","sendTo","sender","signSendTo","senderPubkey","targetPubkey","sender_pubkey","target_pubkey","changeKey","newPubkey","accountSigner","new_pubkey","account_signer","changeKeys","accounts","signChangeKey","oldPubkey","old_pubkey","listAccountForSale","accountTarget","account_target","signListAccountForSale","signerPubkey","signer_pubkey","DelistAccountForSale","signDelistAccountForSale","buyAccount","buyerAccount","accountToPurchase","buyer_account","account_to_purchase","signBuyAccount","changeAccountInfo","signChangeAccountInfo","signMessage","verifySign","signature","operationsDelete","index","operationsInfo","executeOperations","nodeStatus","encodePubKey","decodePubKey","payloadEncrypt","payloadDecrypt","pwds","getConnections","addNewKey","lock","Boolean","unlock","setWalletPassword","stopNode","startNode","cleanBlackList","nodeIPStats","multiOperationAddOperation","autoNOperation","changesinfo","auto_n_operation","sen","rec","chng","multiOperationSignOffline","accountsAndKeys","accounts_and_keys","multiOperationSignOnline","basex","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it","vch","pbegin","pend","b58","copyProps","SafeBuffer","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","LN2","base_1","hashSize","K","init","H","bufferIndex","count","h0","h1","h2","h3","h4","h5","h6","h7","hash","selftest","cumulative","sha","toBeHashed","gamma0xl","gamma0xh","gamma0l","gamma0h","gamma1xl","gamma1xh","gamma1l","gamma1h","wrl","wrh","wr16l","chl","majl","majh","sig0l","sig0h","krl","t1l","t1h","t2l","h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","PrivateKey","P_PRIVATE_KEY","P_PUBLIC_KEY","privateKey","CompositeType","Repeating","Decissive","Core","Int64","StringWithLength","BytesWithLength","BytesFixedLength","NOperation","OpType","P_REPEAT_LIMIT","P_REPEAT_MARKER","repeatLimit","repeatMarker","counter","decoded","repeatingType","P_SUBTYPE_RESOLVER","P_MARKER_FIELD","markerField","subTypeResolver","PublicKeyType","omitXYLenghts","prefix","suffix","raw","decodeFromBase58","base58","PrivateKeyType","AccountNameType","CurrencyType","P_INT_TYPE","intType","BytesWithFixedLength","OperationHashType","extend","isUndefined","negate","uuid","generateRequest","ClientBrowser","callServer","defaults","reviver","replacer","generator","isBatch","isRaw","hasCallback","JSON","stringify","_parseResponse","responseText","parse","isError","filter","copyObject","createAssigner","keysIn","assignIn","assignValue","baseAssignValue","props","customizer","isNew","newValue","objValue","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","nativeObjectToString","isOwn","unmasked","uid","coreJsData","maskSrcKey","exec","IE_PROTO","baseRest","isIterateeCall","assigner","sources","guard","identity","overRest","setToString","nativeMax","args","otherArgs","thisArg","baseSetToString","shortOut","constant","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","lastCalled","stamp","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","argsTag","stubFalse","freeExports","nodeType","freeModule","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","typedArrayTags","freeProcess","process","types","binding","isPrototype","nativeKeysIn","isProto","Ctor","FUNC_ERROR_TEXT","predicate","getRandomValues","crypto","msCrypto","rnds8","byteToHex","bth","isString","jsonrpc","stringTag","getGlobal","default","Headers","Request","Response","P_DIGEST","P_PUBKEY","P_SIGNATURE","P_RECV","P_TIMEDIFF","P_NETVER_A","P_SECS","P_SERVER","P_NETVER","P_SENT","P_APPVER","recv","timediff","netver_a","secs","server","netver","sent","appver","timeDiff","netVerA","netVer","appVer"],"mappings":"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","file":"@pascalcoin-sbx/json-rpc.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@pascalcoin-sbx/json-rpc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@pascalcoin-sbx/json-rpc\"] = factory();\n\telse\n\t\troot[\"@pascalcoin-sbx/json-rpc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 71);\n","module.exports = {\n  Base58: require('./src/Base58'),\n  BC: require('./src/BC'),\n  Endian: require('./src/Endian'),\n  PascalCoinInfo: require('./src/PascalCoinInfo'),\n  Sha: require('./src/Sha'),\n  Util: require('./src/Util'),\n  Types: require('./src/Types'),\n  Coding: require('./src/Coding')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./Endian');\n\nconst P_BUFFER = Symbol('buffer');\n\n/**\n * A BC value as defined in PascalCoin. In essence its a wrapper for\n * a buffer.\n */\nclass BC {\n  /**\n     * Constructor\n     *\n   * @param {Buffer|Uint8Array} buffer\n     */\n  constructor(buffer) {\n    this[P_BUFFER] = Buffer.from(buffer);\n  }\n\n  /**\n   * Gets a BC instance from the given value. If a string it expects it to be\n   * in hex format.\n   *\n   * This method it called everywhere, so we make sure that\n   *\n   * @param {Buffer|Uint8Array|BC|String} data\n   * @param {String} stringType\n   * @returns {BC}\n   */\n  static from(data, stringType = 'hex') {\n    if (data instanceof BC) {\n      return data;\n    } else if (data instanceof Buffer) {\n      return new BC(data);\n    } else if (data instanceof Uint8Array) {\n      return new BC(data);\n    }\n\n    if (stringType === 'hex') {\n      try {\n        return BC.fromHex(data);\n      } catch (e) {\n        return BC.fromString(data);\n      }\n    }\n\n    return BC.fromString(data);\n  }\n\n  /**\n   * Gets an empty BC.\n   *\n   * @returns {BC}\n   */\n  static empty() {\n    return BC.from([]);\n  }\n\n  /**\n     * Creates a new BC instance from the given hex string.\n     *\n   * @param {string} hex\n   * @param {Boolean} strict\n     * @returns {BC}\n     */\n  static fromHex(hex, strict = true) {\n    if (hex instanceof BC) {\n      return hex;\n    }\n\n    if (hex.length % 2 === 1) {\n      if (strict) {\n        throw new Error('Invalid hex - number of nibbles need to be divideable by 2');\n      } else {\n        hex = `0${hex}`; // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (hex.length > 0 && /^[0-9a-fA-F]+$/.test(hex) === false) {\n      throw new Error('Invalid hex');\n    }\n\n    return new BC(Buffer.from(hex, 'hex'));\n  }\n\n  /**\n     * Creates a new BC instance from the given string.\n     *\n     * @param {string} str\n     * @returns {BC}\n     */\n  static fromString(str) {\n    if (str instanceof BC) {\n      return str;\n    }\n\n    // TODO: UTF8?\n    return new BC(Buffer.from(str, 'utf8'));\n  }\n\n  /**\n     * Gets a new BC from an integer.\n     *\n     * @param {Number} int\n     * @param {Number} nBytes\n     * @returns {BC}\n     */\n  static fromInt(int, nBytes = null) {\n    let hex = parseInt(int, 10).toString(16);\n\n    const instance = BC.fromHex(hex, false);\n\n    if (nBytes !== null && instance.length < nBytes) {\n      return instance.prepend(BC.fromHex('00'.repeat(nBytes - instance.length)));\n    }\n    return instance;\n  }\n\n  /**\n     * Gets the binary presentation of the hexa string.\n     *\n     * @returns {string}\n     */\n  toBinary() {\n    return this[P_BUFFER].toString('binary');\n  }\n\n  /**\n     * Gets the BC as a string.\n     *\n     * @returns {string}\n     * // TODO: UTF8?\n     */\n  toString() {\n    return this[P_BUFFER].toString('utf8');\n  }\n\n  /**\n   * Gets the BC as hex.\n   *\n   * @returns {string}\n   */\n  toHex(lowerCase = false) {\n    if (lowerCase) {\n      return this[P_BUFFER].toString('hex').toLowerCase();\n    }\n\n    return this[P_BUFFER].toString('hex').toUpperCase();\n  }\n\n  /**\n     * Gets the integer value of the BC.\n     *\n     * @return {Number}\n     */\n  toInt() {\n    return parseInt(this.toHex(), 16);\n  }\n\n  /**\n     * Gets the length of BC bytes.\n     *\n     * @returns {number}\n     */\n  get length() {\n    return this[P_BUFFER].length;\n  }\n\n  /**\n     * Gets the length of the parsed BC (the bytes).\n     *\n     * @returns {number}\n     */\n  get hexLength() {\n    return this.length * 2;\n  }\n\n  /**\n     * Gets a copy of the current buffer.\n     *\n     * @returns {Buffer}\n     */\n  get buffer() {\n    return Buffer.from(this[P_BUFFER].toString('hex'), 'hex');\n  }\n\n  /**\n     * Returns a sub-BC defined by the start and end position.\n     *\n     * @param {Number}start\n     * @param {Number} end\n     * @returns {BC}\n     */\n  slice(start, end = null) {\n    if (end === null) {\n      return new BC(this[P_BUFFER].slice(start));\n    }\n\n    return new BC(this[P_BUFFER].slice(start, end));\n  }\n\n  /**\n     * Concatenates one or more BC instances and returns a new instance.\n     *\n     * @param {...BC} bytes\n     * @returns {BC}\n     */\n  static concat(...bytes) {\n    return BC.fromHex(bytes.reduce((prev, curr) => {\n      if (prev instanceof Object) {\n        return `${prev.toHex()}${curr.toHex()}`;\n      }\n      return `${prev}${curr.toHex()}`;\n    }));\n  }\n\n  /**\n   * Appends a single BC instance to the current BC and\n   * returns a new instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bytes\n   * @returns {BC}\n   */\n  append(bytes) {\n    return BC.concat(this, BC.from(bytes));\n  }\n\n  /**\n     * Appends a single BC instance to the current BC and\n     * returns a new instance.\n     *\n     * @param {BC|Buffer|Uint8Array|String} bytes\n     * @returns {BC}\n     */\n  prepend(bytes) {\n    return BC.concat(BC.from(bytes), this);\n  }\n\n  /**\n   * Gets a value indicating the current bc equals the given bc.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @returns {boolean}\n   */\n  equals(bc) {\n    return Buffer.compare(BC.from(bc).buffer, this.buffer) === 0;\n  }\n\n  /**\n   * Reads an 8 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @returns {Number}\n   */\n  readInt8(offset, unsigned = true) {\n    return this[P_BUFFER][unsigned ? 'readUInt8' : 'readInt8'](offset);\n  }\n\n  /**\n   * Reads a 16 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt16(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int16${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Reads a 32 bit integer value from the bc from the given offset.\n   *\n   * @param {Number} offset\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {Number}\n   */\n  readInt32(offset, unsigned = true, endian = Endian.detect()) {\n    const method = `read${unsigned ? 'U' : ''}Int32${endian}`;\n\n    return this[P_BUFFER][method](offset);\n  }\n\n  /**\n   * Creates an 8 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @returns {BC}\n   */\n  static fromInt8(value, unsigned = true) {\n    const method = `write${unsigned ? 'U' : ''}Int8`;\n    const buf = Buffer.allocUnsafe(1);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 16 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt16(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int16${endian}`;\n    const buf = Buffer.allocUnsafe(2);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Creates a 32 bit integer BC.\n   *\n   * @param {Number} value\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   * @returns {BC}\n   */\n  static fromInt32(value, unsigned = true, endian = Endian.detect()) {\n    const method = `write${unsigned ? 'U' : ''}Int32${endian}`;\n    const buf = Buffer.allocUnsafe(4);\n\n    buf[method](value);\n    return new BC(buf);\n  }\n\n  /**\n   * Small helper to split a byte collection.\n   *\n   * @param {Number} size\n   * @return {BC[]}\n   */\n  split(size) {\n    let pos = 0;\n\n    let splitted = [];\n\n    for (; pos < this.length; pos += size) {\n      splitted.push(this.slice(pos, pos + size));\n    }\n\n    return splitted;\n  }\n\n}\n\nmodule.exports = BC;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_INITIALIZATION_DATA = Symbol('__initialization_data');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  /**\n     * Constructor.\n     *\n   * @param {Object} initializationData\n     */\n  constructor(initializationData) {\n    if (new.target === Abstract) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n\n    this[P_INITIALIZATION_DATA] = initializationData;\n  }\n\n  /**\n     * Gets the initialization data. This should normally not be used at all but\n     * in case there are new fields which are not implemented in the library yet,\n     * the user will still have access to it.\n     *\n     * @returns {Object}\n     */\n  get __initializationData() {\n    return this[P_INITIALIZATION_DATA];\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nlet detected = null;\n\nclass Endian {\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get BIG_ENDIAN() {\n    return 'BE';\n  }\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get LITTLE_ENDIAN() {\n    return 'LE';\n  }\n\n  /**\n   * Detects the systems endianness.\n   *\n   * @returns {string}\n   */\n  static detect() {\n    if (detected === null) {\n      const b = new ArrayBuffer(4);\n      const a = new Uint32Array(b);\n      const c = new Uint8Array(b);\n\n      a[0] = 0xdeadbeef;\n      if (c[0] === 0xef) {\n        detected = Endian.LITTLE_ENDIAN;\n      }\n      if (c[0] === 0xde) {\n        detected = Endian.BIG_ENDIAN;\n      }\n    }\n\n    return detected;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses little endian.\n   *\n   * @returns {boolean}\n   */\n  static isLittleEndian() {\n    return Endian.detect() === Endian.LITTLE_ENDIAN;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses big endian.\n   *\n   * @returns {boolean}\n   */\n  static isBigEndian() {\n    return Endian.detect() === Endian.BIG_ENDIAN;\n  }\n}\n\nmodule.exports = Endian;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ID = Symbol('id');\nconst P_FIXED_VALUE = Symbol('fixed_value');\nconst P_HAS_FIXED_VALUE = Symbol('has_fixed_value');\nconst P_DESCRIPTION = Symbol('description');\n\n/**\n * Abstract field type to encode and decode values. Abstracts encodeToBytes and decodeFromBytes as\n * basic implementations but in fact it can be anything.\n */\nclass AbstractType {\n  /**\n   * Constructor.\n   *\n   * @param {string|null} id\n   */\n  constructor(id = null) {\n    this[P_ID] = id;\n    this[P_HAS_FIXED_VALUE] = false;\n  }\n\n  /**\n   * Gets the field ident.\n   *\n   * @returns {String}\n   */\n  get id() {\n    return this[P_ID];\n  }\n\n  /**\n   * Gets a value indicating whether the field type has a fixed value.\n   *\n   * @returns {Boolean}\n   */\n  get hasFixedValue() {\n    return this[P_HAS_FIXED_VALUE];\n  }\n\n  /**\n   * Gets the fixed value.\n   *\n   * @returns {*}\n   */\n  get fixedValue() {\n    return this[P_FIXED_VALUE];\n  }\n\n  /**\n   * Gets the encoded size of the type.\n   *\n   * @return {Number}\n   */\n  get encodedSize() {\n    throw new Error('Encoded size getter not implemented');\n  }\n\n  /**\n   * Decodes a value using the rules defined in the method from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    throw new Error('Missing implementation for decodeFromBytes.');\n  }\n\n  /**\n   * Returns the encoded bytes for the given value.\n   *\n   * @param {*} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    throw new Error('Missing implementation for encodeToBytes.');\n  }\n\n  /**\n   * Sets a fixed value.\n   *\n   * @param {*} value\n   * @returns {AbstractType}\n   */\n  withFixedValue(value) {\n    this[P_FIXED_VALUE] = value;\n    this[P_HAS_FIXED_VALUE] = true;\n    return this;\n  }\n\n  /**\n   * Sets the description and returns the type or gets the description itself.\n   *\n   * @param {String} description\n   * @returns {AbstractType|String}\n   */\n  description(description = null) {\n    if (description === null) {\n      return this[P_DESCRIPTION];\n    }\n\n    if (this[P_DESCRIPTION] === undefined) {\n      this[P_DESCRIPTION] = [];\n    }\n    this[P_DESCRIPTION].push(description);\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the type can be decoded. It is\n   * not possible in some circumstances.\n   *\n   * @return {boolean}\n   */\n  get canDecode() {\n    return true;\n  }\n}\n\nmodule.exports = AbstractType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for 32bit int values.\n */\nclass Int32 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int32', unsigned, endian);\n    this.description('4byte 32bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 4;\n  }\n\n  /**\n   * Reads the given int32 value.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt32(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Appends the given Int32 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt32(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int32;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SUBTYPES = Symbol('subtypes');\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A Type that itself is made up of multiple other (sub-)types.\n */\nclass CompositeType extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id) {\n    super(id || 'composite_type');\n    super.description('A type that itself is made up of multiple other types.');\n    this[P_SUBTYPES] = [];\n  }\n\n  /**\n   * Gets all subtypes.\n   *\n   * @returns {Array}\n   */\n  get subTypes() {\n    return this[P_SUBTYPES];\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Adds a new field (type) definition.\n   *\n   * @param {AbstractType} field\n   */\n  addSubType(field) {\n    this[P_SUBTYPES].push(field);\n    return this;\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {*}\n   */\n  decodeFromBytes(bc, options = { toArray: false }, all = null) {\n    if (this.canDecode === false) {\n      throw new Error('This type cannot be decoded.');\n    }\n    const obj = {};\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    this.subTypes.forEach((subType) => {\n      obj[subType.id] = subType.decodeFromBytes(bc.slice(offset), options, obj);\n      offset += subType.encodedSize;\n    });\n    this[P_SIZE_ENCODED] = offset;\n\n    return options.toArray ? Object.values(obj) : obj;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array|*} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray) {\n    let bc = BC.empty();\n\n    this.subTypes.forEach((subType, idx) => {\n      let subTypeValue;\n\n      if (subType.hasFixedValue) {\n        subTypeValue = subType.fixedValue;\n      } else {\n        subTypeValue = Array.isArray(objOrArray) ? objOrArray[idx] : objOrArray[subType.id];\n      }\n\n      // we will use the first available\n      bc = bc.append(subType.encodeToBytes(subTypeValue, objOrArray));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n}\n\nmodule.exports = CompositeType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst P_ENDIAN = Symbol('endian');\nconst P_UNSIGNED = Symbol('unsigned');\n\n/**\n * Abstract integer field type.\n */\nclass AbstractInt extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id);\n    this[P_UNSIGNED] = unsigned;\n    this[P_ENDIAN] = endian;\n  }\n\n  /**\n   * Gets the endianness.\n   *\n   * @returns {String}\n   */\n  get endian() {\n    return this[P_ENDIAN];\n  }\n\n  /**\n   * Gets a value indicating whether the value is an unsigned integer.\n   *\n   * @returns {Boolean}\n   */\n  get unsigned() {\n    return this[P_UNSIGNED];\n  }\n}\n\nmodule.exports = AbstractInt;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\n\n/**\n * Field type for a 16bit int value.\n */\nclass Int16 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned, endian) {\n    super(id || 'int16', unsigned, endian);\n    this.description('2byte 16bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 2;\n  }\n\n  /**\n   * Decodes the int16 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt16(0, this.unsigned, this.endian);\n  }\n\n  /**\n   * Encodes the given Int16 value to a byte sequence.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt16(value, this.unsigned, this.endian);\n  }\n}\n\nmodule.exports = Int16;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\n/**\n * Fields type for an 8Bit int value.\n */\nclass Int8 extends AbstractInt {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   */\n  constructor(id, unsigned) {\n    super(id || 'int8', unsigned, Endian.LITTLE_ENDIAN);\n    this.description('1byte 8bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 1;\n  }\n\n  /**\n   * Reads the int8 value from the given bytes.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {Number|*}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).readInt8(0, this.unsigned);\n  }\n\n  /**\n   * Encodes the given int8 value.\n   *\n   * @param {Number} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    return BC.fromInt8(value, this.unsigned);\n  }\n}\n\nmodule.exports = Int8;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PARAMS = Symbol('params');\nconst P_METHOD = Symbol('method');\nconst P_EXECUTOR = Symbol('executor');\nconst P_DESTINATION_TYPE = Symbol('destination_type');\nconst P_RETURNS_ARRAY = Symbol('returns_array');\n\n/**\n * A basic action that holds the rpc method and its parameters.\n */\nclass BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    this[P_METHOD] = method;\n    this[P_PARAMS] = params;\n    this[P_EXECUTOR] = executor;\n    this[P_DESTINATION_TYPE] = DestinationType;\n    this[P_RETURNS_ARRAY] = returnsArray;\n  }\n\n  /**\n   * Gets the destination type.\n   *\n   * @returns {*}\n   */\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  /**\n   * Gets a value indicating whether the action returns an array.\n   *\n   * @returns {Boolean}\n   */\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Gets the params for the rpc call.\n     *\n   * @returns {Object}\n     */\n  get params() {\n    return this[P_PARAMS];\n  }\n\n  /**\n   * Changes a single param of the params object.\n   *\n   * @param {String} name\n   * @param {*} value\n   * @returns {BaseAction}\n   */\n  changeParam(name, value) {\n    this[P_PARAMS][name] = value;\n    return this;\n  }\n\n  /**\n     * Gets the method.\n     *\n     * @returns {*}\n     */\n  get method() {\n    return this[P_METHOD];\n  }\n\n  get destinationType() {\n    return this[P_DESTINATION_TYPE];\n  }\n\n  get returnsArray() {\n    return this[P_RETURNS_ARRAY];\n  }\n\n  /**\n     * Executes the current action and returns the raw result.\n     *\n     * @returns {Promise}\n     */\n  async execute() {\n    return this[P_EXECUTOR].execute(this);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = BaseAction;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\n\nconst P_VALUE = Symbol('value');\n\nfunction toFixed(x) {\n  let base = new BN(10).pow(new BN(4));\n  let dm = x.divmod(base);\n\n  let mod = dm.mod.toString(10, 4);\n  let m = dm.div.toString();\n\n  let isNegative = false;\n\n  if (x.toString().substr(0, 1) === '-') {\n    if (m.substr(0, 1) === '-') {\n      m = m.substr(1);\n    }\n    if (mod.substr(0, 1) === '-') {\n      mod = mod.substr(1);\n    }\n    isNegative = true;\n  }\n\n  return `${isNegative ? '-' : ''}${m}.${mod}`;\n}\n\n/**\n * A simple wrapper around bignumber for the pascal currency and\n * basic math functions.\n */\nclass Currency {\n  /**\n     * Creates a new Currency instance.\n     *\n     * @param {Number|String|BigNumber|Currency} value\n     */\n  constructor(value) {\n    let pasc = value;\n\n    if (pasc instanceof Currency) {\n      this[P_VALUE] = pasc.value;\n      return;\n    }\n\n    if (BN.isBN(pasc)) {\n      this[P_VALUE] = pasc;\n      return;\n    }\n\n    pasc = pasc.toString();\n    pasc = pasc.split(',').join(''); // remove commas\n    // now split the '.'\n\n    const ten = new BN(10);\n    const base = ten.pow(new BN(4));\n\n    // Is it negative?\n    let negative = (pasc.substring(0, 1) === '-');\n\n    if (negative) {\n      pasc = pasc.substring(1);\n    }\n\n    if (pasc === '.') {\n      throw new Error(\n        `Invalid value ${pasc} cannot be converted to` +\n          ' base unit with 4 decimals.');\n    }\n\n    // Split it into a whole and fractional part\n    let comps = pasc.split('.');\n\n    if (comps.length > 2) { throw new Error('Too many decimal points'); }\n\n    let whole = comps[0], fraction = comps[1];\n\n    if (!whole) { whole = '0'; }\n    if (!fraction) { fraction = '0'; }\n    if (fraction.length > 4) {\n      throw new Error('Too many decimal places');\n    }\n\n    while (fraction.length < 4) {\n      fraction += '0';\n    }\n\n    whole = new BN(whole);\n    fraction = new BN(fraction);\n    let molina = (whole.mul(base)).add(fraction);\n\n    if (negative) {\n      molina = molina.neg();\n    }\n\n    this[P_VALUE] = new BN(molina.toString(10), 10);\n  }\n\n  static fromMolina(molina) {\n    return new Currency(\n      new BN(molina.toString())\n    );\n  }\n\n  /**\n     * Gets the BigNumber instance.\n     *\n     * @returns {BigNumber}\n     */\n  get value() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {string}\n     */\n  toString() {\n    return toFixed(this[P_VALUE]);\n  }\n\n  /**\n   * Gets a value indicating that the current value has more decimals than\n   * allowed.\n   */\n  isVague() {\n    return this.toStringOpt(5) !== this.toStringOpt(4);\n  }\n\n  /**\n   * Gets an optimized pascal value with less zeros as possible.\n   *\n   * @returns {string}\n   */\n  toStringOpt(decimals = 4) {\n    return toFixed(this[P_VALUE])\n      .replace(new RegExp('[0]+$'), '')\n      .replace(new RegExp('[\\.]+$'), '');\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {Number}\n     */\n  toMolina() {\n    return this[P_VALUE].toString();\n  }\n\n  /**\n   * Adds the given value to the current value and returns a **new**\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} addValue\n   * @returns {Currency}\n   */\n  add(addValue) {\n    return new Currency(\n      this.value.add(new Currency(addValue).value),\n    );\n  }\n\n  /**\n   * Adds the given value to the current value and returns a **new**\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} addValue\n   * @returns {Currency}\n   */\n  mul(val) {\n    return Currency.fromMolina(\n      this.value.mul(new BN(val))\n    );\n  }\n\n  /**\n     * Subtracts the given value from the current value and returns a\n     * **new** value.\n     *\n     * @param {Currency} subValue\n     * @returns {Currency}\n     */\n  sub(subValue) {\n    return new Currency(\n      this.value.sub(new Currency(subValue).value)\n    );\n  }\n\n  /**\n     * Gets a positive variant of the value. If the value is already\n     * positive, the current instance will be returned, else a new\n     * instance.\n     *\n     * @returns {Currency}\n     */\n  toPositive() {\n    if (this[P_VALUE].isNeg() === true) {\n      return new Currency(\n        this[P_VALUE].neg(),\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the given value is equal to the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  eq(value) {\n    return this[P_VALUE].eq(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gt(value) {\n    return this[P_VALUE].gt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lt(value) {\n    return this[P_VALUE].lt(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lteq(value) {\n    return this[P_VALUE].lte(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gteq(value) {\n    return this[P_VALUE].gte(new Currency(value).value);\n  }\n\n  get bn() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the serialized version of this instance.\n     *\n     * @returns {Object}\n     */\n  serialize() {\n    return {\n      pascal: this.toStringOpt(),\n      molina: this.toMolina()\n    };\n  }\n}\n\nmodule.exports = Currency;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst PascalCoinInfo = require('../PascalCoinInfo');\n\nconst P_ACCOUNT = Symbol('account');\nconst P_CHECKSUM = Symbol('checksum');\nconst P_CREATED_IN_BLOCK = Symbol('created_in_block');\nconst P_IS_FOUNDATION_REWARD = Symbol('is_foundation_reward');\n\n/**\n * A simple type that holds an account number in a reliable way.\n */\nclass AccountNumber {\n  /**\n   * Creates a new AccountNumber instance, either from an account string\n   * without checksum (which can be a number), an account string with checksum\n   * or another account instance.\n   *\n   * @param {String|Number|AccountNumber|Account} account\n   */\n  constructor(account) {\n    if (account instanceof AccountNumber) {\n      this[P_ACCOUNT] = account[P_ACCOUNT];\n      this[P_CHECKSUM] = account[P_CHECKSUM];\n    } else if (typeof account === 'string') {\n      const splitted = account.split('-');\n\n      splitted.map(s => {\n        if (isNaN(s) || parseInt(s, 10).toString() !== s) {\n          throw new Error(`Invalid account number part: ${s}`);\n        }\n      });\n\n      if (splitted.length === 2) {\n        this[P_ACCOUNT] = parseInt(splitted[0], 10);\n        this[P_CHECKSUM] = parseInt(splitted[1], 10);\n        if (this[P_CHECKSUM] !== AccountNumber.calculateChecksum(this[P_ACCOUNT])) {\n          throw new Error(`Invalid checksum for account ${this[P_ACCOUNT]}`);\n        }\n      } else {\n        this[P_ACCOUNT] = parseInt(account, 10);\n        this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n      }\n    } else if (typeof account === 'number') {\n      this[P_ACCOUNT] = account;\n      this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n    } else {\n      throw new Error(`Unable to parse Account: ${account.toString()}`);\n    }\n\n    this[P_CREATED_IN_BLOCK] = Math.floor(this[P_ACCOUNT] / 5);\n    this[P_IS_FOUNDATION_REWARD] = PascalCoinInfo.isDeveloperReward(this[P_CREATED_IN_BLOCK]) &&\n        this[P_ACCOUNT] % 5 === 4;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @returns {Number}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the checksum of the account.\n   *\n   * @returns {Number}\n   */\n  get checksum() {\n    return this[P_CHECKSUM];\n  }\n\n  /**\n   * Gets the block number the account was created in.\n   *\n   * @returns {Number}\n   */\n  get createdInBlock() {\n    return this[P_CREATED_IN_BLOCK];\n  }\n\n  /**\n   * Gets a value indicating whether the foundation got this account initially.\n   *\n   * @returns {Boolean}\n   */\n  get isFoundationReward() {\n    return this[P_IS_FOUNDATION_REWARD];\n  }\n\n  /**\n   * Gets the account string.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.account}-${this.checksum}`;\n  }\n\n  /**\n   * Gets a value indicating whether the given account equals the current\n   * account.\n   *\n   * @param {AccountNumber|String|Number} accountNumber\n   * @returns {boolean}\n   */\n  equals(accountNumber) {\n    return (accountNumber !== null && this.toString() === accountNumber.toString());\n  }\n\n  /**\n   * Calculates the checksum for the given account number.\n   *\n   * @param {Number} account\n   * @returns {Number}\n   */\n  static calculateChecksum(account) {\n    return ((account * 101) % 89) + 10;\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * The list of available curves in pascalcoin.\n */\nconst CURVES = {\n  0: 'empty',\n  714: 'secp256k1',\n  715: 'p384',\n  729: 'sect283k1',\n  716: 'p521'\n};\n\nconst XYL_PUBKEYS = {\n  714: {x: 32, y: 32},\n  715: {x: 48, y: 48},\n  716: {x: 66, y: 66},\n  729: {x: 36, y: 36},\n  0: {x: 0, y: 0}\n};\n\nconst L_PRIVKEYS = {\n  714: 32,\n  715: 48,\n  716: 66,\n  729: 36\n};\n\nconst ID = Symbol('id');\nconst NAME = Symbol('name');\n\n/**\n * Simple elliptic curve representation of keys in pascalcoin.\n */\nclass Curve {\n\n  /**\n   * Gets the curve name of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECP256K1() {\n    return 'secp256k1';\n  }\n\n  /**\n   * Gets the curve name of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P384() {\n    return 'p384';\n  }\n\n  /**\n   * Gets the curve name of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECT283K1() {\n    return 'sect283k1';\n  }\n\n  /**\n   * Gets the curve name of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P521() {\n    return 'p521';\n  }\n\n  /**\n   * Gets the curve id of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECP256K1() {\n    return 714;\n  }\n\n  /**\n   * Gets the curve id of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P384() {\n    return 715;\n  }\n\n  /**\n   * Gets the curve id of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECT283K1() {\n    return 729;\n  }\n\n  /**\n   * Gets the curve id of the p521 curve.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get CI_P521() {\n    return 716;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Number|String} curve\n   */\n  constructor(curve) {\n    if (typeof curve === 'number') {\n      if (CURVES[curve] === undefined) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[ID] = curve;\n      this[NAME] = CURVES[curve];\n    } else {\n      if (Object.values(CURVES).indexOf(curve.toString()) === -1) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[NAME] = curve.toString();\n      this[ID] = parseInt(Object.keys(CURVES)[Object.values(CURVES).indexOf(this[NAME])], 10);\n    }\n  }\n\n  /**\n     * Gets the id of the curve.\n     *\n     * @returns {Number}\n     */\n  get id() {\n    return this[ID];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[NAME];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  toString() {\n    return this.name;\n  }\n\n  /**\n     * Gets the default curve.\n     *\n     * @returns {Curve}\n     */\n  static getDefaultCurve() {\n    return new Curve(Curve.CI_SECP256K1);\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  xylPublicKey(xOrY) {\n    return XYL_PUBKEYS[this.id][xOrY];\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  lPrivateKey() {\n    return L_PRIVKEYS[this.id];\n  }\n\n  /**\n   * Gets a value indicating whether the key is supported for signing /\n   * generation etc.\n   *\n   * @returns {boolean}\n   */\n  get supported() {\n    return this.id !== Curve.CI_SECT283K1 && this.id !== 0;\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\nconst BytesWithoutLength = require('./BytesWithoutLength');\nconst Endian = require('./../../Endian');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_BYTES_FIELD = Symbol('bytes_field');\nconst P_HAS_LEADING_ZB = Symbol('has_leading_zerobyte');\n\n/**\n * A field type to write dynamic content in form of bytes (prepends the length).\n */\nclass BytesWithLength extends AbstractType {\n  /**\n   * Constructor\n   *\n   * @param {string} id\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize = 1, lengthId = 'length', lengthDesc = null,\n    endian = Endian.LITTLE_ENDIAN, hasLeadingZeroByte = false) {\n    super(id || `bytes_with_length_${byteSize * 8}`);\n    this.description('Bytes with variable size prepended');\n    this[P_BYTES_FIELD] = new BytesWithoutLength('value');\n    this[P_HAS_LEADING_ZB] = hasLeadingZeroByte;\n\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8(lengthId, true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16(lengthId, true, endian);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32(lengthId, true, endian);\n        break;\n      default:\n        throw new Error('ByteSize must be either 1, 2 or 4');\n    }\n\n    if (lengthDesc !== null) {\n      this[P_LENGTH_FIELD].description(lengthDesc);\n    }\n\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].encodedSize +\n      this[P_LENGTH_FIELD].decodeFromBytes(BC.from(bc)) +\n      (+this[P_HAS_LEADING_ZB]);\n    return this[P_BYTES_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize + (+this[P_HAS_LEADING_ZB]),\n        this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    this[P_SIZE_ENCODED] = value.length + this[P_LENGTH_FIELD].encodedSize;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(\n      this[P_SIZE_ENCODED] - this[P_LENGTH_FIELD].encodedSize\n    );\n\n    return bc.append(this[P_BYTES_FIELD].encodeToBytes(value));\n  }\n\n  get lengthField() {\n    return this[P_LENGTH_FIELD];\n  }\n}\n\nmodule.exports = BytesWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write bytes without prepending the length. This cannot be decoded in some circumstances.\n */\nclass BytesWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'bytes_without_length');\n    this.description('Bytes without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * In fact this does nothing other than updating the internal size.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value);\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n}\n\nmodule.exports = BytesWithoutLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CurveType = require('./../../../Types/Keys/Curve');\nconst Endian = require('./../../../Endian');\nconst Int16 = require('./../../Core/Int16');\n\n/**\n * A special pascal type that can en/decode a curve id.\n */\nclass Curve extends Int16 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'curve', true, Endian.LITTLE_ENDIAN);\n    this.description('Key curve id');\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurveType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new CurveType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurveType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.id);\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BN = require('bn.js');\nconst Abstract = require('./Abstract');\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_BLOCK = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_REWARD = Symbol('reward');\nconst P_FEE = Symbol('fee');\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('ver_a');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_TARGET = Symbol('target');\nconst P_NONCE = Symbol('nonce');\nconst P_PAYLOAD = Symbol('payload');\nconst P_SBH = Symbol('sbh');\nconst P_OPH = Symbol('oph');\nconst P_POW = Symbol('pow');\nconst P_HASHRATEKHS = Symbol('hashratekhs');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * Represents a block.\n */\nclass Block extends Abstract {\n  /**\n   * Creates a new instance of the Block class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_REWARD] = new Currency(data.reward);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_TARGET] = new BN(data.target.toString(), 10);\n    this[P_NONCE] = new BN(data.nonce.toString(), 10);\n    this[P_PAYLOAD] = data.payload;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_OPH] = BC.fromHex(data.oph);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_HASHRATEKHS] = new BN(data.hashratekhs.toString(), 10);\n    this[P_MATURATION] = parseInt(data.maturation, 10);\n    this[P_OPERATIONS] = null;\n    if (data.operations !== undefined) {\n      this[P_OPERATIONS] = parseInt(data.operations, 10);\n    }\n  }\n\n  /**\n   * Gets the number of a block.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the public key of the miner of the block.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the reward.\n   *\n   * @returns {Currency}\n   */\n  get reward() {\n    return this[P_REWARD];\n  }\n\n  /**\n   * Gets the collective fee awarded to the miner.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the version of the protocol.\n   *\n   * @returns {Number}\n   */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n   * Gets the protocol version of the miner.\n   *\n   * @returns {Number}\n   */\n  get verA() {\n    return this[P_VER_A];\n  }\n\n  /**\n   * Gets the UTC timestamp of the block.\n   *\n   * @returns {Number}\n   */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n   * Gets the used target.\n   *\n   * @returns {BigNumber}\n   */\n  get target() {\n    return this[P_TARGET];\n  }\n\n  /**\n   * Gets the calculated nonce.\n   *\n   * @returns {BigNumber}\n   */\n  get nonce() {\n    return this[P_NONCE];\n  }\n\n  /**\n   * Gets the payload of the miner.\n   *\n   * @returns {String}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the safebox hash.\n   *\n   * @returns {BC}\n   */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {BC}\n   */\n  get oph() {\n    return this[P_OPH];\n  }\n\n  /**\n   * Gets the POW.\n   *\n   * @returns {BC}\n   */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n   * Gets the hashrate in kh/s.\n   *\n   * @returns {BigNumber}\n   */\n  get hashratekhs() {\n    return this[P_HASHRATEKHS];\n  }\n\n  /**\n   * Gets the age of the block in terms of blocks.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the number of operations in the block.\n   *\n   * @returns {Number}\n   */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n   * Gets the list of accounts created.\n   *\n   * @returns {AccountNumber[]}\n   */\n  get createdAccounts() {\n    return [\n      new AccountNumber(this[P_BLOCK] * 5),\n      new AccountNumber(this[P_BLOCK] * 5 + 1),\n      new AccountNumber(this[P_BLOCK] * 5 + 2),\n      new AccountNumber(this[P_BLOCK] * 5 + 3),\n      new AccountNumber(this[P_BLOCK] * 5 + 4)\n    ];\n  }\n}\n\nmodule.exports = Block;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Curve = require('@pascalcoin-sbx/common').Types.Keys.Curve;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst P_NAME = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('publicKey');\nconst P_CAN_USE = Symbol('can_user');\nconst P_B58_PUBKEY = Symbol('b58_pubkey');\nconst P_EC_NID = Symbol('ec_nid');\nconst P_X = Symbol('x');\nconst P_Y = Symbol('y');\n\n/**\n * Holds information about a public key in the wallet (fetched via rpc).\n */\nclass WalletPublicKey extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_NAME] = data.name;\n    this[P_ENC_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.publicKey));\n    this[P_CAN_USE] = !!data.can_use;\n\n    this[P_B58_PUBKEY] = null;\n    this[P_EC_NID] = null;\n    this[P_X] = null;\n    this[P_Y] = null;\n    if (data.b58_pubkey !== undefined) {\n      this[P_B58_PUBKEY] = data.b58_pubkey;\n    }\n    if (data.ec_nid !== undefined) {\n      this[P_EC_NID] = new Curve(parseInt(data.ec_nid, 10));\n    }\n    if (data.x !== undefined) {\n      this[P_X] = BC.fromHex(data.x);\n    }\n    if (data.y !== undefined) {\n      this[P_Y] = BC.fromHex(data.y);\n    }\n  }\n\n  /**\n     * Gets the name of the key.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {BC}\n     */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n     * Gets a flag indicating whether the key can be used.\n     *\n     * @returns {Boolean}\n     */\n  get canUse() {\n    return this[P_CAN_USE];\n  }\n\n  /**\n     * Gets the base58 public key if returned by the node.\n     *\n     * @returns {String|null}\n     */\n  get base58PublicKey() {\n    return this[P_B58_PUBKEY];\n  }\n\n  /**\n     * Gets the used curve if returned by the node.\n     *\n     * @returns {Curve|null}\n     */\n  get ecNid() {\n    return this[P_EC_NID];\n  }\n\n  /**\n     * Gets the X value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the Y value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get y() {\n    return this[P_Y];\n  }\n}\n\nmodule.exports = WalletPublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_BALANCE = Symbol('balance');\nconst P_N_OPERATION = Symbol('n_operation');\nconst P_UPDATED_B = Symbol('updated_b');\nconst P_STATE = Symbol('state');\nconst P_NAME = Symbol('name');\nconst P_TYPE = Symbol('type');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\nconst P_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller_account');\nconst P_PRIVATE_SALE = Symbol('private_sale');\nconst P_NEW_ENC_PUBKEY = Symbol('new_enc_pubkey');\n\n/**\n * Represents an account.\n */\nclass Account extends Abstract {\n  /**\n   * The state of an account when it is listed for sale.\n   *\n   * @returns {string}\n   */\n  static get STATE_LISTED() {\n    return 'listed';\n  }\n\n  /**\n   * The state of an account when it is not listed.\n   *\n   * @returns {string}\n   */\n  static get STATE_NORMAL() {\n    return 'normal';\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    this[P_BALANCE] = new Currency(data.balance);\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_UPDATED_B] = parseInt(data.updated_b, 10);\n\n    if (data.state !== Account.STATE_NORMAL && data.state !== Account.STATE_LISTED) {\n      throw new Error('Invalid account state.');\n    }\n\n    this[P_STATE] = data.state;\n    this[P_NAME] = new AccountName(data.name);\n    this[P_TYPE] = data.type;\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    // when not listed\n    this[P_PRICE] = null;\n    this[P_SELLER_ACCOUNT] = null;\n    this[P_PRIVATE_SALE] = null;\n    this[P_NEW_ENC_PUBKEY] = null;\n\n    if (this[P_STATE] === Account.STATE_LISTED) {\n      this[P_PRICE] = new Currency(data.price);\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n      this[P_PRIVATE_SALE] = data.private_sale;\n      if (data.new_enc_pubkey !== '000000000000' && data.new_enc_pubkey !== undefined) {\n        this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n      }\n    }\n  }\n\n  /**\n   * Gets the account number of the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the public key of the account.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Currency}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the number of operations of this account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the block number when the account was last updated.\n   *\n   * @returns {Number}\n   */\n  get updatedB() {\n    return this[P_UPDATED_B];\n  }\n\n  /**\n   * Gets the state of the account (normal, listed).\n   *\n   * @returns {String}\n   */\n  get state() {\n    return this[P_STATE];\n  }\n\n  /**\n   * Gets the name of the account.\n   *\n   * @returns {AccountName}\n   */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n   * Gets the type of the account.\n   *\n   * @returns {Number}\n   */\n  get type() {\n    return this[P_TYPE];\n  }\n\n  /**\n   * Gets the block number until the account is locked when it's listed for\n   * sale.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the price of the account in case its listed.\n   *\n   * @returns {Currency|null}\n   */\n  get price() {\n    return this[P_PRICE];\n  }\n\n  /**\n   * Gets the account of the seller in case the account is listed for sale.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets a flag indicating whether the account is for sale. Attention:\n   * null and false = not for sale.\n   *\n   * @returns {boolean}\n   */\n  get privateSale() {\n    return !!this[P_PRIVATE_SALE];\n  }\n\n  /**\n   * Gets the new public key in case of a escrow.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets a value indicating whether the account is for sale.\n   *\n   * @returns {boolean}\n   */\n  isForSale() {\n    return this[P_STATE] === Account.STATE_LISTED;\n  }\n}\n\nmodule.exports = Account;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\nconst PascalCoinInfo = require('@pascalcoin-sbx/common').PascalCoinInfo;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\n\n/**\n * An object that holds infos about an operation action. It extends the\n * BaseAction functionality by methods which are useful for operations.\n */\nclass OperationAction extends BaseAction {\n  /**\n   * Constructor\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.fee = new Currency(0);\n    this.params.payload = '';\n    this.params.payload_method = 'none';\n  }\n\n  /**\n     * Sets the payload of the action.\n     *\n     * @param {String|BC} payload\n     * @param {String} payloadMethod\n   * @param {String} password\n   * @param {PublicKey} pubkey\n     * @returns {OperationAction}\n     */\n  withPayload(payload, payloadMethod = 'none', password = null, pubkey = null) {\n    this.params.payload = payload;\n    this.params.payload_method = payloadMethod;\n    if (password !== null) {\n      this.params.pwd = password;\n    }\n    if (pubkey !== null) {\n      this.params.pubkey = pubkey;\n    }\n\n    return this;\n  }\n\n  /**\n     * Sets the fee.\n     *\n     * @param {Number|Currency} fee\n     * @returns {OperationAction}\n     */\n  withFee(fee) {\n    this.params.fee = new Currency(fee);\n    return this;\n  }\n\n  /**\n   * Sets the fee to the minimum.\n   *\n   * @returns {OperationAction}\n   */\n  withMinFee(lastKnownBlock = null) {\n    this.params.fee = PascalCoinInfo.MIN_FEE(lastKnownBlock);\n    return this;\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return super.isValid();\n  }\n}\n\nmodule.exports = OperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Represents a sender in an operation.\n */\nclass Sender extends Abstract {\n  /**\n   * Creates a new instance of the Sender class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the n operation of thwe sender.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the account of the sender.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Sender;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\n\n/**\n * Represents a receiver in an operation.\n */\nclass Receiver extends Abstract {\n  /**\n   * Creates a new instance of the Receiver class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the account of the receiver.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Receiver;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst pkCoder = new PublicKeyCoder();\n\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_NEW_ENC_PUBKEY = Symbol('newPublicKey');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\nconst P_SELLER_ACCOUNT = Symbol('sellerAccount');\nconst P_ACCOUNT_PRICE = Symbol('account_price');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('lockedUntilBlock');\nconst P_FEE = Symbol('fee');\n\n/**\n * Represents a Changer in an operation.\n */\nclass Changer extends Abstract {\n  /**\n   * Creates a new instance of the Changer class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_N_OPERATION] = null;\n    if (data.n_operation !== undefined) {\n      this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    }\n\n    this[P_NEW_ENC_PUBKEY] = null;\n    if (data.new_enc_pubkey !== undefined) {\n      this[P_NEW_ENC_PUBKEY] = pkCoder.decodeFromBytes(BC.fromHex(data.new_enc_pubkey));\n    }\n\n    this[P_NEW_NAME] = null;\n    if (data.new_name !== undefined) {\n      this[P_NEW_NAME] = new AccountName(data.new_name);\n    }\n\n    this[P_NEW_TYPE] = null;\n    if (data.new_type !== undefined) {\n      this[P_NEW_TYPE] = data.new_type;\n    }\n\n    this[P_SELLER_ACCOUNT] = null;\n    if (data.seller_account !== undefined) {\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n    }\n\n    this[P_ACCOUNT_PRICE] = null;\n    if (data.account_price !== undefined) {\n      this[P_ACCOUNT_PRICE] = new Currency(data.account_price);\n    }\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    this[P_FEE] = new Currency(0);\n    if (data.fee !== undefined) {\n      this[P_FEE] = new Currency(data.fee);\n    }\n  }\n\n  /**\n   * Gets the changed account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the n op of the account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the new public key.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the new name.\n   *\n   * @returns {String|null}\n   */\n  get newName() {\n    return this[P_NEW_NAME];\n  }\n\n  /**\n   * Gets the new type.\n   *\n   * @returns {Number|null}\n   */\n  get newType() {\n    return this[P_NEW_TYPE];\n  }\n\n  /**\n   * Gets the seller account.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets the sales price of the account.\n   *\n   * @returns {Currency|null}\n   */\n  get accountPrice() {\n    return this[P_ACCOUNT_PRICE];\n  }\n\n  /**\n   * Gets the block number until the account is blocked.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the fee for the change operation.\n   *\n   * @returns {Currency|null}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n}\n\nmodule.exports = Changer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CALLER = Symbol('caller');\n\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\nconst PublicKey = require('@pascalcoin-sbx/common').Types.Keys.PublicKey;\nconst KeyPair = require('@pascalcoin-sbx/common').Types.Keys.KeyPair;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\n\nconst Block = require('./Types/Block');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst Account = require('./Types/Account');\n\nconst publicKeyCoder = new PublicKeyCoder();\nconst opHashCoder = new OperationHashCoder();\n\n/**\n * Simple function that transforms the values of an object to make them usable\n * in rpc calls.\n *\n * @param {Object} params\n * @returns {Object}\n */\nfunction transformRpcParams(params) {\n  const newParams = {};\n\n  Object.keys(params).forEach((field) => {\n    const item = params[field];\n\n    // we weill delete fields that are null\n    if (item === null) {\n\n    } else if (field.indexOf('pubkey') !== -1) {\n      // correct the field name..\n      let newField = field.replace('pubkey', 'enc_pubkey');\n\n      // and set the value\n      if (item instanceof BC) {\n        newParams[newField] = item.toHex();\n      } else if (item instanceof PublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item).toHex();\n      } else if (item instanceof WalletPublicKey) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else if (item instanceof KeyPair) {\n        newParams[newField] = publicKeyCoder.encodeToBytes(item.publicKey).toHex();\n      } else {\n        newField = newField.replace('enc_pubkey', 'b58_pubkey');\n        newParams[newField] = item.toString();\n      }\n    } else if (field === 'payload' && !(item instanceof BC)) {\n      newParams[field] = BC.fromString(item).toHex();\n    } else if (field === 'max' || field === 'start' || field === 'end' || field === 'depth') {\n      newParams[field] = parseInt(item, 10);\n    } else if ((field === 'fee' || field === 'amount' || field === 'price') &&\n        !(params[field] instanceof Currency)\n    ) {\n      newParams[field] = new Currency(item);\n      if (newParams[field].isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      } else {\n        newParams[field] = newParams[field].toStringOpt();\n      }\n    } else if (typeof item === 'boolean') {\n      newParams[field] = item;\n    } else if (field === 'senders') {\n      newParams[field] = item.map(senderItem => {\n        let o = {\n          account: senderItem.account.account,\n          amount: senderItem.amount.toStringOpt(),\n          payload: senderItem.payload.toHex()\n        };\n\n        if (!isNaN(senderItem.nOperation)) {\n          o.n_operation = senderItem.nOperation;\n        }\n        return o;\n      });\n    } else if (field === 'receivers') {\n      newParams[field] = item.map(receiverItem => {\n        return {\n          account: receiverItem.account.account,\n          amount: receiverItem.amount.toStringOpt(),\n          payload: receiverItem.payload.toHex()\n        };\n      });\n    } else if (field === 'changesinfo') {\n      newParams[field] = item.map(changerItem => {\n        let o = {\n          account: changerItem.account.account\n        };\n\n        if (changerItem.newPublicKey !== null) {\n          o.new_b58_pubkey = new PublicKeyCoder().encodeToBase58(changerItem.newPublicKey);\n        }\n        if (changerItem.newName !== null) {\n          o.new_name = changerItem.newName.toString();\n        }\n        if (changerItem.newType !== null) {\n          o.new_type = changerItem.newType;\n        }\n\n        if (!isNaN(changerItem.nOperation)) {\n          o.n_operation = changerItem.nOperation;\n        }\n        return o;\n      });\n    } else if (item.constructor.name === 'Array') {\n      if (item.length > 0) {\n        newParams[field] = item;\n      }\n    } else if (item instanceof BC) {\n      newParams[field] = item.toHex();\n    } else if (item instanceof OperationHash) {\n      newParams[field] = opHashCoder.encodeToBytes(item).toHex();\n    } else if (item instanceof Account) {\n      newParams[field] = item.account.account; // NICE!!!!! :-D\n    } else if (item instanceof AccountNumber) {\n      newParams[field] = item.account;\n    } else if (item instanceof AccountName) {\n      newParams[field] = item.toString();\n    } else if (item instanceof Block) {\n      newParams[field] = item.block;\n    } else if (item instanceof Currency) {\n      if (item.isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      }\n      newParams[field] = item.toStringOpt();\n    } else if (typeof item === 'number') {\n      newParams[field] = item;\n    } else {\n      newParams[field] = item.toString();\n    }\n  });\n\n  return newParams;\n}\n\nfunction transformRpcResult(value, DestinationType) {\n  switch (DestinationType.name) {\n    case 'Boolean':\n      return !!value;\n    case 'String':\n      return value.toString();\n    case 'Object':\n      return value;\n    case 'BC':\n      return BC.from(value);\n    default:\n      return new DestinationType(value);\n  }\n};\n\n/**\n * This class will execute an rpc call and returns a promise.\n */\nclass Executor {\n  /**\n     * Constructor\n     *\n     * @param {Caller} caller\n     */\n  constructor(caller) {\n    this[P_CALLER] = caller;\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {BaseAction} action\n   * @param {Function|null} transformCallback\n   * @returns {Promise<any>}\n   */\n  async execute(action, transformCallback = null) {\n    transformCallback = transformCallback || this.transform(action.destinationType, action.returnsArray);\n    return new Promise((resolve, reject) => {\n      this[P_CALLER].call(action.method, transformRpcParams(action.params))\n        .then((response) => {\n          resolve([response, transformCallback]);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * Transforms a raw response value to a special type.\n   *\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   * @returns {*}\n   */\n  transform(DestinationType, returnsArray) {\n    if (returnsArray) {\n      return function (value) {\n        return value.map(v => transformRpcResult(v, DestinationType));\n      };\n    }\n\n    return function (value) {\n      return transformRpcResult(value, DestinationType);\n    };\n  }\n}\n\nmodule.exports = Executor;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst bs58 = require('bs58');\nconst BC = require('./BC');\n\n/**\n * Contains methods to convert stuff to various formats.\n */\nclass Base58 {\n  /**\n     * Gets the base58 representation of the given buffer.\n     *\n     * @param {BC|Buffer|Uint8Array|String} data\n     * @returns {String}\n     */\n  static encode(data) {\n    return bs58.encode(BC.from(data).buffer);\n  }\n\n  /**\n   * Decodes a Base58 encoded string.\n   *\n   * @param {String} str\n   * @returns {BC}\n   */\n  static decode(str) {\n    return new BC(bs58.decode(str));\n  }\n}\n\nmodule.exports = Base58;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Currency = require('./Types/Currency');\n\n/**\n * Gets information about forks and features.\n */\nclass PascalCoinInfo {\n\n  /**\n   * Gets the min fee.\n   *\n   * @param {Number|null} block\n   * @returns {Currency}\n   * @constructor\n   */\n  static MIN_FEE(block = null) {\n    return Currency.fromMolina(1);\n  }\n\n  /**\n   * Gets the block number when 50% inflation reduction was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0010() {\n    return 210240;\n  }\n\n  /**\n   * Gets the block number when PIP-10 was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get INFLATION_REDUCTION() {\n    return PascalCoinInfo.PIP_0010;\n  }\n\n  /**\n   * Gets a value indicating whether the given block has inflation reduction\n   * activated (PIP-10).\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isInflationReduction(block) {\n    return block >= PascalCoinInfo.INFLATION_REDUCTION;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0009() {\n    return 260000;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get RANDOM_HASH() {\n    return PascalCoinInfo.PIP_0009;\n  }\n\n  /**\n   * Gets a value indicating if randomhash was active at the given block.\n   *\n   * @param {Number} block\n   * @returns {boolean}\n   */\n  static isRandomHash(block) {\n    return block >= PascalCoinInfo.RANDOM_HASH;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0011() {\n    return 210000;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get DEVELOPER_REWARD() {\n    return PascalCoinInfo.PIP_0011;\n  }\n\n  /**\n   * Gets a value indicating whether the given block was mined with activated\n   * developer award.\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isDeveloperReward(block) {\n    return block >= PascalCoinInfo.DEVELOPER_REWARD;\n  }\n\n  /**\n   * Gets the max payload length in bytes.\n   *\n   * @return {number}\n   * @constructor\n   */\n  static get MAX_PAYLOAD_LENGTH() {\n    return 255;\n  }\n}\n\nmodule.exports = PascalCoinInfo;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst sha256 = require('mipher/dist/sha256');\nconst sha512 = require('mipher/dist/sha512');\nconst BC = require('./BC');\n\n/**\n * Holds methods to hash.\n */\nclass Sha {\n  /**\n   * Calculates the sha256 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {BC}\n   */\n  static sha256(...buffers) {\n    const hasher = new sha256.SHA256();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n\n  /**\n   * Calculates the sha512 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {Buffer}\n   */\n  static sha512(...buffers) {\n    const hasher = new sha512.SHA512();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n}\n\nmodule.exports = Sha;\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief mipher interface, convert and util functions\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n///////////////////////////////////////////////////////////////////////////////\r\n// V E R S I O N\r\nexports.version = '1.1.4';\r\n///////////////////////////////////////////////////////////////////////////////\r\n// C O N V E R T E R\r\nvar Convert;\r\n(function (Convert) {\r\n    /**\r\n     * Convert a string (UTF-8 encoded) to a byte array\r\n     * @param {String} str UTF-8 encoded string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function str2bin(str) {\r\n        str = str.replace(/\\r\\n/g, '\\n');\r\n        var bin = new Uint8Array(str.length * 3), p = 0;\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if (c < 128) {\r\n                bin[p++] = c;\r\n            }\r\n            else if (c < 2048) {\r\n                bin[p++] = (c >>> 6) | 192;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n            else {\r\n                bin[p++] = (c >>> 12) | 224;\r\n                bin[p++] = ((c >>> 6) & 63) | 128;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n        }\r\n        return bin.subarray(0, p);\r\n    }\r\n    Convert.str2bin = str2bin;\r\n    /**\r\n     * Convert a hex string to byte array\r\n     * @param {String} hex Hex string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function hex2bin(hex) {\r\n        if (hex.indexOf('0x') === 0 || hex.indexOf('0X') === 0) {\r\n            hex = hex.substr(2);\r\n        }\r\n        if (hex.length % 2) {\r\n            hex += '0';\r\n        }\r\n        var bin = new Uint8Array(hex.length >>> 1);\r\n        for (var i = 0, len = hex.length >>> 1; i < len; i++) {\r\n            bin[i] = parseInt(hex.substr(i << 1, 2), 16);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.hex2bin = hex2bin;\r\n    /**\r\n     * Convert a 32 bit integer number to a 4 byte array, LSB is first\r\n     * @param {Number} integer Integer number\r\n     * @return {Uint8Array} bin 4 byte array\r\n     */\r\n    function int2bin(integer) {\r\n        var bin = new Uint8Array(4);\r\n        bin[0] = (integer) & 0xff;\r\n        bin[1] = (integer >>> 8) & 0xff;\r\n        bin[2] = (integer >>> 16) & 0xff;\r\n        bin[3] = (integer >>> 24) & 0xff;\r\n        return bin;\r\n    }\r\n    Convert.int2bin = int2bin;\r\n    /**\r\n     * Convert a number to a 8 byte array, LSB is first\r\n     * @param {Number} value Long number\r\n     * @return {Uint8Array} bin 8 byte array\r\n     */\r\n    function number2bin(value) {\r\n        var bin = new Uint8Array(8);\r\n        if (Math.floor(value) === value) {\r\n            var TWO_PWR_32 = 4294967296;\r\n            var lo = (value % TWO_PWR_32) | 0, hi = (value / TWO_PWR_32) | 0;\r\n            if (value < 0) {\r\n                lo = ~(-value % TWO_PWR_32) | 0, hi = ~(-value / TWO_PWR_32) | 0;\r\n                lo = (lo + 1) & 0xffffffff;\r\n                if (!lo)\r\n                    hi++;\r\n            }\r\n            var i = 0;\r\n            bin[i++] = (lo & 0xff);\r\n            bin[i++] = (lo >>> 8) & 0xff;\r\n            bin[i++] = (lo >>> 16) & 0xff;\r\n            bin[i++] = (lo >>> 24) & 0xff;\r\n            bin[i++] = (hi & 0xff);\r\n            bin[i++] = (hi >>> 8) & 0xff;\r\n            bin[i++] = (hi >>> 16) & 0xff;\r\n            bin[i] = (hi >>> 24) & 0xff;\r\n        }\r\n        else {\r\n            var f = new Float64Array([value]);\r\n            var d = new Uint8Array(f.buffer);\r\n            bin.set(d);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.number2bin = number2bin;\r\n    /**\r\n     * Convert a base64/base64url string to a byte array\r\n     * @param {String} base64 Base64/Base64url encoded string\r\n     * @return {Uint8Array} Byte array or undefined if error\r\n     */\r\n    function base642bin(base64) {\r\n        // remove base64url encoding\r\n        base64 = base64.replace(/-/g, '+').replace(/_/g, '/').replace(/%3d/g, '=');\r\n        // length must be multiple of 4\r\n        if (base64.length % 4 !== 0)\r\n            return;\r\n        var strlen = base64.length / 4 * 3;\r\n        if (base64.charAt(base64.length - 1) === '=')\r\n            strlen--;\r\n        if (base64.charAt(base64.length - 2) === '=')\r\n            strlen--;\r\n        if (typeof atob !== 'undefined') {\r\n            return new Uint8Array(atob(base64).split('').map(function (c) { return c.charCodeAt(0); }));\r\n        }\r\n        else {\r\n            // atob not available\r\n            var decodingTable = new Int8Array([\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, 62, -1, 62, -1, 63,\r\n                52, 53, 54, 55, 56, 57, 58, 59,\r\n                60, 61, -1, -1, -1, -2, -1, -1,\r\n                -1, 0, 1, 2, 3, 4, 5, 6,\r\n                7, 8, 9, 10, 11, 12, 13, 14,\r\n                15, 16, 17, 18, 19, 20, 21, 22,\r\n                23, 24, 25, -1, -1, -1, -1, 63,\r\n                -1, 26, 27, 28, 29, 30, 31, 32,\r\n                33, 34, 35, 36, 37, 38, 39, 40,\r\n                41, 42, 43, 44, 45, 46, 47, 48,\r\n                49, 50, 51, -1, -1, -1, -1, -1 // x y z .  . . . .\r\n            ]);\r\n            var p = 0, bin = new Uint8Array(strlen);\r\n            for (var i = 0, len = base64.length; i < len;) {\r\n                var sextet_a = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_b = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_c = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_d = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var triple = (sextet_a << 18) +\r\n                    (sextet_b << 12) +\r\n                    (sextet_c << 6) +\r\n                    (sextet_d);\r\n                if (base64.charAt(i - 3) !== '=')\r\n                    bin[p++] = (triple >>> 16) & 0xff;\r\n                if (base64.charAt(i - 2) !== '=')\r\n                    bin[p++] = (triple >>> 8) & 0xff;\r\n                if (base64.charAt(i - 1) !== '=')\r\n                    bin[p++] = (triple) & 0xff;\r\n            }\r\n            return bin;\r\n        }\r\n    }\r\n    Convert.base642bin = base642bin;\r\n    /**\r\n     * Convert a byte array to hex string\r\n     * @param {Uint8Array} bin The input byte array\r\n     * @param {Boolean} uppercase True for upper case hex numbers\r\n     * @return {String} Hex sting\r\n     */\r\n    function bin2hex(bin, uppercase) {\r\n        if (uppercase === void 0) { uppercase = false; }\r\n        var hex = uppercase ? '0123456789ABCDEF' : '0123456789abcdef';\r\n        var str = '';\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            str += hex.charAt((bin[i] >>> 4) & 0x0f) + hex.charAt(bin[i] & 0x0f);\r\n            // str += bin[i].toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2hex = bin2hex;\r\n    /**\r\n     * Convert a byte array to string (UTF-8 dedode)\r\n     * @param {Uint8Array} bin UTF-8 text given as array of bytes\r\n     * @return {String} UTF-8 Text string\r\n     */\r\n    function bin2str(bin) {\r\n        var str = '', len = bin.length, i = 0, c, c2, c3;\r\n        while (i < len) {\r\n            c = bin[i];\r\n            if (c < 128) {\r\n                str += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                c2 = bin[i + 1];\r\n                str += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = bin[i + 1];\r\n                c3 = bin[i + 2];\r\n                str += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2str = bin2str;\r\n    /**\r\n     * Convert a byte value array in a long value array\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @return {Uint32Array} bin values in long format\r\n     */\r\n    function bin2longbin(bin) {\r\n        var longbin = new Uint32Array(bin.length >>> 2);\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            longbin[i >>> 2] |= (bin[i] << ((i % 4) << 3));\r\n        }\r\n        return longbin;\r\n    }\r\n    Convert.bin2longbin = bin2longbin;\r\n    /**\r\n     * Convert a 8 byte (int64) array into a number\r\n     * @param {Uint8Array} bin Array of 8 bytes (int64), LSB is [0], MSB is [7]\r\n     * @return {Number} int64 value as number\r\n     */\r\n    function bin2number(bin) {\r\n        var TWO_PWR_32 = 4294967296;\r\n        var i = 0;\r\n        var lo = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i++] << 24;\r\n        var hi = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i] << 24;\r\n        return hi * TWO_PWR_32 + ((lo >= 0) ? lo : TWO_PWR_32 + lo);\r\n    }\r\n    Convert.bin2number = bin2number;\r\n    /**\r\n     * Convert byte array to base64/base64url string\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @param {Boolean} url True if the string should be URL encoded (base64url encoding)\r\n     * @return {String} Base64 encoded string\r\n     */\r\n    function bin2base64(bin, url) {\r\n        if (url === void 0) { url = false; }\r\n        if (typeof btoa !== 'undefined') {\r\n            return url ? btoa(String.fromCharCode.apply(null, bin)).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '%3d') :\r\n                btoa(String.fromCharCode.apply(null, bin));\r\n        }\r\n        else {\r\n            // btoa not available\r\n            var base64 = '', encodingTable = url ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' :\r\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            for (var i = 0, len = bin.length; i < len;) {\r\n                var octet_a = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_b = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_c = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var triple = (octet_a << 0x10) + (octet_b << 0x08) + octet_c;\r\n                base64 += encodingTable.charAt((triple >>> 18) & 0x3F);\r\n                base64 += encodingTable.charAt((triple >>> 12) & 0x3F);\r\n                base64 += (i < bin.length + 2) ? encodingTable.charAt((triple >>> 6) & 0x3F) : (url ? '%3d' : '=');\r\n                base64 += (i < bin.length + 1) ? encodingTable.charAt((triple >>> 0) & 0x3F) : (url ? '%3d' : '=');\r\n            }\r\n            return base64;\r\n        }\r\n    }\r\n    Convert.bin2base64 = bin2base64;\r\n})(Convert = exports.Convert || (exports.Convert = {}));\r\n///////////////////////////////////////////////////////////////////////////////\r\n// U T I L S\r\nvar Util;\r\n(function (Util) {\r\n    /**\r\n     * Time constant comparison of two arrays\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Boolean} True if the arrays are equal (length and content), false otherwise\r\n     */\r\n    function compare(lh, rh) {\r\n        if (lh.length !== rh.length) {\r\n            // abort\r\n            return false;\r\n        }\r\n        var i, d = 0, len = lh.length;\r\n        for (i = 0; i < len; i++) {\r\n            d |= lh[i] ^ rh[i];\r\n        }\r\n        return d === 0;\r\n    }\r\n    Util.compare = compare;\r\n    /**\r\n     * Clear an array\r\n     * @param {Uint8Array | Uint16Array | Uint32Array} Array to clear\r\n     */\r\n    function clear(data) {\r\n        data.fill(0);\r\n    }\r\n    Util.clear = clear;\r\n    /**\r\n     * XOR two arrays and return the result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} XORed result array\r\n     */\r\n    function xor(lh, rh) {\r\n        return lh.map(function (val, ind) { return val ^ rh[ind]; });\r\n    }\r\n    Util.xor = xor;\r\n    /**\r\n     * Concat two arrays and returns a new result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} Concatenated result array\r\n     */\r\n    function concat(lh, rh) {\r\n        var x = new Uint8Array(lh.length + rh.length);\r\n        x.set(lh, 0);\r\n        x.set(rh, lh.length);\r\n        return x;\r\n    }\r\n    Util.concat = concat;\r\n    /**\r\n     * Returns true if LITTLE endian is detected\r\n     * @return {Boolean} True for LE, false for BE\r\n     */\r\n    function litteendian() {\r\n        return (new Uint32Array((new Uint8Array([1, 2, 3, 4])).buffer))[0] === 0x04030201;\r\n    }\r\n    Util.litteendian = litteendian;\r\n})(Util = exports.Util || (exports.Util = {}));\r\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nclass Util {\n\n  /**\n   * https://github.com/MauroJr/escape-regex/blob/master/index.js\n   * Tests are not performed.\n   *\n   * @param {String} string\n   * @returns {string}\n   */\n  /* istanbul ignore next */\n  static escapeRegex(string) {\n    return ('' + string).replace(/([?!${}*:()|=^[\\]\\/\\\\.+])/g, '\\\\$1');\n  }\n}\n\nmodule.exports = Util;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Util = require('../Util');\n\nconst P_VALUE = Symbol('value');\n\n// the list of characters to escape.\nconst CHARS_TO_ESCAPE = '(){}[]:\"<>'.split('');\nconst REGEX_TO_ESCAPE = `(${CHARS_TO_ESCAPE.map(c => Util.escapeRegex(c)).join('|')})`;\n\nconst ALLOWED_ALL = '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()-+{}[]_:\"|<>,.?/~'.split('');\nconst ALLOWED_START = ALLOWED_ALL.slice(10);\n\n/**\n * AccountName encoding for account names.\n */\nclass AccountName {\n  /**\n   * Constructor\n   * @param {String|AccountName} value\n   */\n  constructor(value) {\n    if (value instanceof AccountName) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = AccountName.validate(value);\n    }\n  }\n\n  /**\n   * Validates a string.\n   *\n   * @param {String} value\n   * @return {String}\n     */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    if (value.length < 3) {\n      throw new Error('Invalid account name, must be at least 3 characters long.');\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (pos === 0 && ALLOWED_START.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position 0`);\n      } else if (pos > 0 && ALLOWED_ALL.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n\n  /**\n   * Gets an escaped string representation for EPasa usage.\n   *\n   * @returns {*}\n   */\n  toStringEscaped() {\n    return this[P_VALUE].replace(new RegExp(REGEX_TO_ESCAPE, 'gm'), '\\\\$1');\n\n  }\n\n  /**\n   * Gets a value indicating whether the current char c1 is an escape modifier\n   * and the second is in the list of chars to escape.\n   *\n   * @param {String} c1\n   * @param {String} c2\n   * @returns {boolean}\n   */\n  static isEscape(c1, c2) {\n    return c1 === '\\\\' && CHARS_TO_ESCAPE.indexOf(c2) > -1;\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../BC');\nconst AccountNumber = require('./AccountNumber');\n\nconst P_BLOCK = Symbol('block');\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_MD160 = Symbol('md160');\n\n/**\n * Holds information about an operation hash.\n */\nclass OperationHash {\n  /**\n   * Constructor\n   *\n   * @param {Number} block\n   * @param {Number} account\n   * @param {Number} nOperation\n   * @param {BC|Buffer|Uint8Array|String} md160\n   */\n  constructor(block, account, nOperation, md160) {\n    this[P_BLOCK] = block;\n    this[P_ACCOUNT] = new AccountNumber(account);\n    this[P_N_OPERATION] = nOperation;\n    this[P_MD160] = BC.from(md160);\n\n    if (this[P_MD160].length !== 20) {\n      throw new Error('Invalid operation hash - md160 size !== 20 bytes.');\n    }\n  }\n\n  /**\n   * Gets the account that executed the operation.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the block number.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the number of operations for the executing account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the md160 of the op.\n   *\n   * @returns {BC}\n   */\n  get md160() {\n    return this[P_MD160];\n  }\n\n  /**\n   * Gets a value indicating whether the given ophash equals the current ophash.\n   *\n   * @param opHash\n   * @param ignoreBlock\n   * @return {boolean}\n   */\n  equals(opHash, ignoreBlock = false) {\n    let blockResult = true;\n\n    if (!ignoreBlock) {\n      blockResult = this.block === opHash.block;\n    }\n\n    return blockResult &&\n      this.nOperation === opHash.nOperation &&\n      this.account.account === opHash.account.account &&\n      this.md160.equals(opHash.md160);\n  }\n}\n\nmodule.exports = OperationHash;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\n\nconst P_KEY = Symbol('key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PrivateKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} key\n     * @param {Curve} curve\n     */\n  constructor(key, curve) {\n    this[P_KEY] = BC.from(key);\n    this[P_CURVE] = curve;\n\n    const privateKeyLength = curve.lPrivateKey();\n\n    if (this[P_KEY].length > privateKeyLength) {\n      throw new Error(`Invalid length for curve ${curve.name} - ` +\n          `expected <= ${privateKeyLength}, got ${this[P_KEY].length}`\n      );\n    }\n  }\n\n  /**\n     * Gets the key value.\n     *\n     * @returns {BC}\n     */\n  get key() {\n    return this[P_KEY];\n  }\n\n  /**\n     * Gets the ec key.\n     *\n     * @returns {BC}\n     */\n  get ec() {\n    return this.key;\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\nconst Curve = require('./Curve');\n\nconst P_X = Symbol('x');\nconst P_XL = Symbol('xl');\nconst P_Y = Symbol('y');\nconst P_YL = Symbol('yl');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PublicKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} x\n     * @param {BC|Buffer|Uint8Array|String} y\n     * @param {Curve} curve\n     */\n  constructor(x, y, curve) {\n    x = BC.from(x);\n    y = BC.from(y);\n\n    this[P_X] = x;\n    this[P_Y] = y;\n    this[P_XL] = x.length;\n    this[P_YL] = y.length;\n    this[P_CURVE] = curve;\n\n    if (this[P_XL] > curve.xylPublicKey('x') || this[P_YL] > curve.xylPublicKey('y')) {\n      throw new Error(`Invalid x and/or y length for curve ${curve.name} - ` +\n          `expected <= X${curve.xylPublicKey('x')}:Y${curve.xylPublicKey('y')}, ` +\n          `got X${this[P_XL]}:Y${this[P_YL]}`\n      );\n    }\n  }\n\n  /**\n     * Gets the X value of the key.\n     *\n     * @returns {BC}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the y value of the key.\n     *\n     * @returns {BC}\n     */\n  get y() {\n    return this[P_Y];\n  }\n\n  /**\n     * Gets the length of X.\n     *\n     * @returns {Number}\n     */\n  get yl() {\n    return this[P_YL];\n  }\n\n  /**\n     * Gets the length of Y.\n     *\n     * @returns {Number}\n     */\n  get xl() {\n    return this[P_XL];\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ec() {\n    return BC.concat(this.x, this.y);\n  }\n\n  /**\n   * Gets the ecdh public key.\n   *\n   * @returns {BC}\n   */\n  get ecdh() {\n    if (this.curve.id === Curve.CI_P521) {\n      return BC.concat(BC.fromHex('0400'), this.x, BC.fromHex('00'), this.y);\n    }\n\n    return BC.concat(BC.fromHex('04'), this.x, this.y);\n  }\n\n  /**\n     * Gets an empty public key instance.\n     *\n     * @returns {PublicKey}\n     */\n  static empty() {\n    return new PublicKey(\n      BC.fromString(''),\n      BC.fromString(''),\n      new Curve(0),\n    );\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractInt = require('./AbstractInt');\nconst BC = require('./../../BC');\nconst Endian = require('./../../Endian');\nconst BN = require('bn.js');\n\nfunction validate64Bit(isUnsigned, value) {\n  if (isUnsigned) {\n    if (value.isNeg()) {\n      throw new Error('64bit value is negative. Only signed allowed.');\n    } else if (value.gt(new BN('18446744073709551615'))) {\n      throw new Error('Invalid unsigned 64 bit value.');\n    }\n  } else if (!isUnsigned) {\n    if (value.gt(new BN('9223372036854775807')) || value.lt(new BN('-9223372036854775808'))) {\n      throw new Error('Invalid signed 64 bit value.');\n    }\n  }\n\n  return value;\n}\n\n/**\n * Field type for 64bit int values using BN.js.\n */\nclass Int64 extends AbstractInt {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Boolean} unsigned\n   * @param {String} endian\n   */\n  constructor(id, unsigned = true, endian = Endian.LITTLE_ENDIAN) {\n    super(id || 'int64', unsigned, endian);\n    this.description('8byte 64bit int value');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return 8;\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BN}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let value = new BN(BC.from(bc).slice(0, this.encodedSize).buffer, 10, this.endian.toLowerCase());\n\n    if (!this.unsigned) {\n      value = value.fromTwos(64);\n    }\n\n    return validate64Bit(this.unsigned, value);\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {BN} value\n   */\n  encodeToBytes(value) {\n    value = validate64Bit(this.unsigned, value);\n    if (!this.unsigned) {\n      value = value.toTwos(64);\n    }\n\n    return BC.from(value.toBuffer(this.endian.toLowerCase(), this.encodedSize));\n  }\n}\n\nmodule.exports = Int64;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../../BC');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./Int8');\nconst Int16 = require('./Int16');\nconst Int32 = require('./Int32');\n\nconst StringWithoutLength = require('./StringWithoutLength');\nconst Endian = require('./../../Endian');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_HAS_LEADING_ZB = Symbol('has_leading_zerobyte');\nconst P_LENGTH_FIELD = Symbol('length_field');\nconst P_STRING_FIELD = Symbol('bytes_field');\n\n/**\n * A field type to write dynamic strings (prepends the length).\n */\nclass StringWithLength extends AbstractType {\n\n  constructor(id, byteSize = 1, lengthId = 'length', lengthDesc = null,\n    endian = Endian.LITTLE_ENDIAN, hasLeadingZeroByte = false) {\n    super(id || `bytes_size${byteSize * 8}`);\n    this.description('String with size prepended');\n    this[P_STRING_FIELD] = new StringWithoutLength('value');\n    this[P_HAS_LEADING_ZB] = hasLeadingZeroByte;\n    switch (byteSize) {\n      case 1:\n        this[P_LENGTH_FIELD] = new Int8(lengthId, true);\n        break;\n      case 2:\n        this[P_LENGTH_FIELD] = new Int16(lengthId, true, endian);\n        break;\n      case 4:\n        this[P_LENGTH_FIELD] = new Int32(lengthId, true, endian);\n        break;\n      default:\n        throw new Error('ByteSize must be either 1, 2 or 4');\n    }\n\n    if (lengthDesc !== null) {\n      this[P_LENGTH_FIELD].description(lengthDesc);\n    }\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    this[P_SIZE_ENCODED] = this[P_LENGTH_FIELD].encodedSize +\n      this[P_LENGTH_FIELD].decodeFromBytes(BC.from(bc)) +\n      (+this[P_HAS_LEADING_ZB]);\n    return this[P_STRING_FIELD].decodeFromBytes(\n      bc.slice(\n        this[P_LENGTH_FIELD].encodedSize + (+this[P_HAS_LEADING_ZB]),\n        this[P_SIZE_ENCODED]\n      )\n    );\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    this[P_SIZE_ENCODED] = value.length;\n    let bc = this[P_LENGTH_FIELD].encodeToBytes(this[P_SIZE_ENCODED]);\n\n    if (this[P_HAS_LEADING_ZB]) {\n      bc = bc.append('00');\n    }\n\n    return bc.append(this[P_STRING_FIELD].encodeToBytes(value));\n  }\n}\n\nmodule.exports = StringWithLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\n\n/**\n * A field type to write dynamic strings without prepending the length.\n */\nclass StringWithoutLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'string_without_length');\n    this.description('Single string value without length prepended.');\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the string value from the given bytes\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {String}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).toString();\n  }\n\n  /**\n   * Encodes the given value.\n   *\n   * @param {String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    let encoded = BC.from(value, 'string');\n\n    this[P_SIZE_ENCODED] = encoded.length;\n    return encoded;\n  }\n}\n\nmodule.exports = StringWithoutLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AbstractType = require('./../AbstractType');\nconst BC = require('./../../BC');\n\nconst P_SIZE = Symbol('size');\n\n/**\n * A field type to encode and decode bytes with a fixed length.\n */\nclass BytesFixedLength extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   * @param {Number} length\n   */\n  constructor(id, length) {\n    super(id || 'bytes_fixed_length_' + length);\n    this.description('Bytes with a fixed length of ' + length);\n    this[P_SIZE] = length;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE];\n  }\n\n  /**\n   * Returns the values of the given bc in the configured length.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {BC}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return BC.from(bc).slice(0, this[P_SIZE]);\n  }\n\n  /**\n   * Encodes the given value to a collection of bytes.\n   *\n   * @param {Buffer|Uint8Array|BC|String} value\n   * @returns {BC}\n   */\n  encodeToBytes(value) {\n    value = BC.from(value);\n    return value.slice(0, this[P_SIZE]);\n  }\n}\n\nmodule.exports = BytesFixedLength;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNumberType = require('./../../Types/AccountNumber');\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass AccountNumber extends Int32 {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'account', true, Endian.LITTLE_ENDIAN);\n    this.description('An account number');\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNumberType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNumberType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNumberType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.account);\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst Int32 = require('./../Core/Int32');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass NOperation extends Int32 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'nOperation', true, Endian.LITTLE_ENDIAN);\n    this.description('Accounts n_operation value.');\n  }\n}\n\nmodule.exports = NOperation;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst jaysonBrowserClient = require('jayson/lib/client/browser');\nconst fetch = require('node-fetch');\nconst ConnectionError = require('./Errors/ConnectionError');\nconst ResultError = require('./Errors/ResultError');\n\nconst P_CLIENT = Symbol('client');\n\n/**\n * A caller object that can call JSON-RPC methods.\n */\nclass Caller {\n  /**\n     * Creates a new caller instance.\n     *\n     * @param {String} host\n     */\n  constructor(host) {\n    this[P_CLIENT] = jaysonBrowserClient((request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      return fetch(host, options)\n        .then(res => res.text())\n        .then((text) => {\n          callback(null, text);\n        })\n        .catch((err) => {\n          callback(err);\n        });\n    });\n  }\n\n  /**\n     * Calls the given method with the given params and returns a promise.\n     *\n     * @param {String}method\n     * @param {Object} params\n     * @returns {Promise<any>}\n     */\n  call(method, params) {\n    return new Promise((resolve, reject) => {\n      this[P_CLIENT].request(method, params, (err, error, result) => {\n        if (err !== null || error !== undefined || result === undefined) {\n          if (err !== null && err.constructor.name === 'FetchError') {\n            return reject(new ConnectionError(err));\n          }\n          if (error !== null && error !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          if (result !== undefined) {\n            return reject(new ResultError(error.code, error.message));\n          }\n          return resolve(result);\n        }\n        return resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Caller;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_ORIGINAL = Symbol('original');\nconst P_MESSAGE = Symbol('message');\n\nclass ConnectionError {\n  constructor(originalFetchError) {\n    this[P_ORIGINAL] = originalFetchError;\n    this[P_MESSAGE] = originalFetchError.message;\n  }\n\n  get original() {\n    return this[P_ORIGINAL];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ConnectionError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CODE = Symbol('code');\nconst P_MESSAGE = Symbol('message');\n\nclass ResultError {\n  constructor(code, message) {\n    this[P_CODE] = code;\n    this[P_MESSAGE] = message;\n  }\n\n  get code() {\n    return this[P_CODE];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ResultError;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\n\n/**\n * Whenever a remote endpoint has paging possibilities, this action will be\n * returned.\n */\nclass PagedAction extends BaseAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.changeParam('start', 0);\n    this.changeParam('max', 100);\n  }\n\n  set start(start) {\n    this.changeParam('start', start);\n    return this;\n  }\n\n  set max(max) {\n    this.changeParam('max', max);\n    return this;\n  }\n\n  /**\n   * Executes the current action and returns all results.\n   *\n   * @returns {Promise}\n   */\n  async executeAll(restEach = -1, restSeconds = -1, restCallback = null, report = null) {\n    let all = [];\n    let transformCallback = null;\n\n    await this.executeAllReport(([data, transform]) => {\n      if (transformCallback === null) {\n        transformCallback = transform;\n      }\n      data.forEach(item => all.push(item));\n      if (report !== null) {\n        report(all.length);\n      }\n    }, restEach, restSeconds, restCallback);\n    return [all, transformCallback];\n  }\n\n  /**\n   * Executes the current action and reports the results of each step to the\n   * given reporter.\n   *\n   * @returns {Promise}\n   */\n  async executeAllReport(reporter, restEach = -1, restSeconds = -1, restCallback = null) {\n    let result = [];\n    var reports = 0;\n\n    do {\n      if (restEach > -1 && reports > 0 && reports % restEach === 0) {\n        if (restCallback !== null) {\n          restCallback();\n        }\n        await (async () => {\n          return new Promise(function (resolve) {\n            setTimeout(function () {\n              resolve();\n            }, restSeconds * 1000);\n          });\n        })();\n      }\n\n      result = await this.execute();\n      if (result[0].length > 0) {\n        let c = reporter(result);\n        // being able to stop execution\n\n        if (c === false) {\n          return;\n        }\n        reports++;\n      }\n\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result[0].length > 0 && result[0].length === this.params.max);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = PagedAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst OperationAction = require('./OperationAction');\nconst BC = require('@pascalcoin-sbx/common').BC;\n\n/**\n * This object derives from an operation action and extends the functionality\n * by methods shared by cold wallet signing operations.\n */\nclass SignOperationAction extends OperationAction {\n  /**\n   * Constructor.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Executor} executor\n   * @param {*} DestinationType\n   * @param {Boolean} returnsArray\n   */\n  constructor(method, params, executor, DestinationType, returnsArray) {\n    super(method, params, executor, DestinationType, returnsArray);\n    this.params.last_n_operation = null;\n    this.params.rawoperations = null;\n  }\n\n  /**\n     * Sets the last n operation value.\n     *\n     * @param {Number} lastNOperation\n     * @return {SignOperationAction}\n     */\n  withLastNOperation(lastNOperation) {\n    this.params.last_n_operation = lastNOperation;\n    return this;\n  }\n\n  /**\n     * Sets the raw operations instance of a previous result.\n     *\n     * @param {BC|String} rawoperations\n     * @return {SignOperationAction}\n     */\n  withRawOperations(rawoperations) {\n    this.params.rawoperations = BC.from(rawoperations);\n  }\n\n  isValid() {\n    return super.isValid() && this.params.last_n_operation !== null;\n  }\n}\n\nmodule.exports = SignOperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst NetProtocol = require('./NetProtocol');\nconst NetStats = require('./NetStats');\nconst NodeServer = require('./NodeServer');\n\nconst P_READY = Symbol('ready');\nconst P_READY_S = Symbol('ready_s');\nconst P_STATUS_S = Symbol('status_s');\nconst P_PORT = Symbol('port');\nconst P_LOCKED = Symbol('locked');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_BLOCKS = Symbol('blocks');\nconst P_NODESERVERS = Symbol('nodeservers');\nconst P_NETSTATS = Symbol('netstats');\nconst P_VERSION = Symbol('version');\nconst P_NETPROTOCOL = Symbol('netprotocol');\nconst P_SBH = Symbol('sbh');\nconst P_POW = Symbol('pow');\nconst P_OPENSSL = Symbol('openssl');\n\nclass NodeStatus extends Abstract {\n  constructor(data) {\n    super(data);\n\n    this[P_READY] = !!data.ready;\n    this[P_READY_S] = data.ready_s;\n    this[P_STATUS_S] = data.status_s;\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LOCKED] = !!data.locked;\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_BLOCKS] = parseInt(data.blocks, 10);\n    this[P_VERSION] = data.version;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_OPENSSL] = BC.fromHex(data.openssl);\n    this[P_NETPROTOCOL] = new NetProtocol(data.netprotocol);\n    this[P_NETSTATS] = new NetStats(data.netstats);\n    this[P_NODESERVERS] = data.nodeservers.map(ns => new NodeServer(ns));\n  }\n\n  /**\n     * Gets a flag indicating whether the node is ready.\n     *\n     * @returns {Boolean}\n     */\n  get ready() {\n    return this[P_READY];\n  }\n\n  /**\n     * Gets a string explaining the ready status.\n     *\n     * @returns {String}\n     */\n  get readyS() {\n    return this[P_READY_S];\n  }\n\n  /**\n     * Gets a string defining the status of the node.\n     *\n     * @returns {String}\n     */\n  get statusS() {\n    return this[P_STATUS_S];\n  }\n\n  /**\n     * Gets the port of the node.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets a value indicating whether the wallet is locked.\n     *\n     * @returns {Boolean}\n     */\n  get locked() {\n    return this[P_LOCKED];\n  }\n\n  /**\n     * Gets the timestamp where the node runs.\n     *\n     * @returns {Number}\n     */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {Number}\n     */\n  get blocks() {\n    return this[P_BLOCKS];\n  }\n\n  /**\n     * Gets the list of nodeservers.\n     *\n     * @returns {NodeServer[]}\n     */\n  get nodeservers() {\n    return this[P_NODESERVERS];\n  }\n\n  /**\n     * Gets the netstats\n     *\n     * @returns {NetStats}\n     */\n  get netstats() {\n    return this[P_NETSTATS];\n  }\n\n  /**\n     * Gets the node version info.\n     *\n     * @returns {Version}\n     */\n  get version() {\n    return this[P_VERSION];\n  }\n\n  /**\n     * Gets the info about the protocol versions.\n     *\n     * @returns {NetProtocol}\n     */\n  get netprotocol() {\n    return this[P_NETPROTOCOL];\n  }\n\n  /**\n     * Gets the last safebox hash.\n     *\n     * @returns {BC}\n     */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n     * Gets the last known POW.\n     *\n     * @returns {BC}\n     */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n     * Gets the openssl info.\n     *\n     * @returns {BC}\n     */\n  get openssl() {\n    return this[P_OPENSSL];\n  }\n}\n\nmodule.exports = NodeStatus;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('verA');\n\n/**\n * Holds information about a nodes version.\n */\nclass NetProtocol extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n  }\n\n  /**\n     * Gets the wallets protocol version.\n     *\n     * @returns {Number}\n     */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n     * Gets the miners protocol version.\n     *\n     * @returns {Number}\n     */\n  get verA() {\n    return this[P_VER_A];\n  }\n}\n\nmodule.exports = NetProtocol;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_BRECEIVED = Symbol('breceived');\nconst P_SERVERS_T = Symbol('servers_t');\nconst P_TSERVERS = Symbol('tservers');\nconst P_TOTAL = Symbol('total');\nconst P_BSEND = Symbol('bsend');\nconst P_SERVERS = Symbol('servers');\nconst P_CLIENTS = Symbol('clients');\nconst P_ACTIVE = Symbol('active');\nconst P_TCLIENTS = Symbol('tclients');\n\n/**\n * Class that holds netstats of a node server.\n */\nclass NetStats extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_BRECEIVED] = parseInt(data.breceived, 10);\n    this[P_SERVERS_T] = parseInt(data.servers_t, 10);\n    this[P_TSERVERS] = parseInt(data.tservers, 10);\n    this[P_TOTAL] = parseInt(data.total, 10);\n    this[P_BSEND] = parseInt(data.bsend, 10);\n    this[P_SERVERS] = parseInt(data.servers, 10);\n    this[P_CLIENTS] = parseInt(data.clients, 10);\n    this[P_ACTIVE] = parseInt(data.active, 10);\n    this[P_TCLIENTS] = parseInt(data.tclients, 10);\n  }\n\n  /**\n     * Gets the received bytes.\n     *\n     * @returns {Number}\n     */\n  get breceived() {\n    return this[P_BRECEIVED];\n  }\n\n  /**\n     * Gets the number of server connections\n     *\n     * @returns {Number}\n     */\n  get serversT() {\n    return this[P_SERVERS_T];\n  }\n\n  /**\n     * Gets the number of server connections.\n     *\n     * @returns {Number}\n     */\n  get tservers() {\n    return this[P_TSERVERS];\n  }\n\n  /**\n     * Gets the number of total connections.\n     *\n     * @returns {Number}\n     */\n  get total() {\n    return this[P_TOTAL];\n  }\n\n  /**\n     * Gets the number of bytes sent.\n     *\n     * @returns {Number}\n     */\n  get bsend() {\n    return this[P_BSEND];\n  }\n\n  /**\n     * Gets the number of servers that responded.\n     *\n     * @returns {Number}\n     */\n  get servers() {\n    return this[P_SERVERS];\n  }\n\n  /**\n     * Gets the number of client connections.\n     *\n     * @returns {Number}\n     */\n  get clients() {\n    return this[P_CLIENTS];\n  }\n\n  /**\n     * Gets the number of active connections.\n     *\n     * @returns {Number}\n     */\n  get active() {\n    return this[P_ACTIVE];\n  }\n\n  /**\n     * Gets the number of total client connections.\n     *\n     * @returns {Number}\n     */\n  get tclients() {\n    return this[P_TCLIENTS];\n  }\n}\n\nmodule.exports = NetStats;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_PORT = Symbol('port');\nconst P_LASTCON = Symbol('lastcon');\nconst P_ATTEMPTS = Symbol('attempts');\nconst P_IP = Symbol('ip');\n\n/**\n * Holds information about a single node server connection.\n */\nclass NodeServer extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LASTCON] = parseInt(data.lastcon, 10);\n    this[P_ATTEMPTS] = parseInt(data.attempts, 10);\n    this[P_IP] = data.ip;\n  }\n\n  /**\n     * Gets the port of the server.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets the timestamp of the last connection.\n     *\n     * @returns {Number}\n     */\n  get lastcon() {\n    return this[P_LASTCON];\n  }\n\n  /**\n     * Gets the number of connection attempts.\n     *\n     * @returns {Number}\n     */\n  get attempts() {\n    return this[P_ATTEMPTS];\n  }\n\n  /**\n     * Gets the IP of the node.\n     *\n     * @returns {String}\n     */\n  get ip() {\n    return this[P_IP];\n  }\n}\n\nmodule.exports = NodeServer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst BC = require('@pascalcoin-sbx/common').BC;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst OperationHashCoder = require('@pascalcoin-sbx/common').Coding.Pascal.OperationHash;\n\nconst opHashCoder = new OperationHashCoder();\n\nconst Sender = require('./Sender');\nconst Receiver = require('./Receiver');\nconst Changer = require('./Changer');\n\nconst P_VALID = Symbol('valid');\nconst P_ERRORS = Symbol('errors');\nconst P_BLOCK = Symbol('block');\nconst P_TIME = Symbol('time');\nconst P_OPBLOCK = Symbol('opblock');\nconst P_PAYLOAD = Symbol('payload');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPTYPE = Symbol('optype');\nconst P_ACCOUNT = Symbol('account');\nconst P_OPTXT = Symbol('optxt');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_BALANCE = Symbol('balance');\nconst P_OPHASH = Symbol('ophash');\nconst P_OLD_OPHASH = Symbol('old_ophash');\nconst P_SUBTYPE = Symbol('subtype');\nconst P_SIGNER_ACCOUNT = Symbol('signer_account');\nconst P_CHANGERS = Symbol('changers');\nconst P_SENDERS = Symbol('senders');\nconst P_RECEIVERS = Symbol('receivers');\n\n/**\n * A class thats holds the information about an operation.\n */\nclass Operation extends Abstract {\n  // The available optypes\n  static get BLOCKCHAIN_REWARD() {\n    return 0;\n  }\n\n  static get TRANSACTION() {\n    return 1;\n  }\n\n  static get CHANGE_KEY() {\n    return 2;\n  }\n\n  static get RECOVER_FUNDS() {\n    return 3;\n  }\n\n  static get LIST_FOR_SALE() {\n    return 4;\n  }\n\n  static get DELIST() {\n    return 5;\n  }\n\n  static get BUY() {\n    return 6;\n  }\n\n  static get CHANGE_KEY_ACCOUNT() {\n    return 7;\n  }\n\n  static get CHANGE_ACCOUNT_INFO() {\n    return 8;\n  }\n\n  static get MULTI_OPERATION() {\n    return 9;\n  }\n\n  static get DATA() {\n    return 10;\n  }\n\n  static get SUBTYPE_MINER() {\n    return 1;\n  }\n  static get SUBTYPE_DEVELOPER() {\n    return 2;\n  }\n  static get SUBTYPE_TX_SENDER() {\n    return 11;\n  }\n  static get SUBTYPE_TX_RECEIVER() {\n    return 12;\n  }\n  static get SUBTYPE_TX_BUY_BUYER() {\n    return 13;\n  }\n  static get SUBTYPE_TX_BUY_TARGET() {\n    return 14;\n  }\n  static get SUBTYPE_TX_BUY_SELLER() {\n    return 15;\n  }\n  static get SUBTYPE_CHANGE_KEY() {\n    return 21;\n  }\n  static get SUBTYPE_RECOVER() {\n    return 31;\n  }\n  static get SUBTYPE_LIST_PUBLIC() {\n    return 41;\n  }\n  static get SUBTYPE_LIST_PRIVATE() {\n    return 42;\n  }\n  static get SUBTYPE_DELIST() {\n    return 51;\n  }\n  static get SUBTYPE_BUY_BUYER() {\n    return 61;\n  }\n  static get SUBTYPE_BUY_TARGET() {\n    return 62;\n  }\n  static get SUBTYPE_BUY_SELLER() {\n    return 63;\n  }\n  static get SUBTYPE_CHANGE_KEY_SIGNED() {\n    return 71;\n  }\n  static get SUBTYPE_CHANGE_ACCOUNT_INFO() {\n    return 81;\n  }\n  static get SUBTYPE_MULTI_GLOBAL() {\n    return 91;\n  }\n  static get SUBTYPE_MULTI_ACCOUNT_INFO() {\n    return 92;\n  }\n  static get SUBTYPE_DATA_GLOBAL() {\n    return 101;\n  }\n  static get SUBTYPE_DATA_SENDER() {\n    return 102;\n  }\n  static get SUBTYPE_DATA_SIGNER() {\n    return 103;\n  }\n  static get SUBTYPE_DATA_RECEIVER() {\n    return 104;\n  }\n\n  /**\n   * Creates a new Operation instance from an rpc response.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_VALID] = true;\n    if (data.valid !== undefined) {\n      this[P_VALID] = !!data.valid;\n    }\n\n    this[P_ERRORS] = null;\n    if (data.errors !== undefined) {\n      this[P_ERRORS] = data.errors;\n    }\n\n    if (data.payload !== undefined) {\n      this[P_PAYLOAD] = BC.fromHex(data.payload);\n    } else {\n      this[P_PAYLOAD] = BC.fromHex('');\n    }\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_TIME] = parseInt(data.time, 10);\n    this[P_OPBLOCK] = parseInt(data.opblock, 10);\n    this[P_MATURATION] = 0;\n    // pending\n    if (data.maturation !== null) {\n      this[P_MATURATION] = parseInt(data.maturation, 10);\n    }\n\n    this[P_OPTYPE] = parseInt(data.optype, 10);\n    // multi-op\n    this[P_ACCOUNT] = null;\n    if (data.account !== undefined) {\n      this[P_ACCOUNT] = new AccountNumber(data.account);\n    }\n    this[P_OPTXT] = data.optxt;\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_BALANCE] = null;\n    if (data.balance !== undefined) {\n      this[P_BALANCE] = new Currency(data.balance);\n    }\n\n    this[P_OPHASH] = null;\n    if (data.ophash !== undefined) {\n      this[P_OPHASH] = BC.fromHex(data.ophash);\n      if (this[P_OPTYPE] !== Operation.BLOCKCHAIN_REWARD) {\n        this[P_OPHASH] = opHashCoder.decodeFromBytes(this[P_OPHASH]);\n      }\n    }\n\n    this[P_OLD_OPHASH] = null;\n    if (data.old_ophash !== undefined) {\n      this[P_OLD_OPHASH] = BC.fromHex(data.old_ophash);\n    }\n\n    this[P_SUBTYPE] = data.subtype;\n    this[P_SIGNER_ACCOUNT] = null;\n    if (data.signer_account !== undefined) {\n      this[P_SIGNER_ACCOUNT] = new AccountNumber(data.signer_account);\n    }\n\n    // eslint-disable-next-line no-multi-assign\n    this[P_SENDERS] = [];\n    this[P_RECEIVERS] = [];\n    this[P_CHANGERS] = [];\n\n    // loop given data and initialize objects\n    data.senders.forEach(s => this[P_SENDERS].push(new Sender(s)));\n    data.receivers.forEach(r => this[P_RECEIVERS].push(new Receiver(r)));\n    data.changers.forEach(c => this[P_CHANGERS].push(new Changer(c)));\n  }\n\n  /**\n   * Gets an indicator whether the operation was valid.\n   *\n   * @returns {Boolean}\n   */\n  get valid() {\n    return this[P_VALID];\n  }\n\n  /**\n   * If the operation is invalid you'll get the error message.\n   *\n   * @returns {String|null}\n   */\n  get errors() {\n    return this[P_ERRORS];\n  }\n\n  /**\n   * Gets the block that is associated with the operation.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the time of the operation.\n   *\n   * @returns {Number}\n   */\n  get time() {\n    return this[P_TIME];\n  }\n\n  /**\n   * Gets the position inside a block.\n   *\n   * @returns {Number}\n   */\n  get opBlock() {\n    return this[P_OPBLOCK];\n  }\n\n  /**\n   * Gets the age in blocks of the operation.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the type of the operation.\n   *\n   * @returns {Number}\n   */\n  get opType() {\n    return this[P_OPTYPE];\n  }\n\n  /**\n   * Gets the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets a textual representation of the operation.\n   *\n   * @returns {String}\n   */\n  get opTxt() {\n    return this[P_OPTXT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the fee.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Number}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {OperationHash}\n   */\n  get opHash() {\n    return this[P_OPHASH];\n  }\n\n  /**\n   * Gets the <= V2 operation Hash.\n   *\n   * @returns {BC|null}\n   */\n  get oldOpHash() {\n    return this[P_OLD_OPHASH];\n  }\n\n  /**\n   * Gets the subtype.\n   *\n   * @returns {String}\n   */\n  get subType() {\n    return this[P_SUBTYPE];\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get signerAccount() {\n    return this[P_SIGNER_ACCOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the list of changers.\n   *\n   * @returns {Changer[]}\n   */\n  get changers() {\n    return this[P_CHANGERS];\n  }\n\n  /**\n   * Gets the list of senders.\n   *\n   * @returns {Sender[]}\n   */\n  get senders() {\n    return this[P_SENDERS];\n  }\n\n  /**\n   * Gets the list of receivers.\n   *\n   * @returns {Receiver[]}\n   */\n  get receivers() {\n    return this[P_RECEIVERS];\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BLOCKCHAIN_REWARD operation.\n   *\n   * @returns {boolean}\n   */\n  isBlockchainReward() {\n    return this[P_OPTYPE] === Operation.BLOCKCHAIN_REWARD;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a TRANSACTION operation.\n   *\n   * @returns {boolean}\n   */\n  isTransaction() {\n    return this[P_OPTYPE] === Operation.TRANSACTION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKey() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a RECOVER_FUNDS operation.\n   *\n   * @returns {boolean}\n   */\n  isRecoverFunds() {\n    return this[P_OPTYPE] === Operation.RECOVER_FUNDS;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a LIST_FOR_SALE operation.\n   *\n   * @returns {boolean}\n   */\n  isListForSale() {\n    return this[P_OPTYPE] === Operation.LIST_FOR_SALE;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DELIST operation.\n   *\n   * @returns {boolean}\n   */\n  isDelist() {\n    return this[P_OPTYPE] === Operation.DELIST;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BUY operation.\n   *\n   * @returns {boolean}\n   */\n  isBuy() {\n    return this[P_OPTYPE] === Operation.BUY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY_ACCOUNT operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKeyAccount() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY_ACCOUNT;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_ACCOUNT_INFO operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeAccountInfo() {\n    return this[P_OPTYPE] === Operation.CHANGE_ACCOUNT_INFO;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a MULTI_OPERATION operation.\n   *\n   * @returns {boolean}\n   */\n  isMultiOperation() {\n    return this[P_OPTYPE] === Operation.MULTI_OPERATION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DATA operation.\n   *\n   * @returns {boolean}\n   */\n  isData() {\n    return this[P_OPTYPE] === Operation.DATA;\n  }\n\n  /**\n   * Gets a value indicating whether the op is pending.\n   *\n   * @returns {boolean}\n   */\n  isPending() {\n    return this[P_BLOCK] === 0;\n  }\n\n  /**\n   * Gets a value indicating whether the operation was not executed because of\n   * fees.\n   *\n   * @returns {boolean}\n   */\n  isZeroFeeError() {\n    return this.valid === false &&\n        this[P_ERRORS].indexOf('zero fee operations per block') > -1;\n  }\n}\n\nmodule.exports = Operation;\n","module.exports = {\n  Client: require('./src/Client'),\n  Executor: require('./src/Executor'),\n  Caller: require('./src/Caller'),\n  Actions: require('./src/Actions'),\n  Errors: require('./src/Errors'),\n  Types: require('./src/Types')\n};\n","/**\n* Copyright (c) Benjamin Ansbach - all rights reserved.\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nconst Executor = require('./Executor');\nconst RPCCaller = require('./Caller');\nconst BaseAction = require('./Actions/BaseAction');\nconst PagedAction = require('./Actions/PagedAction');\nconst OperationAction = require('./Actions/OperationAction');\nconst SignOperationAction = require('./Actions/SignOperationAction');\nconst Account = require('./Types/Account');\nconst Block = require('./Types/Block');\nconst SignedMessage = require('./Types/SignedMessage');\nconst NodeStatus = require('./Types/NodeStatus');\nconst Operation = require('./Types/Operation');\nconst Sender = require('./Types/Sender');\nconst Receiver = require('./Types/Receiver');\nconst Changer = require('./Types/Changer');\nconst Connection = require('./Types/Connection');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst AccountName = require('@pascalcoin-sbx/common').Types.AccountName;\nconst AccountNumber = require('@pascalcoin-sbx/common').Types.AccountNumber;\nconst OperationHash = require('@pascalcoin-sbx/common').Types.OperationHash;\nconst Currency = require('@pascalcoin-sbx/common').Types.Currency;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n* A simple rpc client that will prepare an action that can be executed against\n* a node.\n*/\nclass Client {\n\n  /**\n   * Returns a standard instance pointing to the given rpc host node.\n   *\n   * @param {String} rpcHostAddress\n   * @returns {Client}\n   */\n  static factory(rpcHostAddress) {\n    return new Client(\n      new Executor(\n        new RPCCaller(rpcHostAddress),\n      ),\n    );\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Executor} executor\n   */\n  constructor(executor) {\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n   * Adds nodes the remote node should connect to.\n   *\n   * @param {String[]} nodes - The list of nodes (will be transformed to a semicolon separated list)\n   *\n   * @returns {BaseAction}\n   */\n  addNode({\n    nodes\n  }) {\n    return new BaseAction('addnode', {\n      nodes: nodes.join(';')\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an account with the given account number.\n   *\n   * @param {AccountNumber|Number|String} account\n   *\n   * @returns {BaseAction}\n   */\n  getAccount({\n    account\n  }) {\n    return new BaseAction('getaccount', {\n      account: new AccountNumber(account)\n    }, this[P_EXECUTOR], Account, false);\n  }\n\n  /**\n   * Searches for accounts.\n   *\n   * @param {AccountName|String|null} name\n   * @param {Number|null} type\n   * @param {Boolean|null} onlyAccountsForSale\n   * @param {Boolean|null} exact\n   * @param {Currency|null} minBalance\n   * @param {Currency|null} maxBalance\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  findAccounts({\n    name = null,\n    type = null,\n    onlyAccountsForSale = null,\n    exact = null,\n    minBalance = null,\n    maxBalance = null,\n    pubkey = null\n  }) {\n    return new PagedAction('findaccounts', {\n      name: name !== null ? new AccountName(name) : name,\n      type: type !== null ? parseInt(type, 10) : type,\n      only_accounts_for_sale: onlyAccountsForSale,\n      exact,\n      min_balance: minBalance !== null ? new Currency(minBalance) : minBalance,\n      max_balance: maxBalance !== null ? new Currency(maxBalance) : maxBalance,\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns all accounts of a wallet with the given public key\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletAccounts({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletaccounts', {\n      pubkey\n    }, this[P_EXECUTOR], Account, true);\n  }\n\n  /**\n   * Returns the number of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletAccountsCount({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletaccountscount', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the accumulated balance of accounts in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletCoins({\n    pubkey = null\n  }) {\n    return new BaseAction('getwalletcoins', {\n      pubkey\n    }, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets the list of public keys managed in a wallet\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {PagedAction}\n   */\n  getWalletPubKeys({\n    pubkey = null\n  }) {\n    return new PagedAction('getwalletpubkeys', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Gets the info of a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  getWalletPubKey({\n    pubkey\n  }) {\n    return new BaseAction('getwalletpubkey', {\n      pubkey\n    }, this[P_EXECUTOR], WalletPublicKey, true);\n  }\n\n  /**\n   * Imports a public key in the wallet.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   * @param {String|null} name\n   *\n   * @returns {BaseAction}\n   */\n  inportPubKey({\n    pubkey,\n    name = null\n  }) {\n    return new BaseAction('importpubkey', {\n      pubkey,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Gets the information of a block\n   *\n   * @param {Number} block\n   *\n   * @returns {BaseAction}\n   */\n  getBlock({\n    block\n  }) {\n    return new BaseAction('getblock', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Block, false);\n  }\n\n  /**\n   * Gets a list of blocks\n   *\n   * @param {Number|null} last\n   * @param {Number|null} start\n   * @param {Number|null} end\n   *\n   * @returns {BaseAction}\n   */\n  getBlocks({\n    last = null,\n    start = null,\n    end = null\n  }) {\n    return new BaseAction('getblocks', {\n      last: last !== null ? parseInt(last, 10) : last,\n      start: start !== null ? parseInt(start, 10) : start,\n      end: end !== null ? parseInt(end, 10) : end\n    }, this[P_EXECUTOR], Block, true);\n  }\n\n  /**\n   * Gets the list of all blocks.\n   *\n   * @returns {BaseAction}\n   */\n  getBlockCount() {\n    return new BaseAction('getblockcount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets an operation in a block\n   *\n   * @param {Number} block\n   * @param {Number} opblock\n   *\n   * @returns {BaseAction}\n   */\n  getBlockOperation({\n    block,\n    opblock\n  }) {\n    return new BaseAction('getblockoperation', {\n      block: block !== null ? parseInt(block, 10) : block,\n      opblock: opblock !== null ? parseInt(opblock, 10) : opblock\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Get all operations in a block\n   *\n   * @param {Number} block\n   *\n   * @returns {PagedAction}\n   */\n  getBlockOperations({\n    block\n  }) {\n    return new PagedAction('getblockoperations', {\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Get all operations of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number|null} depth\n   * @param {Number|null} startblock\n   *\n   * @returns {PagedAction}\n   */\n  getAccountOperations({\n    account,\n    depth = null,\n    startblock = null\n  }) {\n    return new PagedAction('getaccountoperations', {\n      account: new AccountNumber(account),\n      depth: depth !== null ? parseInt(depth, 10) : depth,\n      startblock: startblock !== null ? parseInt(startblock, 10) : startblock\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets all pending operations\n   *\n   * @returns {PagedAction}\n   */\n  getPendings() {\n    return new PagedAction('getpendings', {}, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Gets the number of pending operations\n   *\n   * @returns {BaseAction}\n   */\n  getPendingsCount() {\n    return new BaseAction('getpendingscount', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Decodes the given operation hash\n   *\n   * @param {OperationHash} ophash\n   *\n   * @returns {BaseAction}\n   */\n  decodeOpHash({\n    ophash\n  }) {\n    return new BaseAction('decodeophash', {\n      ophash\n    }, this[P_EXECUTOR], OperationHash, false);\n  }\n\n  /**\n   * Searches for an operation\n   *\n   * @param {OperationHash|null} ophash\n   *\n   * @returns {BaseAction}\n   */\n  findOperation({\n    ophash = null\n  }) {\n    return new BaseAction('findoperation', {\n      ophash\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for an operation signed by account and with n_operation, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperation\n   * @param {Number|null} block\n   *\n   * @returns {BaseAction}\n   */\n  findNOperation({\n    account,\n    nOperation,\n    block = null\n  }) {\n    return new BaseAction('findnoperation', {\n      account: new AccountNumber(account),\n      n_operation: nOperation !== null ? parseInt(nOperation, 10) : nOperation,\n      block: block !== null ? parseInt(block, 10) : block\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Search for operations signed by account within an n_operation range, start searching block (0=all)\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {Number} nOperationMin\n   * @param {Number} nOperationMax\n   *\n   * @returns {PagedAction}\n   */\n  findNOperations({\n    account,\n    nOperationMin,\n    nOperationMax\n  }) {\n    return new PagedAction('findnoperations', {\n      account: new AccountNumber(account),\n      n_operation_min: nOperationMin !== null ? parseInt(nOperationMin, 10) : nOperationMin,\n      n_operation_max: nOperationMax !== null ? parseInt(nOperationMax, 10) : nOperationMax\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {Currency} amount\n   *\n   * @returns {OperationAction}\n   */\n  sendTo({\n    sender,\n    target,\n    amount\n  }) {\n    return new OperationAction('sendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Executes a transaction operation\n   *\n   * @param {AccountNumber|Number|String} sender\n   * @param {AccountNumber|Number|String} target\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} senderPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} targetPubkey\n   * @param {Currency} amount\n   *\n   * @returns {SignOperationAction}\n   */\n  signSendTo({\n    sender,\n    target,\n    senderPubkey,\n    targetPubkey,\n    amount\n  }) {\n    return new SignOperationAction('signsendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      sender_pubkey: senderPubkey,\n      target_pubkey: targetPubkey,\n      amount: new Currency(amount)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Changes the key of an account\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {OperationAction}\n   */\n  changeKey({\n    account,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new OperationAction('changekey', {\n      account: new AccountNumber(account),\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Changes the key of multiple accounts\n   *\n   * @param {AccountNumber[]|Number[]|String[]} accounts\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  changeKeys({\n    accounts,\n    newPubkey\n  }) {\n    return new OperationAction('changekeys', {\n      accounts: accounts.map((acc) => new AccountNumber(acc)),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change key operation\n   *\n   * @param {AccountNumber|Number|String} account\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} oldPubkey\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPubkey\n   * @param {AccountNumber|Number|String|null} accountSigner\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeKey({\n    account,\n    oldPubkey,\n    newPubkey,\n    accountSigner = null\n  }) {\n    return new SignOperationAction('signchangekey', {\n      account: new AccountNumber(account),\n      old_pubkey: oldPubkey,\n      new_pubkey: newPubkey,\n      account_signer: accountSigner !== null ? new AccountNumber(accountSigner) : accountSigner\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Lists an account for sale\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {OperationAction}\n   */\n  listAccountForSale({\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new OperationAction('listaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a list operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {AccountNumber|Number|String} sellerAccount\n   * @param {Number} lockedUntilBlock\n   * @param {Currency} price\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   *\n   * @returns {SignOperationAction}\n   */\n  signListAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    sellerAccount,\n    lockedUntilBlock,\n    price,\n    newPubkey = null\n  }) {\n    return new SignOperationAction('signlistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      seller_account: new AccountNumber(sellerAccount),\n      locked_until_block: lockedUntilBlock !== null ? parseInt(lockedUntilBlock, 10) : lockedUntilBlock,\n      price: new Currency(price),\n      new_pubkey: newPubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Delists an account\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {OperationAction}\n   */\n  DelistAccountForSale({\n    accountSigner,\n    accountTarget\n  }) {\n    return new OperationAction('delistaccountforsale', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a delist operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   *\n   * @returns {SignOperationAction}\n   */\n  signDelistAccountForSale({\n    signerPubkey,\n    accountSigner,\n    accountTarget\n  }) {\n    return new SignOperationAction('signdelistaccountforsale', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Buys an account\n   *\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency|null} price\n   * @param {AccountNumber|Number|String|null} sellerAccount\n   *\n   * @returns {OperationAction}\n   */\n  buyAccount({\n    buyerAccount,\n    accountToPurchase,\n    price = null,\n    sellerAccount = null\n  }) {\n    return new OperationAction('buyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: price !== null ? new Currency(price) : price,\n      seller_account: sellerAccount !== null ? new AccountNumber(sellerAccount) : sellerAccount\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a buy account operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} buyerAccount\n   * @param {AccountNumber|Number|String} accountToPurchase\n   * @param {Currency} price\n   * @param {AccountNumber|Number|String} sellerAccount\n   *\n   * @returns {SignOperationAction}\n   */\n  signBuyAccount({\n    signerPubkey,\n    buyerAccount,\n    accountToPurchase,\n    price,\n    sellerAccount\n  }) {\n    return new SignOperationAction('signbuyaccount', {\n      signer_pubkey: signerPubkey,\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price: new Currency(price),\n      seller_account: new AccountNumber(sellerAccount)\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Changes account infos\n   *\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {OperationAction}\n   */\n  changeAccountInfo({\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new OperationAction('changeaccountinfo', {\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Operation, false);\n  }\n\n  /**\n   * Signs a change account info operation\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} signerPubkey\n   * @param {AccountNumber|Number|String} accountSigner\n   * @param {AccountNumber|Number|String} accountTarget\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} newPubkey\n   * @param {AccountName|String|null} newName\n   * @param {Number|null} newType\n   *\n   * @returns {SignOperationAction}\n   */\n  signChangeAccountInfo({\n    signerPubkey,\n    accountSigner,\n    accountTarget,\n    newPubkey = null,\n    newName = null,\n    newType = null\n  }) {\n    return new SignOperationAction('signchangeaccountinfo', {\n      signer_pubkey: signerPubkey,\n      account_signer: new AccountNumber(accountSigner),\n      account_target: new AccountNumber(accountTarget),\n      new_pubkey: newPubkey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType !== null ? parseInt(newType, 10) : newType\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Signs a message using the given public key\n   *\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  signMessage({\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('signmessage', {\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Verifies a signature\n   *\n   * @param {BC} signature\n   * @param {BC} digest\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  verifySign({\n    signature,\n    digest,\n    pubkey\n  }) {\n    return new BaseAction('verifysign', {\n      signature,\n      digest,\n      pubkey\n    }, this[P_EXECUTOR], SignedMessage, false);\n  }\n\n  /**\n   * Removes an operation from the given rawoperations.\n   *\n   * @param {BC} rawoperations\n   * @param {Number} index\n   *\n   * @returns {BaseAction}\n   */\n  operationsDelete({\n    rawoperations,\n    index\n  }) {\n    return new BaseAction('operationsdelete', {\n      rawoperations,\n      index: index !== null ? parseInt(index, 10) : index\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the information about the given operation\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  operationsInfo({\n    rawoperations\n  }) {\n    return new BaseAction('operationsinfo', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Executes the given operations\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  executeOperations({\n    rawoperations\n  }) {\n    return new BaseAction('executeoperations', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Returns the current node status\n   *\n   * @returns {BaseAction}\n   */\n  nodeStatus() {\n    return new BaseAction('nodestatus', {}, this[P_EXECUTOR], NodeStatus, false);\n  }\n\n  /**\n   * Encodes a public key to a pascalcoin public key\n   *\n   * @param {BC} x\n   * @param {BC} y\n   * @param {Number} ecNid\n   *\n   * @returns {BaseAction}\n   */\n  encodePubKey({\n    x,\n    y,\n    ecNid\n  }) {\n    return new BaseAction('encodepubkey', {\n      x,\n      y,\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decodes an encoded public key.\n   *\n   * @param {BC} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  decodePubKey({\n    pubkey\n  }) {\n    return new BaseAction('decodepubkey', {\n      pubkey\n    }, this[P_EXECUTOR], Object, false);\n  }\n\n  /**\n   * Encrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String} payloadMethod\n   * @param {String|null} pwd\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair|null} pubkey\n   *\n   * @returns {BaseAction}\n   */\n  payloadEncrypt({\n    payload,\n    payloadMethod,\n    pwd = null,\n    pubkey = null\n  }) {\n    return new BaseAction('payloadencrypt', {\n      payload,\n      payload_method: payloadMethod,\n      pwd,\n      pubkey\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Decrypts a payload\n   *\n   * @param {BC} payload\n   * @param {String[]} pwds\n   *\n   * @returns {BaseAction}\n   */\n  payloadDecrypt({\n    payload,\n    pwds\n  }) {\n    return new BaseAction('payloaddecrypt', {\n      payload,\n      pwds\n    }, this[P_EXECUTOR], BC, false);\n  }\n\n  /**\n   * Gets the connections of a node.\n   *\n   * @returns {BaseAction}\n   */\n  getConnections() {\n    return new BaseAction('getconnections', {}, this[P_EXECUTOR], Connection, true);\n  }\n\n  /**\n   * Generates a new key and adds it to the nodes wallet.\n   *\n   * @param {Number} ecNid\n   * @param {String} name\n   *\n   * @returns {BaseAction}\n   */\n  addNewKey({\n    ecNid,\n    name\n  }) {\n    return new BaseAction('addnewkey', {\n      ec_nid: ecNid !== null ? parseInt(ecNid, 10) : ecNid,\n      name\n    }, this[P_EXECUTOR], WalletPublicKey, false);\n  }\n\n  /**\n   * Locks the wallet.\n   *\n   * @returns {BaseAction}\n   */\n  lock() {\n    return new BaseAction('lock', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Unlocks the wallet.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  unlock({\n    pwd\n  }) {\n    return new BaseAction('unlock', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Sets the wallet password.\n   *\n   * @param {String} pwd\n   *\n   * @returns {BaseAction}\n   */\n  setWalletPassword({\n    pwd\n  }) {\n    return new BaseAction('setwalletpassword', {\n      pwd\n    }, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Stops the node.\n   *\n   * @returns {BaseAction}\n   */\n  stopNode() {\n    return new BaseAction('stopnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Starts the node.\n   *\n   * @returns {BaseAction}\n   */\n  startNode() {\n    return new BaseAction('startnode', {}, this[P_EXECUTOR], Boolean, false);\n  }\n\n  /**\n   * Cleans the BlackList.\n   *\n   * @returns {BaseAction}\n   */\n  cleanBlackList() {\n    return new BaseAction('cleanblacklist', {}, this[P_EXECUTOR], Number, false);\n  }\n\n  /**\n   * Gets IP stats\n   *\n   * @returns {BaseAction}\n   */\n  nodeIPStats() {\n    return new BaseAction('node_ip_stats', {}, this[P_EXECUTOR], Object, true);\n  }\n\n  /**\n   * Adds an operation to a multioperation\n   *\n   * @param {BC} rawoperations\n   * @param {Boolean} autoNOperation\n   * @param {Object[]|Sender[]} senders\n   * @param {Object[]|Receiver[]} receivers\n   * @param {Object[]|Changer[]} changesinfo\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationAddOperation({\n    rawoperations,\n    autoNOperation,\n    senders,\n    receivers,\n    changesinfo\n  }) {\n    return new BaseAction('multioperationaddoperation', {\n      rawoperations,\n      auto_n_operation: autoNOperation,\n      senders: senders.map((sen) => new Sender(sen)),\n      receivers: receivers.map((rec) => new Receiver(rec)),\n      changesinfo: changesinfo.map((chng) => new Changer(chng))\n    }, this[P_EXECUTOR], BC, true);\n  }\n\n  /**\n   * Signs the given rawoperations\n   *\n   * @param {BC} rawoperations\n   * @param {Object} accountsAndKeys\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOffline({\n    rawoperations,\n    accountsAndKeys\n  }) {\n    return new BaseAction('multioperationsignoffline', {\n      rawoperations,\n      accounts_and_keys: accountsAndKeys\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n  /**\n   * Signs the given rawoperations online\n   *\n   * @param {BC} rawoperations\n   *\n   * @returns {BaseAction}\n   */\n  multiOperationSignOnline({\n    rawoperations\n  }) {\n    return new BaseAction('multioperationsignonline', {\n      rawoperations\n    }, this[P_EXECUTOR], Operation, true);\n  }\n\n}\n\nmodule.exports = Client;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nconst Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n\n  const BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n    BASE_MAP[xc] = i\n  }\n\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n\n  function encode (source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n    if (source.length === 0) return ''\n\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (256 * b58[it]) >>> 0\n        b58[it] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      pbegin++\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length\n    while (it !== size && b58[it] === 0) {\n      it++\n    }\n\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n\n    return str\n  }\n\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String')\n    if (source.length === 0) return Buffer.alloc(0)\n\n    let psz = 0\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return\n\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n\n      // Invalid character\n      if (carry === 255) return\n\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (BASE * b256[it]) >>> 0\n        b256[it] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      psz++\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return\n\n    // Skip leading zeroes in b256.\n    let it = size - length\n    while (it !== size && b256[it] === 0) {\n      it++\n    }\n\n    const vch = Buffer.allocUnsafe(zeroes + (size - it))\n    vch.fill(0x00, 0, zeroes)\n\n    let j = zeroes\n    while (it !== size) {\n      vch[j++] = b256[it++]\n    }\n\n    return vch\n  }\n\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA256 implementation\r\n//        Generates a 32 byte hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA256 class\r\n */\r\nvar SHA256 = /** @class */ (function () {\r\n    /**\r\n     * SHA256 ctor\r\n     */\r\n    function SHA256() {\r\n        this.hashSize = 32;\r\n        this.buffer = new Uint8Array(64);\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA256.prototype.transform = function () {\r\n        var h = this.H, h0 = h[0], h1 = h[1], h2 = h[2], h3 = h[3], h4 = h[4], h5 = h[5], h6 = h[6], h7 = h[7];\r\n        // convert byte buffer into w[0..15]\r\n        var i, w = new Uint32Array(16);\r\n        for (i = 0; i < 16; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        for (i = 0; i < 64; i++) {\r\n            var tmp = void 0;\r\n            if (i < 16) {\r\n                tmp = w[i];\r\n            }\r\n            else {\r\n                var a = w[(i + 1) & 15];\r\n                var b = w[(i + 14) & 15];\r\n                tmp = w[i & 15] = ((a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[(i + 9) & 15]) | 0;\r\n            }\r\n            tmp = (tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this.K[i]) | 0;\r\n            h7 = h6;\r\n            h6 = h5;\r\n            h5 = h4;\r\n            h4 = h3 + tmp;\r\n            h3 = h2;\r\n            h2 = h1;\r\n            h1 = h0;\r\n            h0 = (tmp + ((h1 & h2) ^ (h3 & (h1 ^ h2))) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10)) | 0;\r\n        }\r\n        h[0] = (h[0] + h0) | 0;\r\n        h[1] = (h[1] + h1) | 0;\r\n        h[2] = (h[2] + h2) | 0;\r\n        h[3] = (h[3] + h3) | 0;\r\n        h[4] = (h[4] + h4) | 0;\r\n        h[5] = (h[5] + h5) | 0;\r\n        h[6] = (h[6] + h6) | 0;\r\n        h[7] = (h[7] + h7) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Array} msg Additional message data as byte array\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 512 bit (64 byte chunks)\r\n        for (var i = 0, len = msg.length; i < len; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 64) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 56\r\n        while (idx !== 56) {\r\n            if (idx === 64) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[56] = (c[1] >>> 24) & 0xff;\r\n        b[57] = (c[1] >>> 16) & 0xff;\r\n        b[58] = (c[1] >>> 8) & 0xff;\r\n        b[59] = (c[1] >>> 0) & 0xff;\r\n        b[60] = (c[0] >>> 24) & 0xff;\r\n        b[61] = (c[0] >>> 16) & 0xff;\r\n        b[62] = (c[0] >>> 8) & 0xff;\r\n        b[63] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var hash = new Uint8Array(32), i;\r\n        for (i = 0; i < 8; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i] >>> 0) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA256.prototype.selftest = function () {\r\n        var cumulative = new SHA256(), sha = new SHA256();\r\n        var toBeHashed = '', hash, i, n;\r\n        for (i = 0; i < 10; i++) {\r\n            for (n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === 'f305c76d5d457ddf04f1927166f5e13429407049a5c5f29021916321fcdcd8b4';\r\n    };\r\n    return SHA256;\r\n}());\r\nexports.SHA256 = SHA256;\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA512 implementation\r\n//        Generates a 64 byte (512 bit) hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA512 class\r\n */\r\nvar SHA512 = /** @class */ (function () {\r\n    /**\r\n     * SHA512 ctor\r\n     */\r\n    function SHA512() {\r\n        this.hashSize = 64;\r\n        this.buffer = new Uint8Array(128); // 128 byte array\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {Object} this\r\n     */\r\n    SHA512.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\r\n            0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA512.prototype.transform = function () {\r\n        var h = this.H, h0h = h[0], h0l = h[1], h1h = h[2], h1l = h[3], h2h = h[4], h2l = h[5], h3h = h[6], h3l = h[7], h4h = h[8], h4l = h[9], h5h = h[10], h5l = h[11], h6h = h[12], h6l = h[13], h7h = h[14], h7l = h[15];\r\n        var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\r\n        // convert byte buffer into w[0..31]\r\n        var i, w = new Uint32Array(160);\r\n        for (i = 0; i < 32; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        // fill w[32..159]\r\n        var gamma0xl, gamma0xh, gamma0l, gamma0h, gamma1xl, gamma1xh, gamma1l, gamma1h, wrl, wrh, wr7l, wr7h, wr16l, wr16h;\r\n        for (i = 16; i < 80; i++) {\r\n            // Gamma0\r\n            gamma0xh = w[(i - 15) * 2];\r\n            gamma0xl = w[(i - 15) * 2 + 1];\r\n            gamma0h = ((gamma0xl << 31) | (gamma0xh >>> 1)) ^\r\n                ((gamma0xl << 24) | (gamma0xh >>> 8)) ^\r\n                ((gamma0xh >>> 7));\r\n            gamma0l = ((gamma0xh << 31) | (gamma0xl >>> 1)) ^\r\n                ((gamma0xh << 24) | (gamma0xl >>> 8)) ^\r\n                ((gamma0xh << 25) | (gamma0xl >>> 7));\r\n            // Gamma1\r\n            gamma1xh = w[(i - 2) * 2];\r\n            gamma1xl = w[(i - 2) * 2 + 1];\r\n            gamma1h = ((gamma1xl << 13) | (gamma1xh >>> 19)) ^\r\n                ((gamma1xh << 3) | (gamma1xl >>> 29)) ^\r\n                ((gamma1xh >>> 6));\r\n            gamma1l = ((gamma1xh << 13) | (gamma1xl >>> 19)) ^\r\n                ((gamma1xl << 3) | (gamma1xh >>> 29)) ^\r\n                ((gamma1xh << 26) | (gamma1xl >>> 6));\r\n            // shortcuts\r\n            wr7h = w[(i - 7) * 2],\r\n                wr7l = w[(i - 7) * 2 + 1],\r\n                wr16h = w[(i - 16) * 2],\r\n                wr16l = w[(i - 16) * 2 + 1];\r\n            // W(round) = gamma0 + W(round - 7) + gamma1 + W(round - 16)\r\n            wrl = gamma0l + wr7l;\r\n            wrh = gamma0h + wr7h + ((wrl >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n            wrl += gamma1l;\r\n            wrh += gamma1h + ((wrl >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n            wrl += wr16l;\r\n            wrh += wr16h + ((wrl >>> 0) < (wr16l >>> 0) ? 1 : 0);\r\n            // store\r\n            w[i * 2] = wrh;\r\n            w[i * 2 + 1] = wrl;\r\n        }\r\n        // compress\r\n        var chl, chh, majl, majh, sig0l, sig0h, sig1l, sig1h, krl, krh, t1l, t1h, t2l, t2h;\r\n        for (i = 0; i < 80; i++) {\r\n            // Ch\r\n            chh = (eh & fh) ^ (~eh & gh);\r\n            chl = (el & fl) ^ (~el & gl);\r\n            // Maj\r\n            majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n            majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n            // Sigma0\r\n            sig0h = ((al << 4) | (ah >>> 28)) ^ ((ah << 30) | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\r\n            sig0l = ((ah << 4) | (al >>> 28)) ^ ((al << 30) | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\r\n            // Sigma1\r\n            sig1h = ((el << 18) | (eh >>> 14)) ^ ((el << 14) | (eh >>> 18)) ^ ((eh << 23) | (el >>> 9));\r\n            sig1l = ((eh << 18) | (el >>> 14)) ^ ((eh << 14) | (el >>> 18)) ^ ((el << 23) | (eh >>> 9));\r\n            // K(round)\r\n            krh = this.K[i * 2];\r\n            krl = this.K[i * 2 + 1];\r\n            // t1 = h + sigma1 + ch + K(round) + W(round)\r\n            t1l = hl + sig1l;\r\n            t1h = hh + sig1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n            t1l += chl;\r\n            t1h += chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n            t1l += krl;\r\n            t1h += krh + ((t1l >>> 0) < (krl >>> 0) ? 1 : 0);\r\n            t1l = t1l + w[i * 2 + 1];\r\n            t1h += w[i * 2] + ((t1l >>> 0) < (w[i * 2 + 1] >>> 0) ? 1 : 0);\r\n            // t2 = sigma0 + maj\r\n            t2l = sig0l + majl;\r\n            t2h = sig0h + majh + ((t2l >>> 0) < (sig0l >>> 0) ? 1 : 0);\r\n            // update working variables\r\n            hh = gh;\r\n            hl = gl;\r\n            gh = fh;\r\n            gl = fl;\r\n            fh = eh;\r\n            fl = el;\r\n            el = (dl + t1l) | 0;\r\n            eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n            dh = ch;\r\n            dl = cl;\r\n            ch = bh;\r\n            cl = bl;\r\n            bh = ah;\r\n            bl = al;\r\n            al = (t1l + t2l) | 0;\r\n            ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n        }\r\n        // intermediate hash\r\n        h0l = h[1] = (h0l + al) | 0;\r\n        h[0] = (h0h + ah + ((h0l >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\r\n        h1l = h[3] = (h1l + bl) | 0;\r\n        h[2] = (h1h + bh + ((h1l >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\r\n        h2l = h[5] = (h2l + cl) | 0;\r\n        h[4] = (h2h + ch + ((h2l >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\r\n        h3l = h[7] = (h3l + dl) | 0;\r\n        h[6] = (h3h + dh + ((h3l >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n        h4l = h[9] = (h4l + el) | 0;\r\n        h[8] = (h4h + eh + ((h4l >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\r\n        h5l = h[11] = (h5l + fl) | 0;\r\n        h[10] = (h5h + fh + ((h5l >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\r\n        h6l = h[13] = (h6l + gl) | 0;\r\n        h[12] = (h6h + gh + ((h6l >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\r\n        h7l = h[15] = (h7l + hl) | 0;\r\n        h[14] = (h7h + hh + ((h7l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {SHA512} this\r\n     */\r\n    SHA512.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 1024 bit (128 byte chunks)\r\n        for (var i = 0; i < msg.length; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 128) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 112\r\n        while (idx !== 112) {\r\n            if (idx === 128) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[112] = b[113] = b[114] = b[115] = b[116] = b[117] = b[118] = b[119] = 0;\r\n        b[120] = (c[1] >>> 24) & 0xff;\r\n        b[121] = (c[1] >>> 16) & 0xff;\r\n        b[122] = (c[1] >>> 8) & 0xff;\r\n        b[123] = (c[1] >>> 0) & 0xff;\r\n        b[124] = (c[0] >>> 24) & 0xff;\r\n        b[125] = (c[0] >>> 16) & 0xff;\r\n        b[126] = (c[0] >>> 8) & 0xff;\r\n        b[127] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var i, hash = new Uint8Array(64);\r\n        for (i = 0; i < 16; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i]) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Additional message data\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA512.prototype.selftest = function () {\r\n        var cumulative = new SHA512(), sha = new SHA512();\r\n        var toBeHashed = '', hash;\r\n        for (var i = 0; i < 10; i++) {\r\n            for (var n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === '602923787640dd6d77a99b101c379577a4054df2d61f39c74172cafa2d9f5b26a11b40b7ba4cdc87e84a4ab91b85391cb3e1c0200f3e3d5e317486aae7bebbf3';\r\n    };\r\n    return SHA512;\r\n}());\r\nexports.SHA512 = SHA512;\r\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AccountName: require('./AccountName'),\n  AccountNumber: require('./AccountNumber'),\n  Currency: require('./Currency'),\n  OperationHash: require('./OperationHash'),\n  Keys: require('./Keys')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Curve: require('./Curve'),\n  PrivateKey: require('./PrivateKey'),\n  PublicKey: require('./PublicKey'),\n  KeyPair: require('./KeyPair')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nconst P_PRIVATE_KEY = Symbol('private_key');\nconst P_PUBLIC_KEY = Symbol('public_key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a private and public keypair.\n */\nclass KeyPair {\n  /**\n     * Creates a new private-public keypair instance.\n     *\n     * @param {PrivateKey} privateKey\n     * @param {PublicKey} publicKey\n     */\n  constructor(privateKey, publicKey) {\n    this[P_CURVE] = privateKey.curve;\n    this[P_PRIVATE_KEY] = privateKey;\n    this[P_PUBLIC_KEY] = publicKey;\n\n    if (privateKey.curve.id !== publicKey.curve.id) {\n      throw new Error('Mixed up curves between private an public key');\n    }\n  }\n\n  /**\n     * Gets the private key.\n     *\n     * @returns {PrivateKey}\n     */\n  get privateKey() {\n    return this[P_PRIVATE_KEY];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBLIC_KEY];\n  }\n\n  /**\n     * Gets the curve used for the keypair.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = KeyPair;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  AbstractType: require('./AbstractType'),\n  CompositeType: require('./CompositeType'),\n  Repeating: require('./Repeating'),\n  Decissive: require('./Decissive'),\n  Core: {\n    AbstractInt: require('./Core/AbstractInt'),\n    Int8: require('./Core/Int8'),\n    Int16: require('./Core/Int16'),\n    Int32: require('./Core/Int32'),\n    Int64: require('./Core/Int64'),\n    StringWithLength: require('./Core/StringWithLength'),\n    StringWithoutLength: require('./Core/StringWithoutLength'),\n    BytesWithLength: require('./Core/BytesWithLength'),\n    BytesWithoutLength: require('./Core/BytesWithoutLength'),\n    BytesFixedLength: require('./Core/BytesFixedLength')\n  },\n  Pascal: {\n    Keys: {\n      Curve: require('./Pascal/Keys/Curve'),\n      PublicKey: require('./Pascal/Keys/PublicKey'),\n      PrivateKey: require('./Pascal/Keys/PrivateKey')\n    },\n    AccountNumber: require('./Pascal/AccountNumber'),\n    AccountName: require('./Pascal/AccountName'),\n    Currency: require('./Pascal/Currency'),\n    NOperation: require('./Pascal/NOperation'),\n    OpType: require('./Pascal/OpType'),\n    OperationHash: require('./Pascal/OperationHash')\n  }\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('./../BC');\nconst AbstractType = require('./AbstractType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_REPEAT_LIMIT = Symbol('repeat_limit');\nconst P_REPEAT_MARKER = Symbol('repeat_marker');\nconst P_TYPE = Symbol('type');\n\n/**\n * A Type that itself is made up of multiple other types.\n */\nclass Repeating extends AbstractType {\n  /**\n   * Constructor\n   */\n  constructor(id, type, repeatLimit = -1, repeatMarker = null) {\n    super(id || 'repeating');\n    super.description('A type that itself has one repeating type that will ' +\n      'be written / read until the limit is reached or data is empty.');\n    this[P_TYPE] = type;\n    this[P_REPEAT_LIMIT] = repeatLimit;\n    this[P_REPEAT_MARKER] = repeatMarker;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let result = [];\n    let offset = 0;\n\n    bc = BC.from(bc);\n\n    let limit = this[P_REPEAT_MARKER] !== null ? all[this[P_REPEAT_MARKER]] : this[P_REPEAT_LIMIT];\n    let counter = limit;\n\n    while ((limit > -1 && counter > 0) || (limit === -1 && bc.length > offset)) {\n      const decoded = this[P_TYPE].decodeFromBytes(bc.slice(offset));\n\n      result.push(decoded);\n      offset += this[P_TYPE].encodedSize;\n      counter--;\n    }\n\n    this[P_SIZE_ENCODED] = offset;\n\n    return result;\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(arr) {\n    let bc = BC.empty();\n\n    arr.forEach((item, idx) => {\n      if (idx >= this[P_REPEAT_LIMIT] && this[P_REPEAT_LIMIT] > -1) {\n        return;\n      }\n      bc = bc.append(this[P_TYPE].encodeToBytes(item));\n    });\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n\n  get repeatingType() {\n    return this[P_TYPE];\n  }\n}\n\nmodule.exports = Repeating;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst CompositeType = require('./CompositeType');\n\nconst P_SIZE_ENCODED = Symbol('size_encoded');\nconst P_SUBTYPE_RESOLVER = Symbol('subtype_resolver');\nconst P_MARKER_FIELD = Symbol('marker_field');\n\n/**\n * A Type that itself is made up of multiple other types. The types are selected dynamically\n * depending on the given resolver.\n */\nclass Decissive extends CompositeType {\n  /**\n   * Constructor\n   */\n  constructor(id, markerField, subTypeResolver) {\n    super(id || 'decissive');\n    super.description('A type that itself has many sub types but only some are triggere based on a marker.');\n    this[P_SUBTYPE_RESOLVER] = subTypeResolver;\n    this[P_MARKER_FIELD] = markerField;\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_SIZE_ENCODED];\n  }\n\n  /**\n   * Decodes the given bytes into an object.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Object}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n\n    this[P_SIZE_ENCODED] = subType.encodedSize;\n    return subType.decodeFromBytes(bc, options, all);\n  }\n\n  /**\n   * Encodes the given object to a list of bytes.\n   *\n   * @param {Object|Array} objOrArray\n   * @returns {BC}\n   */\n  encodeToBytes(objOrArray, all) {\n    let subType = this[P_SUBTYPE_RESOLVER](all[this[P_MARKER_FIELD]]);\n    let bc = subType.encodeToBytes(objOrArray);\n\n    this[P_SIZE_ENCODED] = bc.length;\n    return bc;\n  }\n}\n\nmodule.exports = Decissive;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst BytesWithoutLength = require('../../Core/BytesWithoutLength');\nconst CompositeType = require('../../CompositeType');\nconst BC = require('../../../BC');\nconst Sha = require('../../../Sha');\nconst Base58 = require('../../../Base58');\nconst PublicKeyType = require('./../../../../src/Types/Keys/PublicKey');\n\n/**\n * A Public Key value.\n */\nclass PublicKey extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   * @param {Boolean} omitXYLenghts\n   */\n  constructor(id = null, omitXYLenghts = false) {\n    super(id || 'public_key');\n    this.addSubType(new Curve('curve'));\n\n    // oh come on..\n    if (omitXYLenghts) {\n      this.addSubType(\n        new BytesWithoutLength('x')\n          .description('The X value of the public key.')\n      );\n      this.addSubType(new BytesWithoutLength('y'));\n    } else {\n      this.addSubType(\n        new BytesWithLength('x', 2, 'x_length', 'Length of X value')\n          .description('The X value of the public key.')\n      );\n      this.addSubType(\n        new BytesWithLength('y', 2, 'y_length', 'Length of Y value')\n          .description('The X value of the public key.')\n      );\n    }\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PublicKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PublicKeyType(decoded.x, decoded.y, decoded.curve);\n  }\n\n  /**\n   * Gets the base58 representation of a public key.\n   *\n   * @returns {String}\n   */\n  encodeToBase58(publicKey) {\n    const prefix = BC.fromHex('01');\n    const encoded = this.encodeToBytes(publicKey);\n    const aux = Sha.sha256(encoded);\n    const suffix = aux.slice(0, 4);\n\n    const raw = BC.concat(prefix, encoded, suffix);\n\n    return Base58.encode(raw);\n  }\n\n  /**\n   * Gets a public key instance from the given base58 string.\n   *\n   * @param {String} base58\n   * @returns {PublicKey}\n   */\n  decodeFromBase58(base58) {\n    const decoded = Base58.decode(base58);\n\n    return this.decodeFromBytes(decoded.slice(1, -4));\n  }\n}\n\nmodule.exports = PublicKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Curve = require('./Curve');\nconst BytesWithLength = require('../../Core/BytesWithLength');\nconst CompositeType = require('../../CompositeType');\nconst PrivateKeyType = require('./../../../../src/Types/Keys/PrivateKey');\n\n/**\n * A coder for a private key.\n */\nclass PrivateKey extends CompositeType {\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'private_key');\n    this.addSubType(\n      new Curve('curve')\n    );\n    this.addSubType(\n      new BytesWithLength('key', 2)\n        .description('The private key value.')\n    );\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {PrivateKeyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new PrivateKeyType(decoded.key, decoded.curve);\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin PublicKey instance.\n   *\n   * @param {PrivateKeyType} value\n   * @returns {PrivateKeyType}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst AccountNameType = require('./../../Types/AccountName');\nconst StringWithLength = require('../Core/StringWithLength');\n\n/**\n * A pascal related type that can de/encode an account name.\n */\nclass AccountName extends StringWithLength {\n\n  /**\n   * Constructor\n   *\n   * @param {String} id\n   */\n  constructor(id = null, byteSize = 2) {\n    super(id || 'account_name', byteSize);\n    this.description('An account name');\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {AccountNameType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return new AccountNameType(super.decodeFromBytes(bc));\n  }\n\n  /**\n   *\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {AccountNameType} value\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.toString());\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Int64 = require('./../Core/Int64');\nconst CurrencyType = require('./../../Types/Currency');\nconst Endian = require('./../../Endian');\n\n/**\n * A special Int64 type that can handle pascalcoin currencies.\n */\nclass Currency extends Int64 {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null, unsigned = true, endian = Endian.LITTLE_ENDIAN) {\n    super(id || 'currency', unsigned, endian);\n    this.description('A type for currency values.');\n  }\n\n  /**\n   * Reads the pascal currency value from the given BC.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {CurrencyType}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return CurrencyType.fromMolina(super.decodeFromBytes(bc));\n  }\n\n  /**\n   * Appends the given currency value to the given BC.\n   *\n   * @param {CurrencyType} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value.bn);\n  }\n}\n\nmodule.exports = Currency;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst AbstractType = require('./../AbstractType');\nconst Int8 = require('./../Core/Int8');\nconst Int16 = require('./../Core/Int16');\nconst Int32 = require('./../Core/Int32');\n\nconst P_INT_TYPE = Symbol('int_type');\n\n/**\n * A special Int32 type that can handle account number.\n */\nclass OpType extends AbstractType {\n\n  /**\n   * Constructor\n   *\n   * @param {Number} byteSize\n   */\n  constructor(id, byteSize) {\n    super(id || `optype_int${byteSize * 8}`);\n    switch (byteSize) {\n      case 1:\n        this[P_INT_TYPE] = new Int8('OpType[Int8]', true);\n        break;\n      case 2:\n        this[P_INT_TYPE] = new Int16('OpType[Int16]', true, Endian.LITTLE_ENDIAN);\n        break;\n      case 4:\n        this[P_INT_TYPE] = new Int32('OpType[Int32]', true, Endian.LITTLE_ENDIAN);\n        break;\n      default:\n        throw Error('Invalid byte size.');\n    }\n    this.description(`Operation type in ${byteSize * 8} bits`);\n  }\n\n  /**\n   * @inheritDoc AbstractType#encodedSize\n   */\n  get encodedSize() {\n    return this[P_INT_TYPE].encodedSize;\n  }\n\n  /**\n   * Decodes and returns the optype.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @return {Number}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    return this[P_INT_TYPE].decodeFromBytes(bc);\n  }\n\n  /**\n   * Encodes the given optype to bytes.\n   *\n   * @param {Number} value\n   * @return {*}\n   */\n  encodeToBytes(value) {\n    return this[P_INT_TYPE].encodeToBytes(value);\n  }\n\n  get intType() {\n    return this[P_INT_TYPE];\n  }\n}\n\nmodule.exports = OpType;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Endian = require('./../../Endian');\nconst CompositeType = require('./../CompositeType');\nconst Int32 = require('./../Core/Int32');\nconst AccountNumber = require('./AccountNumber');\nconst BytesWithFixedLength = require('./../Core/BytesFixedLength');\nconst NOperation = require('./NOperation');\nconst OperationHashType = require('./../../Types/OperationHash');\n\n/**\n * Simple wrapper for an unsigned Int32 value (used for the n_operation value)\n */\nclass OperationHash extends CompositeType {\n\n  /**\n   * Constructor.\n   *\n   * @param {String} id\n   */\n  constructor(id = null) {\n    super(id || 'ophash');\n    this.description('A pascalCoin operation hash');\n\n    this.addSubType(\n      new Int32('block', true, Endian.LITTLE_ENDIAN)\n        .description('The block the operation is in.')\n    );\n    this.addSubType(\n      new AccountNumber('account')\n        .description('The account number that signed the operation.')\n    );\n    this.addSubType(\n      new NOperation('nOperation', 4)\n        .description('The n_operation value of the account with the current operation.')\n    );\n    this.addSubType(\n      new BytesWithFixedLength('md160', 20)\n        .description('The RIPEMD160 hash of the operation data.')\n    );\n  }\n\n  /**\n   * Reads a value and returns a new PascalCoin AccountNumber instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @param {Object} options\n   * @param {*} all\n   * @returns {OperationHash}\n   */\n  decodeFromBytes(bc, options = {}, all = null) {\n    const decoded = super.decodeFromBytes(bc);\n\n    return new OperationHashType(decoded.block, decoded.account, decoded.nOperation, decoded.md160);\n  }\n\n  /**\n   * Appends the given pascalcoin account number to the BC.\n   *\n   * @param {OperationHash} value\n   * @return {BC}\n   */\n  encodeToBytes(value) {\n    return super.encodeToBytes(value);\n  }\n}\n\nmodule.exports = OperationHash;\n","'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","module.exports = require('./assignIn');\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst PublicKeyCoder = require('@pascalcoin-sbx/common').Coding.Pascal.Keys.PublicKey;\nconst BC = require('@pascalcoin-sbx/common').BC;\n\nconst P_DIGEST = Symbol('digest');\nconst P_PUBKEY = Symbol('public_key');\nconst P_SIGNATURE = Symbol('signature');\n\n/**\n * Represents a sender in an operation.\n */\nclass SignedMessage extends Abstract {\n  /**\n     * Creates a new instance of the Sender class.\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_DIGEST] = BC.fromHex(data.digest);\n    if (data.enc_pubkey !== undefined) {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBytes(BC.fromHex(data.enc_pubkey));\n    } else {\n      this[P_PUBKEY] = new PublicKeyCoder().decodeFromBase58(data.b58_pubkey);\n    }\n    this[P_SIGNATURE] = BC.fromHex(data.signature);\n  }\n\n  /**\n     * Gets the digest.\n     *\n     * @returns {BC}\n     */\n  get digest() {\n    return this[P_DIGEST];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBKEY];\n  }\n\n  /**\n     * Gets the signature.\n     *\n     * @returns {BC}\n     */\n  get amount() {\n    return this[P_SIGNATURE];\n  }\n}\n\nmodule.exports = SignedMessage;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_RECV = Symbol('recv');\nconst P_TIMEDIFF = Symbol('timediff');\nconst P_NETVER_A = Symbol('nerver_a');\nconst P_SECS = Symbol('secs');\nconst P_SERVER = Symbol('server');\nconst P_IP = Symbol('ip');\nconst P_NETVER = Symbol('netver');\nconst P_SENT = Symbol('sent');\nconst P_APPVER = Symbol('appver');\nconst P_PORT = Symbol('port');\n\n/**\n * Holds information about a node connection.\n */\nclass Connection extends Abstract {\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n    this[P_RECV] = parseInt(data.recv, 10);\n    this[P_TIMEDIFF] = parseInt(data.timediff, 10);\n    this[P_NETVER_A] = parseInt(data.netver_a, 10);\n    this[P_SECS] = parseInt(data.secs, 10);\n    this[P_SERVER] = !!data.server;\n    this[P_IP] = data.ip;\n    this[P_NETVER] = parseInt(data.netver, 10);\n    this[P_SENT] = parseInt(data.sent, 10);\n    this[P_APPVER] = data.appver;\n    this[P_PORT] = parseInt(data.port, 10);\n  }\n\n  /**\n   * Gets the number of received bytes from the connection.\n   *\n   * @returns {Number}\n   */\n  get recv() {\n    return this[P_RECV];\n  }\n\n  /**\n   * Gets the time difference of the current and the remote node in seconds.\n   *\n   * @returns {Number}\n   */\n  get timeDiff() {\n    return this[P_TIMEDIFF];\n  }\n\n  /**\n   * Net protocol available of other node\n   *\n   * @returns {Number}\n   */\n  get netVerA() {\n    return this[P_NETVER_A];\n  }\n\n  /**\n   * The duration of the connection.\n   *\n   * @returns {Number}\n   */\n  get secs() {\n    return this[P_SECS];\n  }\n\n  /**\n   * A flag indicating whether the other node is a server node (daemon).\n   * @returns {*}\n   */\n  get server() {\n    return this[P_SERVER];\n  }\n\n  /**\n   * The IP of the remote node.\n   *\n   * @returns {*}\n   */\n  get ip() {\n    return this[P_IP];\n  }\n\n  /**\n   * The netprotocol version of the other node.\n   *\n   * @returns {*}\n   */\n  get netVer() {\n    return this[P_NETVER];\n  }\n\n  /**\n   * The bytes sent to the other node.\n   *\n   * @returns {*}\n   */\n  get sent() {\n    return this[P_SENT];\n  }\n\n  /**\n   * The node version.\n   *\n   * @returns {*}\n   */\n  get appVer() {\n    return this[P_APPVER];\n  }\n\n  /**\n   * The port of the other node.\n   *\n   * @returns {*}\n   */\n  get port() {\n    return this[P_PORT];\n  }\n}\n\nmodule.exports = Connection;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  BaseAction: require('./BaseAction'),\n  OperationAction: require('./OperationAction'),\n  PagedAction: require('./PagedAction'),\n  SignOperationAction: require('./SignOperationAction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  ConnectionError: require('./ConnectionError'),\n  ResultError: require('./ResultError')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nmodule.exports = {\n  Account: require('./Account'),\n  Block: require('./Block'),\n  NodeStatus: require('./NodeStatus'),\n  NetStats: require('./NetStats'),\n  NetProtocol: require('./NetProtocol'),\n  NodeServer: require('./NodeServer'),\n  Operation: require('./Operation'),\n  Changer: require('./Changer'),\n  Receiver: require('./Receiver'),\n  Sender: require('./Sender'),\n  WalletPublicKey: require('./WalletPublicKey')\n};\n"],"sourceRoot":""}