{"version":3,"sources":["webpack://@sbx/json-rpc/webpack/universalModuleDefinition","webpack://@sbx/json-rpc/webpack/bootstrap","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base-x/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/base64-js/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bignumber.js/bignumber.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/bs58/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/buffer/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/ieee754/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/isarray/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/client/browser.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/jayson/lib/generateRequest.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_Symbol.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_apply.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_arrayLikeKeys.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_assignValue.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseAssignValue.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseGetTag.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsArguments.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsNative.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseIsTypedArray.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseKeysIn.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseRest.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseSetToString.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseTimes.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_baseUnary.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_copyObject.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_coreJsData.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_createAssigner.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_defineProperty.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_freeGlobal.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getNative.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getRawTag.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_getValue.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIndex.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isIterateeCall.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isMasked.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_isPrototype.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nativeKeysIn.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_nodeUtil.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_objectToString.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_overRest.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_root.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_setToString.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_shortOut.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/_toSource.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/assignIn.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/constant.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/eq.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/extend.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/identity.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArguments.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArray.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isArrayLike.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isBuffer.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isFunction.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isLength.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObject.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isObjectLike.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isString.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isTypedArray.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/isUndefined.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/keysIn.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/negate.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/lodash/stubFalse.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/base.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha256.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/mipher/dist/sha512.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/node-fetch/browser.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/safe-buffer/index.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/bytesToUuid.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/lib/rng-browser.js","webpack://@sbx/json-rpc//home/ben/Code/crypto/pascalcoin/untitled/node_modules/uuid/v4.js","webpack://@sbx/json-rpc/(webpack)/buildin/global.js","webpack://@sbx/json-rpc/(webpack)/buildin/module.js","webpack://@sbx/json-rpc/../common/index.js","webpack://@sbx/json-rpc/../common/src/BC.js","webpack://@sbx/json-rpc/../common/src/Base58.js","webpack://@sbx/json-rpc/../common/src/Endian.js","webpack://@sbx/json-rpc/../common/src/History.js","webpack://@sbx/json-rpc/../common/src/Sha.js","webpack://@sbx/json-rpc/../common/src/Types/AccountName.js","webpack://@sbx/json-rpc/../common/src/Types/AccountNumber.js","webpack://@sbx/json-rpc/../common/src/Types/Currency.js","webpack://@sbx/json-rpc/../common/src/Types/Keys/Curve.js","webpack://@sbx/json-rpc/../common/src/Types/Keys/KeyPair.js","webpack://@sbx/json-rpc/../common/src/Types/Keys/PrivateKey.js","webpack://@sbx/json-rpc/../common/src/Types/Keys/PublicKey.js","webpack://@sbx/json-rpc/../common/src/Types/Keys/index.js","webpack://@sbx/json-rpc/../common/src/Types/OperationHash.js","webpack://@sbx/json-rpc/../common/src/Types/index.js","webpack://@sbx/json-rpc/../common/src/Util.js","webpack://@sbx/json-rpc/./index.js","webpack://@sbx/json-rpc/./src/Actions/BaseAction.js","webpack://@sbx/json-rpc/./src/Actions/OperationAction.js","webpack://@sbx/json-rpc/./src/Actions/PagedAction.js","webpack://@sbx/json-rpc/./src/Actions/SignOperationAction.js","webpack://@sbx/json-rpc/./src/Actions/index.js","webpack://@sbx/json-rpc/./src/Caller.js","webpack://@sbx/json-rpc/./src/Client.js","webpack://@sbx/json-rpc/./src/Errors/ConnectionError.js","webpack://@sbx/json-rpc/./src/Errors/ResultError.js","webpack://@sbx/json-rpc/./src/Errors/index.js","webpack://@sbx/json-rpc/./src/Executor.js","webpack://@sbx/json-rpc/./src/Types/Abstract.js","webpack://@sbx/json-rpc/./src/Types/Account.js","webpack://@sbx/json-rpc/./src/Types/Block.js","webpack://@sbx/json-rpc/./src/Types/Changer.js","webpack://@sbx/json-rpc/./src/Types/NetProtocol.js","webpack://@sbx/json-rpc/./src/Types/NetStats.js","webpack://@sbx/json-rpc/./src/Types/NodeServer.js","webpack://@sbx/json-rpc/./src/Types/NodeStatus.js","webpack://@sbx/json-rpc/./src/Types/Operation.js","webpack://@sbx/json-rpc/./src/Types/RawOperations.js","webpack://@sbx/json-rpc/./src/Types/Receiver.js","webpack://@sbx/json-rpc/./src/Types/Sender.js","webpack://@sbx/json-rpc/./src/Types/WalletPublicKey.js","webpack://@sbx/json-rpc/./src/Types/index.js"],"names":["module","exports","Base58","require","BC","Endian","History","Sha","Util","Types","P_BUFFER","Symbol","constructor","buffer","Buffer","from","data","stringType","Uint8Array","fromHex","fromString","hex","strict","length","Error","test","str","fromInt","int","nBytes","parseInt","toString","instance","prepend","repeat","toBinary","toHex","lowerCase","toLowerCase","toUpperCase","toInt","hexLength","switchEndian","match","reverse","join","slice","start","end","concat","bytes","reduce","prev","curr","Object","append","equals","bc","compare","bs58","encode","decode","BIG_ENDIAN","LITTLE_ENDIAN","detect","b","ArrayBuffer","a","Uint32Array","c","isLittleEndian","isBigEndian","PIP_0010","INFLATION_REDUCTION","isInflationReduction","block","PIP_0009","RANDOM_HASH","isRandomHash","PIP_0011","DEVELOPER_REWARD","isDeveloperReward","sha256","sha512","buffers","hasher","SHA256","forEach","update","digest","SHA512","P_VALUE","CHARS_TO_ESCAPE","split","REGEX_TO_ESCAPE","map","escapeRegex","ALLOWED_ALL","ALLOWED_START","AccountName","value","validate","pos","indexOf","toStringEscaped","replace","RegExp","isEscape","c1","c2","P_ACCOUNT","P_CHECKSUM","P_CREATED_IN_BLOCK","P_IS_FOUNDATION_REWARD","AccountNumber","account","splitted","s","isNaN","calculateChecksum","Math","floor","checksum","createdInBlock","isFoundationReward","accountNumber","BigNumber","Currency","MIN_FEE","pasc","fromMolina","molina","dividedBy","toFixed","isVague","toStringOpt","decimals","toMolina","parseFloat","add","addValue","plus","sub","subValue","minus","toPositive","isPositive","multipliedBy","eq","isEqualTo","gt","isGreaterThan","lt","isLessThan","lteq","isLessThanOrEqualTo","gteq","isGreaterThanOrEqualTo","serialize","pascal","CURVES","XYL_PUBKEYS","x","y","L_PRIVKEYS","ID","NAME","Curve","CN_SECP256K1","CN_P384","CN_SECT283K1","CN_P521","CI_SECP256K1","CI_P384","CI_SECT283K1","CI_P521","curve","undefined","values","keys","id","name","getDefaultCurve","xylPublicKey","xOrY","lPrivateKey","supported","P_PRIVATE_KEY","P_PUBLIC_KEY","P_CURVE","KeyPair","privateKey","publicKey","P_KEY","P_LENGTH","PrivateKey","key","privateKeyLength","ec","encoded","P_X","P_XL","P_Y","P_YL","PublicKey","yl","xl","ecdh","empty","toBase58","prefix","aux","suffix","raw","fromBase58","base58","decoded","P_BLOCK","P_N_OPERATION","P_MD160","OperationHash","nOperation","md160","opHash","encodeAsPending","Keys","string","promiseWhile","condition","action","whilst","then","Promise","resolve","Client","Executor","Caller","Actions","Errors","P_PARAMS","P_METHOD","P_EXECUTOR","BaseAction","method","params","executor","changeParam","execute","executeTransformArray","destinationType","executeTransformItem","isValid","OperationAction","fee","payload","payload_method","withPayload","payloadMethod","password","pwd","withFee","PagedAction","max","executeAll","all","executeAllReport","item","push","reporter","result","executeAllTransformArray","executeAllTransformArrayReport","RawOperations","SignOperationAction","last_n_operation","rawoperations","withLastNOperation","lastNOperation","withRawOperations","jaysonBrowserClient","fetch","ConnectionError","ResultError","P_CLIENT","host","request","callback","options","body","headers","res","text","catch","err","call","reject","error","code","message","RPCCaller","factory","rpcHostAddress","addNode","nodes","getAccount","getWalletAccounts","pubkey","getWalletAccountsCount","getWalletPublicKeys","getWalletPublicKey","getWalletCoins","getBlock","getBlocks","last","getBlockCount","getBlockOperation","opBlock","opblock","getBlockOperations","getAccountOperations","depth","getPendings","getPendingsCount","findOperation","ophash","findAccounts","type","onlyAccountsForSale","exact","minBalance","maxBalance","listed","min_balance","max_balance","sendTo","sender","target","amount","changeKey","newPublicKey","new_pubkey","listAccountForSale","accountTarget","accountSigner","price","sellerAccount","account_target","account_signer","seller_account","delistAccountForSale","buyAccount","buyerAccount","accountToPurchase","buyer_account","account_to_purchase","changeAccountInfo","newName","newType","new_name","new_type","operationsInfo","rawOperations","executeOperations","signChangeAccountInfo","signerPublicKey","signer_pubkey","signSendTo","senderPublicKey","targetPublicKey","sender_pubkey","target_pubkey","signChangeKey","oldPublicKey","old_pubkey","signListAccountForSale","lockedUntilBlock","locked_until_block","nodeStatus","decodePubKey","payloadDecrypt","passwords","pwds","P_ORIGINAL","P_MESSAGE","originalFetchError","original","P_CODE","P_CALLER","Block","WalletPublicKey","Account","transformRpcParams","newParams","field","newField","caller","transformCallback","r","response","DestinationType","ri","P_INITIALIZATION_DATA","Abstract","initializationData","new","TypeError","__initializationData","P_ENC_PUBKEY","P_BALANCE","P_UPDATED_B","P_STATE","P_NAME","P_TYPE","P_LOCKED_UNTIL_BLOCK","P_PRICE","P_SELLER_ACCOUNT","P_PRIVATE_SALE","P_NEW_ENC_PUBKEY","STATE_LISTED","STATE_NORMAL","enc_pubkey","balance","n_operation","updated_b","state","private_sale","new_enc_pubkey","updatedB","privateSale","isForSale","P_REWARD","P_FEE","P_VER","P_VER_A","P_TIMESTAMP","P_TARGET","P_NONCE","P_PAYLOAD","P_SBH","P_OPH","P_POW","P_HASHRATEKHS","P_MATURATION","P_OPERATIONS","reward","ver","ver_a","timestamp","nonce","sbh","oph","pow","hashratekhs","maturation","operations","verA","createdAccounts","P_NEW_NAME","P_NEW_TYPE","P_ACCOUNT_PRICE","Changer","account_price","accountPrice","NetProtocol","P_BRECEIVED","P_SERVERS_T","P_TSERVERS","P_TOTAL","P_BSEND","P_SERVERS","P_CLIENTS","P_ACTIVE","P_TCLIENTS","NetStats","breceived","servers_t","tservers","total","bsend","servers","clients","active","tclients","serversT","P_PORT","P_LASTCON","P_ATTEMPTS","P_IP","NodeServer","port","lastcon","attempts","ip","P_READY","P_READY_S","P_STATUS_S","P_LOCKED","P_BLOCKS","P_NODESERVERS","P_NETSTATS","P_VERSION","P_NETPROTOCOL","P_OPENSSL","NodeStatus","ready","ready_s","status_s","locked","blocks","version","openssl","netprotocol","netstats","nodeservers","ns","readyS","statusS","Sender","Receiver","P_VALID","P_ERRORS","P_TIME","P_OPBLOCK","P_OPTYPE","P_OPTXT","P_AMOUNT","P_OPHASH","P_OLD_OPHASH","P_SUBTYPE","P_SIGNER_ACCOUNT","P_CHANGERS","P_SENDERS","P_RECEIVERS","Operation","BLOCKCHAIN_REWARD","TRANSACTION","CHANGE_KEY","RECOVER_FUNDS","LIST_FOR_SALE","DELIST","BUY","CHANGE_KEY_ACCOUNT","CHANGE_ACCOUNT_INFO","MULTI_OPERATION","DATA","valid","errors","time","optype","optxt","old_ophash","subtype","signer_account","senders","receivers","changers","opType","opTxt","oldOpHash","signerAccount","isBlockchainReward","isTransaction","isChangeKey","isRecoverFunds","isListForSale","isDelist","isBuy","isChangeKeyAccount","isChangeAccountInfo","isMultiOperation","isData","isPending","isZeroFeeError","P_RAWOPERATIONS","P_CAN_USE","P_B58_PUBKEY","P_EC_NID","can_use","b58_pubkey","ec_nid","canUse","base58PublicKey","ecNid"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,4DAAa;;AAEpC;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,4CAA4C;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,WAAW;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,4CAA4C;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrJY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtJA,mCAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;;;AAGd;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAwD;AACzF;;;AAGA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,SAAS;;AAEvC;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,OAAO;;AAEP,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,uFAAuF,EAAE;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;;AAE3C;AACA,4BAA4B,8BAA8B;;AAE1D;AACA;;AAEA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA,gBAAgB,KAAK;AACrB;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,2BAA2B,gBAAgB;AAC3C,2BAA2B,gBAAgB;AAC3C,2BAA2B,QAAQ;AACnC,2BAA2B,OAAO;AAClC,8BAA8B,OAAO;AACrC,2BAA2B,OAAO;AAClC;AACA,2BAA2B,OAAO;AAClC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,6BAA6B,OAAO;AACpC,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA,uCAAuC,kEAAkE,GAAG,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,0BAA0B,OAAO;AACjC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,mDAAmD,EAAE;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,SAAS;;AAET,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,GAAG;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2CAA2C;AACjE,sBAAsB;AACtB,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,kBAAkB,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;;AAEA,kBAAkB,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,YAAY;;AAE1B;AACA;AACA;AACA,SAAS;;AAET;AACA,uBAAuB,YAAY;;AAEnC;AACA,+BAA+B,SAAS;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB,iCAAiC,QAAQ;;AAEzC;;AAEA,qBAAqB,gBAAgB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,cAAc;;AAE5B;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,qBAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,UAAU;;AAEvC;AACA,+BAA+B,QAAQ;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,2BAA2B,QAAQ;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;;AAE1C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,gCAAgC,SAAS;;AAEzC;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,yCAAyC,KAAK;AAC9C,WAAW;AACX;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;;AAErB;AACA,oBAAoB,SAAS;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,EAAE;AACjD,4CAA4C,EAAE,UAAU,EAAE;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,SAAS;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA;AACA,yBAAyB,SAAS;;AAElC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,EAAE;;AAEpB;AACA;;AAEA;AACA,sCAAsC,SAAS;AAC/C;AACA,2BAA2B,SAAS;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,eAAe;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,aAAa;AACvC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC,YAAY,wBAAwB;AACpC;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,EAAE;;AAEd;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,GAAG;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,KAAK;AACxB;AACA,OAAO;;AAEP;AACA;;AAEA,uBAAuB,OAAO;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,KAAK;AAC5B;;AAEA;AACA,YAAY,OAAO;;AAEnB;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,YAAY;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,KAAK;;AAEvC;AACA;;AAEA,mBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,cAAc,KAAK;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,GAAG;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,cAAc,aAAa;;AAE3B;AACA,sBAAsB,SAAS;AAC/B;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,EAAE;AAChB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb,gDAAgD,IAAI,OAAO,IAAI;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,iBAAiB,OAAO;AACxB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA,oCAAoC,4BAA4B,IAAI,GAAG;AACvE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,gCAAgC,mDAAmD,GAAG,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,OAAO;AACjB;AACA;AACA,YAAY,KAAK;AACjB;AACA;;AAEA;AACA,sBAAsB,0BAA0B;;AAEhD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,OAAO;;AAEtB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,KAAK;AAC7B;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;AACA,MAAM,IAAyC;AAC/C,IAAI,mCAAO,aAAa,kBAAkB,EAAE;AAAA,oGAAC;;AAE7C;AACA,GAAG,MAAM,EAUN;AACH,CAAC;;;;;;;;;;;;AC91FD,YAAY,mBAAO,CAAC,kDAAQ;AAC5B;;AAEA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,wDAAW;AAChC,cAAc,mBAAO,CAAC,oDAAS;AAC/B,cAAc,mBAAO,CAAC,oDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;ACJa;;AAEb,aAAa,mBAAO,CAAC,0DAAe;AACpC,cAAc,mBAAO,CAAC,4DAAgB;AACtC,iBAAiB,mBAAO,CAAC,kEAAmB;AAC5C,eAAe,mBAAO,CAAC,8DAAiB;AACxC,kBAAkB,mBAAO,CAAC,oEAAoB;AAC9C,aAAa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ClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;;;;;ACxBA,aAAa,mBAAO,CAAC,uDAAW;AAChC,gBAAgB,mBAAO,CAAC,6DAAc;AACtC,qBAAqB,mBAAO,CAAC,uEAAmB;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3BA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,6DAAc;AACvC,eAAe,mBAAO,CAAC,2DAAa;AACpC,eAAe,mBAAO,CAAC,yDAAY;AACnC,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9CA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,eAAe,mBAAO,CAAC,yDAAY;AACnC,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AAC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AC,6CAAM;AACvB,kBAAkB,mBAAO,CAAC,+DAAe;AACzC,cAAc,mBAAO,CAAC,yDAAY;AAClC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7BA,iBAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA,+DAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA,YAAY,mBAAO,CAAC,qDAAU;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnCA,iBAAiB,mBAAO,CAAC,+DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACRA,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;;AAEA;;;;;;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,qBAAqB,mBAAO,CAAC,uEAAmB;AAChD,aAAa,mBAAO,CAAC,qDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,UAAU;AACV;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA,iBAAiB,mBAAO,CAAC,yDAAY;;;;;;;;;;;;ACArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,6DAAc;AACvC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA,yDAAW,mBAAO,CAAC,mDAAS;AAC5B,gBAAgB,mBAAO,CAAC,2DAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrCA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,eAAe,mBAAO,CAAC,yDAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5BA,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,cAAc,mBAAO,CAAC,uDAAW;AACjC,mBAAmB,mBAAO,CAAC,iEAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7BA,uBAAuB,mBAAO,CAAC,2EAAqB;AACpD,gBAAgB,mBAAO,CAAC,6DAAc;AACtC,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA,oBAAoB,mBAAO,CAAC,qEAAkB;AAC9C,iBAAiB,mBAAO,CAAC,+DAAe;AACxC,kBAAkB,mBAAO,CAAC,+DAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,wBAAwB,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,QAAQ;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA,2CAA2C,sBAAsB,EAAE;AACnE;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC,2CAA2C;;;;;;;;;;;;;ACxW/B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACvMa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChSa;;AAEb;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD,qCAAqC,eAAe;AACpD,qCAAqC,eAAe;AACpD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mC;;;;;;;;;;;ACtBA;AACA,aAAa,mBAAO,CAAC,kDAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,6DAAW;AAC7B,kBAAkB,mBAAO,CAAC,qEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;A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","file":"@sbx/json-rpc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@sbx/json-rpc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@sbx/json-rpc\"] = factory();\n\telse\n\t\troot[\"@sbx/json-rpc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nconst Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n\n  const BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n    BASE_MAP[xc] = i\n  }\n\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n\n  function encode (source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n    if (source.length === 0) return ''\n\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (256 * b58[it]) >>> 0\n        b58[it] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      pbegin++\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length\n    while (it !== size && b58[it] === 0) {\n      it++\n    }\n\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n\n    return str\n  }\n\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String')\n    if (source.length === 0) return Buffer.alloc(0)\n\n    let psz = 0\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return\n\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n\n      // Invalid character\n      if (carry === 255) return\n\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (BASE * b256[it]) >>> 0\n        b256[it] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      psz++\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return\n\n    // Skip leading zeroes in b256.\n    let it = size - length\n    while (it !== size && b256[it] === 0) {\n      it++\n    }\n\n    const vch = Buffer.allocUnsafe(zeroes + (size - it))\n    vch.fill(0x00, 0, zeroes)\n\n    let j = zeroes\n    while (it !== size) {\n      vch[j++] = b256[it++]\n    }\n\n    return vch\n  }\n\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","module.exports = require('./assignIn');\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief mipher interface, convert and util functions\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n///////////////////////////////////////////////////////////////////////////////\r\n// V E R S I O N\r\nexports.version = '1.1.4';\r\n///////////////////////////////////////////////////////////////////////////////\r\n// C O N V E R T E R\r\nvar Convert;\r\n(function (Convert) {\r\n    /**\r\n     * Convert a string (UTF-8 encoded) to a byte array\r\n     * @param {String} str UTF-8 encoded string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function str2bin(str) {\r\n        str = str.replace(/\\r\\n/g, '\\n');\r\n        var bin = new Uint8Array(str.length * 3), p = 0;\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if (c < 128) {\r\n                bin[p++] = c;\r\n            }\r\n            else if (c < 2048) {\r\n                bin[p++] = (c >>> 6) | 192;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n            else {\r\n                bin[p++] = (c >>> 12) | 224;\r\n                bin[p++] = ((c >>> 6) & 63) | 128;\r\n                bin[p++] = (c & 63) | 128;\r\n            }\r\n        }\r\n        return bin.subarray(0, p);\r\n    }\r\n    Convert.str2bin = str2bin;\r\n    /**\r\n     * Convert a hex string to byte array\r\n     * @param {String} hex Hex string\r\n     * @return {Uint8Array} Byte array\r\n     */\r\n    function hex2bin(hex) {\r\n        if (hex.indexOf('0x') === 0 || hex.indexOf('0X') === 0) {\r\n            hex = hex.substr(2);\r\n        }\r\n        if (hex.length % 2) {\r\n            hex += '0';\r\n        }\r\n        var bin = new Uint8Array(hex.length >>> 1);\r\n        for (var i = 0, len = hex.length >>> 1; i < len; i++) {\r\n            bin[i] = parseInt(hex.substr(i << 1, 2), 16);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.hex2bin = hex2bin;\r\n    /**\r\n     * Convert a 32 bit integer number to a 4 byte array, LSB is first\r\n     * @param {Number} integer Integer number\r\n     * @return {Uint8Array} bin 4 byte array\r\n     */\r\n    function int2bin(integer) {\r\n        var bin = new Uint8Array(4);\r\n        bin[0] = (integer) & 0xff;\r\n        bin[1] = (integer >>> 8) & 0xff;\r\n        bin[2] = (integer >>> 16) & 0xff;\r\n        bin[3] = (integer >>> 24) & 0xff;\r\n        return bin;\r\n    }\r\n    Convert.int2bin = int2bin;\r\n    /**\r\n     * Convert a number to a 8 byte array, LSB is first\r\n     * @param {Number} value Long number\r\n     * @return {Uint8Array} bin 8 byte array\r\n     */\r\n    function number2bin(value) {\r\n        var bin = new Uint8Array(8);\r\n        if (Math.floor(value) === value) {\r\n            var TWO_PWR_32 = 4294967296;\r\n            var lo = (value % TWO_PWR_32) | 0, hi = (value / TWO_PWR_32) | 0;\r\n            if (value < 0) {\r\n                lo = ~(-value % TWO_PWR_32) | 0, hi = ~(-value / TWO_PWR_32) | 0;\r\n                lo = (lo + 1) & 0xffffffff;\r\n                if (!lo)\r\n                    hi++;\r\n            }\r\n            var i = 0;\r\n            bin[i++] = (lo & 0xff);\r\n            bin[i++] = (lo >>> 8) & 0xff;\r\n            bin[i++] = (lo >>> 16) & 0xff;\r\n            bin[i++] = (lo >>> 24) & 0xff;\r\n            bin[i++] = (hi & 0xff);\r\n            bin[i++] = (hi >>> 8) & 0xff;\r\n            bin[i++] = (hi >>> 16) & 0xff;\r\n            bin[i] = (hi >>> 24) & 0xff;\r\n        }\r\n        else {\r\n            var f = new Float64Array([value]);\r\n            var d = new Uint8Array(f.buffer);\r\n            bin.set(d);\r\n        }\r\n        return bin;\r\n    }\r\n    Convert.number2bin = number2bin;\r\n    /**\r\n     * Convert a base64/base64url string to a byte array\r\n     * @param {String} base64 Base64/Base64url encoded string\r\n     * @return {Uint8Array} Byte array or undefined if error\r\n     */\r\n    function base642bin(base64) {\r\n        // remove base64url encoding\r\n        base64 = base64.replace(/-/g, '+').replace(/_/g, '/').replace(/%3d/g, '=');\r\n        // length must be multiple of 4\r\n        if (base64.length % 4 !== 0)\r\n            return;\r\n        var strlen = base64.length / 4 * 3;\r\n        if (base64.charAt(base64.length - 1) === '=')\r\n            strlen--;\r\n        if (base64.charAt(base64.length - 2) === '=')\r\n            strlen--;\r\n        if (typeof atob !== 'undefined') {\r\n            return new Uint8Array(atob(base64).split('').map(function (c) { return c.charCodeAt(0); }));\r\n        }\r\n        else {\r\n            // atob not available\r\n            var decodingTable = new Int8Array([\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, -1, -1, -1, -1, -1,\r\n                -1, -1, -1, 62, -1, 62, -1, 63,\r\n                52, 53, 54, 55, 56, 57, 58, 59,\r\n                60, 61, -1, -1, -1, -2, -1, -1,\r\n                -1, 0, 1, 2, 3, 4, 5, 6,\r\n                7, 8, 9, 10, 11, 12, 13, 14,\r\n                15, 16, 17, 18, 19, 20, 21, 22,\r\n                23, 24, 25, -1, -1, -1, -1, 63,\r\n                -1, 26, 27, 28, 29, 30, 31, 32,\r\n                33, 34, 35, 36, 37, 38, 39, 40,\r\n                41, 42, 43, 44, 45, 46, 47, 48,\r\n                49, 50, 51, -1, -1, -1, -1, -1 // x y z .  . . . .\r\n            ]);\r\n            var p = 0, bin = new Uint8Array(strlen);\r\n            for (var i = 0, len = base64.length; i < len;) {\r\n                var sextet_a = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_b = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_c = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var sextet_d = base64.charAt(i) === '=' || base64.charCodeAt(i) > 'z'.charCodeAt(0) ? 0 : decodingTable[base64.charCodeAt(i)];\r\n                i++;\r\n                var triple = (sextet_a << 18) +\r\n                    (sextet_b << 12) +\r\n                    (sextet_c << 6) +\r\n                    (sextet_d);\r\n                if (base64.charAt(i - 3) !== '=')\r\n                    bin[p++] = (triple >>> 16) & 0xff;\r\n                if (base64.charAt(i - 2) !== '=')\r\n                    bin[p++] = (triple >>> 8) & 0xff;\r\n                if (base64.charAt(i - 1) !== '=')\r\n                    bin[p++] = (triple) & 0xff;\r\n            }\r\n            return bin;\r\n        }\r\n    }\r\n    Convert.base642bin = base642bin;\r\n    /**\r\n     * Convert a byte array to hex string\r\n     * @param {Uint8Array} bin The input byte array\r\n     * @param {Boolean} uppercase True for upper case hex numbers\r\n     * @return {String} Hex sting\r\n     */\r\n    function bin2hex(bin, uppercase) {\r\n        if (uppercase === void 0) { uppercase = false; }\r\n        var hex = uppercase ? '0123456789ABCDEF' : '0123456789abcdef';\r\n        var str = '';\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            str += hex.charAt((bin[i] >>> 4) & 0x0f) + hex.charAt(bin[i] & 0x0f);\r\n            // str += bin[i].toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2hex = bin2hex;\r\n    /**\r\n     * Convert a byte array to string (UTF-8 dedode)\r\n     * @param {Uint8Array} bin UTF-8 text given as array of bytes\r\n     * @return {String} UTF-8 Text string\r\n     */\r\n    function bin2str(bin) {\r\n        var str = '', len = bin.length, i = 0, c, c2, c3;\r\n        while (i < len) {\r\n            c = bin[i];\r\n            if (c < 128) {\r\n                str += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                c2 = bin[i + 1];\r\n                str += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = bin[i + 1];\r\n                c3 = bin[i + 2];\r\n                str += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    Convert.bin2str = bin2str;\r\n    /**\r\n     * Convert a byte value array in a long value array\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @return {Uint32Array} bin values in long format\r\n     */\r\n    function bin2longbin(bin) {\r\n        var longbin = new Uint32Array(bin.length >>> 2);\r\n        for (var i = 0, len = bin.length; i < len; i++) {\r\n            longbin[i >>> 2] |= (bin[i] << ((i % 4) << 3));\r\n        }\r\n        return longbin;\r\n    }\r\n    Convert.bin2longbin = bin2longbin;\r\n    /**\r\n     * Convert a 8 byte (int64) array into a number\r\n     * @param {Uint8Array} bin Array of 8 bytes (int64), LSB is [0], MSB is [7]\r\n     * @return {Number} int64 value as number\r\n     */\r\n    function bin2number(bin) {\r\n        var TWO_PWR_32 = 4294967296;\r\n        var i = 0;\r\n        var lo = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i++] << 24;\r\n        var hi = bin[i++] | bin[i++] << 8 | bin[i++] << 16 | bin[i] << 24;\r\n        return hi * TWO_PWR_32 + ((lo >= 0) ? lo : TWO_PWR_32 + lo);\r\n    }\r\n    Convert.bin2number = bin2number;\r\n    /**\r\n     * Convert byte array to base64/base64url string\r\n     * @param {Uint8Array} bin Array of bytes\r\n     * @param {Boolean} url True if the string should be URL encoded (base64url encoding)\r\n     * @return {String} Base64 encoded string\r\n     */\r\n    function bin2base64(bin, url) {\r\n        if (url === void 0) { url = false; }\r\n        if (typeof btoa !== 'undefined') {\r\n            return url ? btoa(String.fromCharCode.apply(null, bin)).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '%3d') :\r\n                btoa(String.fromCharCode.apply(null, bin));\r\n        }\r\n        else {\r\n            // btoa not available\r\n            var base64 = '', encodingTable = url ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' :\r\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            for (var i = 0, len = bin.length; i < len;) {\r\n                var octet_a = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_b = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var octet_c = i < bin.length ? bin[i] : 0;\r\n                i++;\r\n                var triple = (octet_a << 0x10) + (octet_b << 0x08) + octet_c;\r\n                base64 += encodingTable.charAt((triple >>> 18) & 0x3F);\r\n                base64 += encodingTable.charAt((triple >>> 12) & 0x3F);\r\n                base64 += (i < bin.length + 2) ? encodingTable.charAt((triple >>> 6) & 0x3F) : (url ? '%3d' : '=');\r\n                base64 += (i < bin.length + 1) ? encodingTable.charAt((triple >>> 0) & 0x3F) : (url ? '%3d' : '=');\r\n            }\r\n            return base64;\r\n        }\r\n    }\r\n    Convert.bin2base64 = bin2base64;\r\n})(Convert = exports.Convert || (exports.Convert = {}));\r\n///////////////////////////////////////////////////////////////////////////////\r\n// U T I L S\r\nvar Util;\r\n(function (Util) {\r\n    /**\r\n     * Time constant comparison of two arrays\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Boolean} True if the arrays are equal (length and content), false otherwise\r\n     */\r\n    function compare(lh, rh) {\r\n        if (lh.length !== rh.length) {\r\n            // abort\r\n            return false;\r\n        }\r\n        var i, d = 0, len = lh.length;\r\n        for (i = 0; i < len; i++) {\r\n            d |= lh[i] ^ rh[i];\r\n        }\r\n        return d === 0;\r\n    }\r\n    Util.compare = compare;\r\n    /**\r\n     * Clear an array\r\n     * @param {Uint8Array | Uint16Array | Uint32Array} Array to clear\r\n     */\r\n    function clear(data) {\r\n        data.fill(0);\r\n    }\r\n    Util.clear = clear;\r\n    /**\r\n     * XOR two arrays and return the result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} XORed result array\r\n     */\r\n    function xor(lh, rh) {\r\n        return lh.map(function (val, ind) { return val ^ rh[ind]; });\r\n    }\r\n    Util.xor = xor;\r\n    /**\r\n     * Concat two arrays and returns a new result array\r\n     * @param {Uint8Array} lh First array of bytes\r\n     * @param {Uint8Array} rh Second array of bytes\r\n     * @return {Uint8Array} Concatenated result array\r\n     */\r\n    function concat(lh, rh) {\r\n        var x = new Uint8Array(lh.length + rh.length);\r\n        x.set(lh, 0);\r\n        x.set(rh, lh.length);\r\n        return x;\r\n    }\r\n    Util.concat = concat;\r\n    /**\r\n     * Returns true if LITTLE endian is detected\r\n     * @return {Boolean} True for LE, false for BE\r\n     */\r\n    function litteendian() {\r\n        return (new Uint32Array((new Uint8Array([1, 2, 3, 4])).buffer))[0] === 0x04030201;\r\n    }\r\n    Util.litteendian = litteendian;\r\n})(Util = exports.Util || (exports.Util = {}));\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA256 implementation\r\n//        Generates a 32 byte hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA256 class\r\n */\r\nvar SHA256 = /** @class */ (function () {\r\n    /**\r\n     * SHA256 ctor\r\n     */\r\n    function SHA256() {\r\n        this.hashSize = 32;\r\n        this.buffer = new Uint8Array(64);\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA256.prototype.transform = function () {\r\n        var h = this.H, h0 = h[0], h1 = h[1], h2 = h[2], h3 = h[3], h4 = h[4], h5 = h[5], h6 = h[6], h7 = h[7];\r\n        // convert byte buffer into w[0..15]\r\n        var i, w = new Uint32Array(16);\r\n        for (i = 0; i < 16; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        for (i = 0; i < 64; i++) {\r\n            var tmp = void 0;\r\n            if (i < 16) {\r\n                tmp = w[i];\r\n            }\r\n            else {\r\n                var a = w[(i + 1) & 15];\r\n                var b = w[(i + 14) & 15];\r\n                tmp = w[i & 15] = ((a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[(i + 9) & 15]) | 0;\r\n            }\r\n            tmp = (tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this.K[i]) | 0;\r\n            h7 = h6;\r\n            h6 = h5;\r\n            h5 = h4;\r\n            h4 = h3 + tmp;\r\n            h3 = h2;\r\n            h2 = h1;\r\n            h1 = h0;\r\n            h0 = (tmp + ((h1 & h2) ^ (h3 & (h1 ^ h2))) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10)) | 0;\r\n        }\r\n        h[0] = (h[0] + h0) | 0;\r\n        h[1] = (h[1] + h1) | 0;\r\n        h[2] = (h[2] + h2) | 0;\r\n        h[3] = (h[3] + h3) | 0;\r\n        h[4] = (h[4] + h4) | 0;\r\n        h[5] = (h[5] + h5) | 0;\r\n        h[6] = (h[6] + h6) | 0;\r\n        h[7] = (h[7] + h7) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Array} msg Additional message data as byte array\r\n     * @return {SHA256} this\r\n     */\r\n    SHA256.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 512 bit (64 byte chunks)\r\n        for (var i = 0, len = msg.length; i < len; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 64) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 56\r\n        while (idx !== 56) {\r\n            if (idx === 64) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[56] = (c[1] >>> 24) & 0xff;\r\n        b[57] = (c[1] >>> 16) & 0xff;\r\n        b[58] = (c[1] >>> 8) & 0xff;\r\n        b[59] = (c[1] >>> 0) & 0xff;\r\n        b[60] = (c[0] >>> 24) & 0xff;\r\n        b[61] = (c[0] >>> 16) & 0xff;\r\n        b[62] = (c[0] >>> 8) & 0xff;\r\n        b[63] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var hash = new Uint8Array(32), i;\r\n        for (i = 0; i < 8; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i] >>> 0) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Message data as byte array\r\n     * @return {Uint8Array} Hash as 32 byte array\r\n     */\r\n    SHA256.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA256.prototype.selftest = function () {\r\n        var cumulative = new SHA256(), sha = new SHA256();\r\n        var toBeHashed = '', hash, i, n;\r\n        for (i = 0; i < 10; i++) {\r\n            for (n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === 'f305c76d5d457ddf04f1927166f5e13429407049a5c5f29021916321fcdcd8b4';\r\n    };\r\n    return SHA256;\r\n}());\r\nexports.SHA256 = SHA256;\r\n","\"use strict\";\r\n///////////////////////////////////////////////////////////////////////////////\r\n// \\author (c) Marco Paland (marco@paland.com)\r\n//             2015-2018, PALANDesign Hannover, Germany\r\n//\r\n// \\license The MIT License (MIT)\r\n//\r\n// This file is part of the mipher crypto library.\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n// \\brief SHA512 implementation\r\n//        Generates a 64 byte (512 bit) hash value\r\n//\r\n///////////////////////////////////////////////////////////////////////////////\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar base_1 = require(\"./base\");\r\n/**\r\n * SHA512 class\r\n */\r\nvar SHA512 = /** @class */ (function () {\r\n    /**\r\n     * SHA512 ctor\r\n     */\r\n    function SHA512() {\r\n        this.hashSize = 64;\r\n        this.buffer = new Uint8Array(128); // 128 byte array\r\n        this.K = new Uint32Array([\r\n            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\r\n            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\r\n            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\r\n            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\r\n            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\r\n            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\r\n            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\r\n            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\r\n            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\r\n            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\r\n            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\r\n            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\r\n            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\r\n            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\r\n            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\r\n            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\r\n            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\r\n            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\r\n            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\r\n            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\r\n        ]);\r\n        this.init();\r\n    }\r\n    /**\r\n     * Init the hash\r\n     * @return {Object} this\r\n     */\r\n    SHA512.prototype.init = function () {\r\n        this.H = new Uint32Array([0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\r\n            0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179]);\r\n        this.bufferIndex = 0;\r\n        this.count = new Uint32Array(2);\r\n        base_1.Util.clear(this.buffer);\r\n        return this;\r\n    };\r\n    /**\r\n     * Perform one transformation cycle\r\n     */\r\n    SHA512.prototype.transform = function () {\r\n        var h = this.H, h0h = h[0], h0l = h[1], h1h = h[2], h1l = h[3], h2h = h[4], h2l = h[5], h3h = h[6], h3l = h[7], h4h = h[8], h4l = h[9], h5h = h[10], h5l = h[11], h6h = h[12], h6l = h[13], h7h = h[14], h7l = h[15];\r\n        var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\r\n        // convert byte buffer into w[0..31]\r\n        var i, w = new Uint32Array(160);\r\n        for (i = 0; i < 32; i++) {\r\n            w[i] = (this.buffer[(i << 2) + 3]) |\r\n                (this.buffer[(i << 2) + 2] << 8) |\r\n                (this.buffer[(i << 2) + 1] << 16) |\r\n                (this.buffer[(i << 2)] << 24);\r\n        }\r\n        // fill w[32..159]\r\n        var gamma0xl, gamma0xh, gamma0l, gamma0h, gamma1xl, gamma1xh, gamma1l, gamma1h, wrl, wrh, wr7l, wr7h, wr16l, wr16h;\r\n        for (i = 16; i < 80; i++) {\r\n            // Gamma0\r\n            gamma0xh = w[(i - 15) * 2];\r\n            gamma0xl = w[(i - 15) * 2 + 1];\r\n            gamma0h = ((gamma0xl << 31) | (gamma0xh >>> 1)) ^\r\n                ((gamma0xl << 24) | (gamma0xh >>> 8)) ^\r\n                ((gamma0xh >>> 7));\r\n            gamma0l = ((gamma0xh << 31) | (gamma0xl >>> 1)) ^\r\n                ((gamma0xh << 24) | (gamma0xl >>> 8)) ^\r\n                ((gamma0xh << 25) | (gamma0xl >>> 7));\r\n            // Gamma1\r\n            gamma1xh = w[(i - 2) * 2];\r\n            gamma1xl = w[(i - 2) * 2 + 1];\r\n            gamma1h = ((gamma1xl << 13) | (gamma1xh >>> 19)) ^\r\n                ((gamma1xh << 3) | (gamma1xl >>> 29)) ^\r\n                ((gamma1xh >>> 6));\r\n            gamma1l = ((gamma1xh << 13) | (gamma1xl >>> 19)) ^\r\n                ((gamma1xl << 3) | (gamma1xh >>> 29)) ^\r\n                ((gamma1xh << 26) | (gamma1xl >>> 6));\r\n            // shortcuts\r\n            wr7h = w[(i - 7) * 2],\r\n                wr7l = w[(i - 7) * 2 + 1],\r\n                wr16h = w[(i - 16) * 2],\r\n                wr16l = w[(i - 16) * 2 + 1];\r\n            // W(round) = gamma0 + W(round - 7) + gamma1 + W(round - 16)\r\n            wrl = gamma0l + wr7l;\r\n            wrh = gamma0h + wr7h + ((wrl >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n            wrl += gamma1l;\r\n            wrh += gamma1h + ((wrl >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n            wrl += wr16l;\r\n            wrh += wr16h + ((wrl >>> 0) < (wr16l >>> 0) ? 1 : 0);\r\n            // store\r\n            w[i * 2] = wrh;\r\n            w[i * 2 + 1] = wrl;\r\n        }\r\n        // compress\r\n        var chl, chh, majl, majh, sig0l, sig0h, sig1l, sig1h, krl, krh, t1l, t1h, t2l, t2h;\r\n        for (i = 0; i < 80; i++) {\r\n            // Ch\r\n            chh = (eh & fh) ^ (~eh & gh);\r\n            chl = (el & fl) ^ (~el & gl);\r\n            // Maj\r\n            majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n            majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n            // Sigma0\r\n            sig0h = ((al << 4) | (ah >>> 28)) ^ ((ah << 30) | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\r\n            sig0l = ((ah << 4) | (al >>> 28)) ^ ((al << 30) | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\r\n            // Sigma1\r\n            sig1h = ((el << 18) | (eh >>> 14)) ^ ((el << 14) | (eh >>> 18)) ^ ((eh << 23) | (el >>> 9));\r\n            sig1l = ((eh << 18) | (el >>> 14)) ^ ((eh << 14) | (el >>> 18)) ^ ((el << 23) | (eh >>> 9));\r\n            // K(round)\r\n            krh = this.K[i * 2];\r\n            krl = this.K[i * 2 + 1];\r\n            // t1 = h + sigma1 + ch + K(round) + W(round)\r\n            t1l = hl + sig1l;\r\n            t1h = hh + sig1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n            t1l += chl;\r\n            t1h += chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n            t1l += krl;\r\n            t1h += krh + ((t1l >>> 0) < (krl >>> 0) ? 1 : 0);\r\n            t1l = t1l + w[i * 2 + 1];\r\n            t1h += w[i * 2] + ((t1l >>> 0) < (w[i * 2 + 1] >>> 0) ? 1 : 0);\r\n            // t2 = sigma0 + maj\r\n            t2l = sig0l + majl;\r\n            t2h = sig0h + majh + ((t2l >>> 0) < (sig0l >>> 0) ? 1 : 0);\r\n            // update working variables\r\n            hh = gh;\r\n            hl = gl;\r\n            gh = fh;\r\n            gl = fl;\r\n            fh = eh;\r\n            fl = el;\r\n            el = (dl + t1l) | 0;\r\n            eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n            dh = ch;\r\n            dl = cl;\r\n            ch = bh;\r\n            cl = bl;\r\n            bh = ah;\r\n            bl = al;\r\n            al = (t1l + t2l) | 0;\r\n            ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n        }\r\n        // intermediate hash\r\n        h0l = h[1] = (h0l + al) | 0;\r\n        h[0] = (h0h + ah + ((h0l >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\r\n        h1l = h[3] = (h1l + bl) | 0;\r\n        h[2] = (h1h + bh + ((h1l >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\r\n        h2l = h[5] = (h2l + cl) | 0;\r\n        h[4] = (h2h + ch + ((h2l >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\r\n        h3l = h[7] = (h3l + dl) | 0;\r\n        h[6] = (h3h + dh + ((h3l >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n        h4l = h[9] = (h4l + el) | 0;\r\n        h[8] = (h4h + eh + ((h4l >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\r\n        h5l = h[11] = (h5l + fl) | 0;\r\n        h[10] = (h5h + fh + ((h5l >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\r\n        h6l = h[13] = (h6l + gl) | 0;\r\n        h[12] = (h6h + gh + ((h6l >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\r\n        h7l = h[15] = (h7l + hl) | 0;\r\n        h[14] = (h7h + hh + ((h7l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\r\n    };\r\n    /**\r\n     * Update the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {SHA512} this\r\n     */\r\n    SHA512.prototype.update = function (msg) {\r\n        msg = msg || new Uint8Array(0);\r\n        // process the msg as many times as possible, the rest is stored in the buffer\r\n        // message is processed in 1024 bit (128 byte chunks)\r\n        for (var i = 0; i < msg.length; i++) {\r\n            this.buffer[this.bufferIndex++] = msg[i];\r\n            if (this.bufferIndex === 128) {\r\n                this.transform();\r\n                this.bufferIndex = 0;\r\n            }\r\n        }\r\n        // counter update (number of message bits)\r\n        var c = this.count;\r\n        if ((c[0] += (msg.length << 3)) < (msg.length << 3)) {\r\n            c[1]++;\r\n        }\r\n        c[1] += (msg.length >>> 29);\r\n        return this;\r\n    };\r\n    /**\r\n     * Finalize the hash with additional message data\r\n     * @param {Uint8Array} msg Additional message data as byte array\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.digest = function (msg) {\r\n        this.update(msg);\r\n        // append '1'\r\n        var b = this.buffer, idx = this.bufferIndex;\r\n        b[idx++] = 0x80;\r\n        // zeropad up to byte pos 112\r\n        while (idx !== 112) {\r\n            if (idx === 128) {\r\n                this.transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        // append length in bits\r\n        var c = this.count;\r\n        b[112] = b[113] = b[114] = b[115] = b[116] = b[117] = b[118] = b[119] = 0;\r\n        b[120] = (c[1] >>> 24) & 0xff;\r\n        b[121] = (c[1] >>> 16) & 0xff;\r\n        b[122] = (c[1] >>> 8) & 0xff;\r\n        b[123] = (c[1] >>> 0) & 0xff;\r\n        b[124] = (c[0] >>> 24) & 0xff;\r\n        b[125] = (c[0] >>> 16) & 0xff;\r\n        b[126] = (c[0] >>> 8) & 0xff;\r\n        b[127] = (c[0] >>> 0) & 0xff;\r\n        this.transform();\r\n        // return the hash as byte array\r\n        var i, hash = new Uint8Array(64);\r\n        for (i = 0; i < 16; i++) {\r\n            hash[(i << 2) + 0] = (this.H[i] >>> 24) & 0xff;\r\n            hash[(i << 2) + 1] = (this.H[i] >>> 16) & 0xff;\r\n            hash[(i << 2) + 2] = (this.H[i] >>> 8) & 0xff;\r\n            hash[(i << 2) + 3] = (this.H[i]) & 0xff;\r\n        }\r\n        // clear internal states and prepare for new hash\r\n        this.init();\r\n        return hash;\r\n    };\r\n    /**\r\n     * All in one step\r\n     * @param {Uint8Array} msg Additional message data\r\n     * @return {Uint8Array} Hash as 64 byte array\r\n     */\r\n    SHA512.prototype.hash = function (msg) {\r\n        return this.init().digest(msg);\r\n    };\r\n    /**\r\n     * Performs a quick selftest\r\n     * @return {Boolean} True if successful\r\n     */\r\n    SHA512.prototype.selftest = function () {\r\n        var cumulative = new SHA512(), sha = new SHA512();\r\n        var toBeHashed = '', hash;\r\n        for (var i = 0; i < 10; i++) {\r\n            for (var n = 100 * i; n < 100 * (i + 1); n++) {\r\n                hash = base_1.Convert.bin2hex(sha.hash(base_1.Convert.str2bin(toBeHashed)));\r\n                cumulative.update(base_1.Convert.str2bin(hash));\r\n                toBeHashed = (hash.substring(0, 2) + toBeHashed).substring(0, n + 1);\r\n            }\r\n        }\r\n        hash = base_1.Convert.bin2hex(cumulative.digest());\r\n        return hash === '602923787640dd6d77a99b101c379577a4054df2d61f39c74172cafa2d9f5b26a11b40b7ba4cdc87e84a4ab91b85391cb3e1c0200f3e3d5e317486aae7bebbf3';\r\n    };\r\n    return SHA512;\r\n}());\r\nexports.SHA512 = SHA512;\r\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = {\n  Base58: require('./src/Base58'),\n  BC: require('./src/BC'),\n  Endian: require('./src/Endian'),\n  History: require('./src/History'),\n  Sha: require('./src/Sha'),\n  Util: require('./src/Util'),\n  Types: require('./src/Types')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_BUFFER = Symbol('buffer');\n\n/**\n * A BC value as defined in PascalCoin. In essence its a wrapper for\n * a buffer.\n */\nclass BC {\n  /**\n     * Constructor\n     *\n   * @param {Buffer|Uint8Array} buffer\n     */\n  constructor(buffer) {\n    this[P_BUFFER] = Buffer.from(buffer);\n  }\n\n  /**\n   * Gets a BC instance from the given value. If a string it expects it to be\n   * in hex format.\n   *\n   * This method it called everywhere, so we make sure that\n   *\n   * @param {Buffer|Uint8Array|BC|String} data\n   * @param {String} stringType\n   * @returns {BC}\n   */\n  static from(data, stringType = 'hex') {\n    if (data instanceof BC) {\n      return data;\n    } else if (data instanceof Buffer) {\n      return new BC(data);\n    } else if (data instanceof Uint8Array) {\n      return new BC(data);\n    }\n\n    if (stringType === 'hex') {\n      return BC.fromHex(data);\n    }\n\n    return BC.fromString(data);\n  }\n\n  /**\n     * Creates a new BC instance from the given hex string.\n     *\n   * @param {string} hex\n   * @param {Boolean} strict\n     * @returns {BC}\n     */\n  static fromHex(hex, strict = true) {\n    if (hex instanceof BC) {\n      return hex;\n    }\n\n    if (hex.length % 2 === 1) {\n      if (strict) {\n        throw new Error('Invalid hex - number of nibbles need to be divideable by 2');\n      } else {\n        hex = `0${hex}`; // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (hex.length > 0 && /^[0-9a-fA-F]+$/.test(hex) === false) {\n      throw new Error('Invalid hex');\n    }\n\n    return new BC(Buffer.from(hex, 'hex'));\n  }\n\n  /**\n     * Creates a new BC instance from the given string.\n     *\n     * @param {string} str\n     * @returns {BC}\n     */\n  static fromString(str) {\n    if (str instanceof BC) {\n      return str;\n    }\n\n    // TODO: UTF8?\n    return new BC(Buffer.from(str));\n  }\n\n  /**\n     * Gets a new BC from an integer.\n     *\n     * @param {Number} int\n     * @param {Number} nBytes\n     * @returns {BC}\n     */\n  static fromInt(int, nBytes = null) {\n    let hex = parseInt(int, 10).toString(16);\n\n    const instance = BC.fromHex(hex, false);\n\n    if (nBytes !== null && instance.length < nBytes) {\n      return instance.prepend(BC.fromHex('00'.repeat(nBytes - instance.length)));\n    }\n    return instance;\n  }\n\n  /**\n     * Gets the binary presentation of the hexa string.\n     *\n     * @returns {string}\n     */\n  toBinary() {\n    return this[P_BUFFER].toString('binary');\n  }\n\n  /**\n     * Gets the BC as a string.\n     *\n     * @returns {string}\n     * // TODO: UTF8?\n     */\n  toString() {\n    return this[P_BUFFER].toString();\n  }\n\n  /**\n   * Gets the BC as hex.\n   *\n   * @returns {string}\n   */\n  toHex(lowerCase = false) {\n    if (lowerCase) {\n      return this[P_BUFFER].toString('hex').toLowerCase();\n    }\n\n    return this[P_BUFFER].toString('hex').toUpperCase();\n  }\n\n  /**\n     * Gets the integer value of the BC.\n     *\n     * @return {Number}\n     */\n  toInt() {\n    return parseInt(this.toHex(), 16);\n  }\n\n  /**\n     * Gets the length of BC bytes.\n     *\n     * @returns {number}\n     */\n  get length() {\n    return this[P_BUFFER].length;\n  }\n\n  /**\n     * Gets the length of the parsed BC (the bytes).\n     *\n     * @returns {number}\n     */\n  get hexLength() {\n    return this.length * 2;\n  }\n\n  /**\n     * Gets a copy of the current buffer.\n     *\n     * @returns {Buffer}\n     */\n  get buffer() {\n    return Buffer.from(this[P_BUFFER].toString('hex'), 'hex');\n  }\n\n  /**\n     * Switches the endianness of the BC.\n     *\n     * @returns {BC}\n     */\n  switchEndian() {\n    return BC.fromHex(\n      this[P_BUFFER].toString('hex').match(/../g).reverse().join(''),\n    );\n  }\n\n  /**\n     * Returns a sub-BC defined by the start and end position.\n     *\n     * @param {Number}start\n     * @param {Number} end\n     * @returns {BC}\n     */\n  slice(start, end) {\n    return new BC(this[P_BUFFER].slice(start, end));\n  }\n\n  /**\n     * Concatenates one or more BC instances and returns a new instance.\n     *\n     * @param {...BC} bytes\n     * @returns {BC}\n     */\n  static concat(...bytes) {\n    return BC.fromHex(bytes.reduce((prev, curr) => {\n      if (prev instanceof Object) {\n        return `${prev.toHex()}${curr.toHex()}`;\n      }\n      return `${prev}${curr.toHex()}`;\n    }));\n  }\n\n  /**\n   * Appends a single BC instance to the current BC and\n   * returns a new instance.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bytes\n   * @returns {BC}\n   */\n  append(bytes) {\n    return BC.concat(this, BC.from(bytes));\n  }\n\n  /**\n     * Appends a single BC instance to the current BC and\n     * returns a new instance.\n     *\n     * @param {BC|Buffer|Uint8Array|String} bytes\n     * @returns {BC}\n     */\n  prepend(bytes) {\n    return BC.concat(BC.from(bytes), this);\n  }\n\n  /**\n   * Gets a value indicating the current bc equals the given bc.\n   *\n   * @param {BC|Buffer|Uint8Array|String} bc\n   * @returns {boolean}\n   */\n  equals(bc) {\n    return Buffer.compare(BC.from(bc).buffer, this.buffer) === 0;\n  }\n}\n\nmodule.exports = BC;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst bs58 = require('bs58');\nconst BC = require('./BC');\n\n/**\n * Contains methods to convert stuff to various formats.\n */\nclass Base58 {\n  /**\n     * Gets the base58 representation of the given buffer.\n     *\n     * @param {BC|Buffer|Uint8Array|String} data\n     * @returns {String}\n     */\n  static encode(data) {\n    return bs58.encode(BC.from(data).buffer);\n  }\n\n  /**\n   * Decodes a Base58 encoded string.\n   *\n   * @param {String} str\n   * @returns {BC}\n   */\n  static decode(str) {\n    return new BC(bs58.decode(str));\n  }\n}\n\nmodule.exports = Base58;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nclass Endian {\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get BIG_ENDIAN() {\n    return 'BE';\n  }\n\n  /**\n   * Gets the identifier for big endian.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get LITTLE_ENDIAN() {\n    return 'LE';\n  }\n\n  /**\n   * Detects the systems endianness.\n   *\n   * @returns {string}\n   */\n  static detect() {\n    var b = new ArrayBuffer(4);\n    var a = new Uint32Array(b);\n    var c = new Uint8Array(b);\n\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return Endian.LITTLE_ENDIAN;\n    }\n    if (c[0] === 0xde) {\n      return Endian.BIG_ENDIAN;\n    }\n\n    throw new Error('unknown endianness');\n  }\n\n  /**\n   * Gets a value indicating whether the system uses little endian.\n   *\n   * @returns {boolean}\n   */\n  static isLittleEndian() {\n    return Endian.detect() === Endian.LITTLE_ENDIAN;\n  }\n\n  /**\n   * Gets a value indicating whether the system uses big endian.\n   *\n   * @returns {boolean}\n   */\n  static isBigEndian() {\n    return Endian.detect() === Endian.BIG_ENDIAN;\n  }\n}\n\nmodule.exports = Endian;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Gets information about forks and features.\n */\nclass History {\n  /**\n   * Gets the block number when 50% inflation reduction was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0010() {\n    return 210240;\n  }\n\n  /**\n   * Gets the block number when PIP-10 was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get INFLATION_REDUCTION() {\n    return History.PIP_0010;\n  }\n\n  /**\n   * Gets a value indicating whether the given block has inflation reduction\n   * activated (PIP-10).\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isInflationReduction(block) {\n    return block >= History.INFLATION_REDUCTION;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0009() {\n    return 260000;\n  }\n\n  /**\n   * Gets the block number when RandomHash was activated.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get RANDOM_HASH() {\n    return History.PIP_0009;\n  }\n\n  /**\n   * Gets a value indicating if randomhash was active at the given block.\n   *\n   * @param {Number} block\n   * @returns {boolean}\n   */\n  static isRandomHash(block) {\n    return block >= History.RANDOM_HASH;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get PIP_0011() {\n    return 210000;\n  }\n\n  /**\n   * Gets the block number when developer reward was introduced.\n   *\n   * @returns {Number}\n   * @constructor\n   */\n  static get DEVELOPER_REWARD() {\n    return History.PIP_0011;\n  }\n\n  /**\n   * Gets a value indicating whether the given block was mined with activated\n   * developer award.\n   *\n   * @param {number} block\n   * @returns {boolean}\n   */\n  static isDeveloperReward(block) {\n    return block >= History.DEVELOPER_REWARD;\n  }\n}\n\nmodule.exports = History;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst sha256 = require('mipher/dist/sha256');\nconst sha512 = require('mipher/dist/sha512');\nconst BC = require('./BC');\n\n/**\n * Holds methods to hash.\n */\nclass Sha {\n  /**\n   * Calculates the sha256 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {BC}\n   */\n  static sha256(...buffers) {\n    const hasher = new sha256.SHA256();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n\n  /**\n   * Calculates the sha512 hash from the given buffers.\n   *\n   * @param {...BC} buffers\n   * @returns {Buffer}\n   */\n  static sha512(...buffers) {\n    const hasher = new sha512.SHA512();\n\n    buffers.forEach(buffer => hasher.update(buffer.buffer));\n    return new BC(Buffer.from(hasher.digest()));\n  }\n}\n\nmodule.exports = Sha;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Util = require('../Util');\n\nconst P_VALUE = Symbol('value');\n\n// the list of characters to escape.\nconst CHARS_TO_ESCAPE = '(){}[]:\"<>'.split('');\nconst REGEX_TO_ESCAPE = `(${CHARS_TO_ESCAPE.map(c => Util.escapeRegex(c)).join('|')})`;\n\nconst ALLOWED_ALL = '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()-+{}[]_:\"|<>,.?/~'.split('');\nconst ALLOWED_START = ALLOWED_ALL.slice(10);\n\n/**\n * AccountName encoding for account names.\n */\nclass AccountName {\n  /**\n   * Constructor\n   * @param {String|AccountName} value\n   */\n  constructor(value) {\n    if (value instanceof AccountName) {\n      this[P_VALUE] = value.toString();\n    } else {\n      this[P_VALUE] = AccountName.validate(value);\n    }\n  }\n\n  /**\n   * Validates a string.\n   *\n   * @param {String} value\n   * @return {String}\n     */\n  static validate(value) {\n    if (value.length === 0) {\n      return value;\n    }\n\n    if (value.length < 3) {\n      throw new Error('Invalid account name, must be at least 3 characters long.');\n    }\n\n    for (let pos = 0; pos < value.length; pos++) {\n      if (pos === 0 && ALLOWED_START.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position 0`);\n      } else if (pos > 0 && ALLOWED_ALL.indexOf(value[pos]) === -1) {\n        throw new Error(`Invalid AccountName encoding - character ${value[pos]} not allowed at position ${pos}`);\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets the string value.\n   *\n   * @returns {String}\n   */\n  toString() {\n    return this[P_VALUE];\n  }\n\n  /**\n   * Gets an escaped string representation for EPasa usage.\n   *\n   * @returns {*}\n   */\n  toStringEscaped() {\n    return this[P_VALUE].replace(new RegExp(REGEX_TO_ESCAPE, 'gm'), '\\\\$1');\n\n  }\n\n  /**\n   * Gets a value indicating whether the current char c1 is an escape modifier\n   * and the second is in the list of chars to escape.\n   *\n   * @param {String} c1\n   * @param {String} c2\n   * @returns {boolean}\n   */\n  static isEscape(c1, c2) {\n    return c1 === '\\\\' && CHARS_TO_ESCAPE.indexOf(c2) > -1;\n  }\n}\n\nmodule.exports = AccountName;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst History = require('../History');\n\nconst P_ACCOUNT = Symbol('account');\nconst P_CHECKSUM = Symbol('checksum');\nconst P_CREATED_IN_BLOCK = Symbol('created_in_block');\nconst P_IS_FOUNDATION_REWARD = Symbol('is_foundation_reward');\n\n/**\n * A simple type that holds an account number in a reliable way.\n */\nclass AccountNumber {\n  /**\n   * Creates a new AccountNumber instance, either from an account string\n   * without checksum (which can be a number), an account string with checksum\n   * or another account instance.\n   *\n   * @param {String|Number|AccountNumber|Account} account\n   */\n  constructor(account) {\n    if (account instanceof AccountNumber) {\n      this[P_ACCOUNT] = account[P_ACCOUNT];\n      this[P_CHECKSUM] = account[P_CHECKSUM];\n    } else if (typeof account === 'string') {\n      const splitted = account.split('-');\n\n      splitted.map(s => {\n        if (isNaN(s) || parseInt(s, 10).toString() !== s) {\n          throw new Error(`Invalid account number part: ${s}`);\n        }\n      });\n\n      if (splitted.length === 2) {\n        this[P_ACCOUNT] = parseInt(splitted[0], 10);\n        this[P_CHECKSUM] = parseInt(splitted[1], 10);\n        if (this[P_CHECKSUM] !== AccountNumber.calculateChecksum(this[P_ACCOUNT])) {\n          throw new Error(`Invalid checksum for account ${this[P_ACCOUNT]}`);\n        }\n      } else {\n        this[P_ACCOUNT] = parseInt(account, 10);\n        this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n      }\n    } else if (typeof account === 'number') {\n      this[P_ACCOUNT] = account;\n      this[P_CHECKSUM] = AccountNumber.calculateChecksum(this[P_ACCOUNT]);\n    } else {\n      throw new Error(`Unable to parse Account: ${account.toString()}`);\n    }\n\n    this[P_CREATED_IN_BLOCK] = Math.floor(this[P_ACCOUNT] / 5);\n    this[P_IS_FOUNDATION_REWARD] = History.isDeveloperReward(this[P_CREATED_IN_BLOCK]) && this[P_ACCOUNT] % 5 === 4;\n  }\n\n  /**\n   * Gets the account number.\n   *\n   * @returns {Number}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the checksum of the account.\n   *\n   * @returns {Number}\n   */\n  get checksum() {\n    return this[P_CHECKSUM];\n  }\n\n  /**\n   * Gets the block number the account was created in.\n   *\n   * @returns {Number}\n   */\n  get createdInBlock() {\n    return this[P_CREATED_IN_BLOCK];\n  }\n\n  /**\n   * Gets a value indicating whether the foundation got this account initially.\n   *\n   * @returns {Boolean}\n   */\n  get isFoundationReward() {\n    return this[P_IS_FOUNDATION_REWARD];\n  }\n\n  /**\n   * Gets the account string.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.account}-${this.checksum}`;\n  }\n\n  /**\n   * Gets a value indicating whether the given account equals the current\n   * account.\n   *\n   * @param {AccountNumber|String|Number} accountNumber\n   * @returns {boolean}\n   */\n  equals(accountNumber) {\n    return (accountNumber !== null && this.toString() === accountNumber.toString());\n  }\n\n  /**\n   * Calculates the checksum for the given account number.\n   *\n   * @param {Number} account\n   * @returns {Number}\n   */\n  static calculateChecksum(account) {\n    return ((account * 101) % 89) + 10;\n  }\n}\n\nmodule.exports = AccountNumber;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BigNumber = require('bignumber.js');\n\nconst P_VALUE = Symbol('value');\n\n/**\n * A simple wrapper around bignumber for the pascal currency and\n * basic math functions.\n */\nclass Currency {\n  static get MIN_FEE() {\n    return new Currency('0.0001');\n  }\n\n  /**\n     * Creates a new Currency instance.\n     *\n     * @param {Number|String|BigNumber|Currency} value\n     */\n  constructor(value) {\n    let pasc = value;\n\n    if (pasc instanceof Currency) {\n      this[P_VALUE] = pasc.value;\n      return;\n    }\n\n    if (typeof pasc === 'string') {\n      pasc = pasc.split(',').join('');\n    }\n\n    this[P_VALUE] = new BigNumber(pasc.toString());\n  }\n\n  static fromMolina(molina) {\n    return new Currency(\n      new BigNumber(molina.toString()).dividedBy('10000')\n    );\n  }\n\n  /**\n     * Gets the BigNumber instance.\n     *\n     * @returns {BigNumber}\n     */\n  get value() {\n    return this[P_VALUE];\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {string}\n     */\n  toString() {\n    return this[P_VALUE].toFixed(4);\n  }\n\n  /**\n   * Gets a value indicating that the current value has more decimals than\n   * allowed.\n   */\n  isVague() {\n    return this.toStringOpt(5) !== this.toStringOpt(4);\n  }\n\n  /**\n   * Gets an optimized pascal value with less zeros as possible.\n   *\n   * @returns {string}\n   */\n  toStringOpt(decimals = 4) {\n    return this[P_VALUE].toFixed(decimals)\n      .replace(new RegExp('[0]+$'), '')\n      .replace(new RegExp('[\\.]+$'), '');\n  }\n\n  /**\n     * Gets the pascal value as a string.\n     *\n     * @returns {Number}\n     */\n  toMolina() {\n    return parseFloat(this[P_VALUE].toString()) * 10000;\n  }\n\n  /**\n     * Adds the given value to the current value and returns a **new**\n     * value.\n     *\n     * @param {Number|String|BigNumber|Currency} addValue\n     * @returns {Currency}\n     */\n  add(addValue) {\n    return new Currency(\n      this.value.plus(new Currency(addValue).value).toFixed(4),\n    );\n  }\n\n  /**\n     * Subtracts the given value from the current value and returns a\n     * **new** value.\n     *\n     * @param {Currency} subValue\n     * @returns {Currency}\n     */\n  sub(subValue) {\n    return new Currency(\n      this.value.minus(new Currency(subValue).value).toFixed(4),\n    );\n  }\n\n  /**\n     * Gets a positive variant of the value. If the value is already\n     * positive, the current instance will be returned, else a new\n     * instance.\n     *\n     * @returns {Currency}\n     */\n  toPositive() {\n    if (!this[P_VALUE].isPositive()) {\n      return new Currency(\n        this[P_VALUE].multipliedBy(-1).toFixed(4),\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Gets a value indicating whether the given value is equal to the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  eq(value) {\n    return this[P_VALUE].isEqualTo(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gt(value) {\n    return this[P_VALUE].isGreaterThan(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower than the current\n   * value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lt(value) {\n    return this[P_VALUE].isLessThan(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is lower or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  lteq(value) {\n    return this[P_VALUE].isLessThanOrEqualTo(new Currency(value).value);\n  }\n\n  /**\n   * Gets a value indicating whether the given value is greater or equal to the\n   * current value.\n   *\n   * @param {Number|String|BigNumber|Currency} value\n   * @returns {boolean}\n   */\n  gteq(value) {\n    return this[P_VALUE].isGreaterThanOrEqualTo(new Currency(value).value);\n  }\n\n  /**\n     * Gets the serialized version of this instance.\n     *\n     * @returns {Object}\n     */\n  serialize() {\n    return {\n      pascal: this.toStringOpt(),\n      molina: this.toMolina()\n    };\n  }\n}\n\nmodule.exports = Currency;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * The list of available curves in pascalcoin.\n */\nconst CURVES = {\n  0: 'empty',\n  714: 'secp256k1',\n  715: 'p384',\n  729: 'sect283k1',\n  716: 'p521'\n};\n\nconst XYL_PUBKEYS = {\n  714: {x: 32, y: 32},\n  715: {x: 48, y: 48},\n  716: {x: 66, y: 66},\n  729: {x: 36, y: 36},\n  0: {x: 0, y: 0}\n};\n\nconst L_PRIVKEYS = {\n  714: 32,\n  715: 48,\n  716: 66,\n  729: 36\n};\n\nconst ID = Symbol('id');\nconst NAME = Symbol('name');\n\n/**\n * Simple elliptic curve representation of keys in pascalcoin.\n */\nclass Curve {\n\n  /**\n   * Gets the curve name of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECP256K1() {\n    return 'secp256k1';\n  }\n\n  /**\n   * Gets the curve name of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P384() {\n    return 'p384';\n  }\n\n  /**\n   * Gets the curve name of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_SECT283K1() {\n    return 'sect283k1';\n  }\n\n  /**\n   * Gets the curve name of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CN_P521() {\n    return 'p521';\n  }\n\n  /**\n   * Gets the curve id of the secp256k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECP256K1() {\n    return 714;\n  }\n\n  /**\n   * Gets the curve id of the p384 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P384() {\n    return 715;\n  }\n\n  /**\n   * Gets the curve id of the sect283k1 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_SECT283K1() {\n    return 729;\n  }\n\n  /**\n   * Gets the curve id of the p521 curve.\n   *\n   * @returns {string}\n   * @constructor\n   */\n  static get CI_P521() {\n    return 716;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Number|String} curve\n   */\n  constructor(curve) {\n    if (typeof curve === 'number') {\n      if (CURVES[curve] === undefined) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[ID] = curve;\n      this[NAME] = CURVES[curve];\n    } else {\n      if (Object.values(CURVES).indexOf(curve.toString()) === -1) {\n        throw new Error(`Unknown curve: ${curve}`);\n      }\n\n      this[NAME] = curve.toString();\n      this[ID] = parseInt(Object.keys(CURVES)[Object.values(CURVES).indexOf(this[NAME])], 10);\n    }\n  }\n\n  /**\n     * Gets the id of the curve.\n     *\n     * @returns {Number}\n     */\n  get id() {\n    return this[ID];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[NAME];\n  }\n\n  /**\n     * Gets the name of the curve.\n     *\n     * @returns {String}\n     */\n  toString() {\n    return this.name;\n  }\n\n  /**\n     * Gets the default curve.\n     *\n     * @returns {Curve}\n     */\n  static getDefaultCurve() {\n    return new Curve(Curve.CI_SECP256K1);\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  xylPublicKey(xOrY) {\n    return XYL_PUBKEYS[this.id][xOrY];\n  }\n\n  /**\n   * Gets the length of either x and y for validation.\n   *\n   * @returns {array}\n   */\n  lPrivateKey() {\n    return L_PRIVKEYS[this.id];\n  }\n\n  /**\n   * Gets a value indicating whether the key is supported for signing /\n   * generation etc.\n   *\n   * @returns {boolean}\n   */\n  get supported() {\n    return this.id !== Curve.CI_SECT283K1 && this.id !== 0;\n  }\n}\n\nmodule.exports = Curve;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PRIVATE_KEY = Symbol('private_key');\nconst P_PUBLIC_KEY = Symbol('public_key');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a private and public keypair.\n */\nclass KeyPair {\n  /**\n     * Creates a new private-public keypair instance.\n     *\n     * @param {PrivateKey} privateKey\n     * @param {PublicKey} publicKey\n     */\n  constructor(privateKey, publicKey) {\n    this[P_CURVE] = privateKey.curve;\n    this[P_PRIVATE_KEY] = privateKey;\n    this[P_PUBLIC_KEY] = publicKey;\n\n    if (privateKey.curve.id !== publicKey.curve.id) {\n      throw new Error('Mixed up curves between private an public key');\n    }\n  }\n\n  /**\n     * Gets the private key.\n     *\n     * @returns {PrivateKey}\n     */\n  get privateKey() {\n    return this[P_PRIVATE_KEY];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {PublicKey}\n     */\n  get publicKey() {\n    return this[P_PUBLIC_KEY];\n  }\n\n  /**\n     * Gets the curve used for the keypair.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n}\n\nmodule.exports = KeyPair;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\nconst Curve = require('./Curve');\n\nconst P_KEY = Symbol('key');\nconst P_CURVE = Symbol('curve');\nconst P_LENGTH = Symbol('length');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PrivateKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} key\n     * @param {Curve} curve\n     */\n  constructor(key, curve) {\n    this[P_KEY] = BC.from(key);\n    this[P_CURVE] = curve;\n    this[P_LENGTH] = key.length;\n\n    const privateKeyLength = curve.lPrivateKey();\n\n    if (this[P_LENGTH] > privateKeyLength) {\n      throw new Error(`Invalid length for curve ${curve.name} - ` +\n          `expected <= ${privateKeyLength}, got ${this[P_LENGTH]}`\n      );\n    }\n\n    /*\n    if (this[P_LENGTH] < privateKeyLength) {\n      this[P_LENGTH] = privateKeyLength;\n      this[P_KEY] = key.prepend(BC.fromHex('00'.repeat(privateKeyLength - this[P_LENGTH])));\n    }*/\n  }\n\n  /**\n     * Gets the key value.\n     *\n     * @returns {BC}\n     */\n  get key() {\n    return this[P_KEY];\n  }\n\n  /**\n     * Gets the ec key.\n     *\n     * @returns {BC}\n     */\n  get ec() {\n    return this.key;\n  }\n\n  /**\n     * Gets the y value of the key.\n     *\n     * @returns {Number}\n     */\n  get length() {\n    return this[P_LENGTH];\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n\n  /**\n   * Encodes a private key to a BC defined by PascalCoin.\n   *\n   * @returns {BC}\n   */\n  encode() {\n    const curve = BC.fromInt(this.curve.id).switchEndian();\n    const length = BC.fromInt(this.length, 2).switchEndian();\n\n    return BC.concat(curve, length, this.key);\n  }\n\n  /**\n   * Decodes a PascalCoin private key string.\n   *\n   * @param {BC|Buffer|Uint8Array|String} encoded\n   * @returns {PrivateKey}\n   */\n  static decode(encoded) {\n    encoded = BC.from(encoded);\n    const curve = encoded.slice(0, 2).switchEndian().toInt();\n    const length = encoded.slice(2, 4).switchEndian().toInt();\n    const key = encoded.slice(4, 4 + length);\n\n    return new PrivateKey(key, new Curve(curve));\n  }\n}\n\nmodule.exports = PrivateKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../../BC');\nconst Curve = require('./Curve');\nconst Sha = require('../../Sha');\nconst Base58 = require('../../Base58');\n\nconst P_X = Symbol('x');\nconst P_XL = Symbol('xl');\nconst P_Y = Symbol('y');\nconst P_YL = Symbol('yl');\nconst P_CURVE = Symbol('curve');\n\n/**\n * Represents a public key in pascalcoin.\n */\nclass PublicKey {\n  /**\n     * Constructor\n     *\n     * @param {BC|Buffer|Uint8Array|String} x\n     * @param {BC|Buffer|Uint8Array|String} y\n     * @param {Curve} curve\n     */\n  constructor(x, y, curve) {\n    x = BC.from(x);\n    y = BC.from(y);\n\n    this[P_X] = x;\n    this[P_Y] = y;\n    this[P_XL] = x.length;\n    this[P_YL] = y.length;\n    this[P_CURVE] = curve;\n\n    if (this[P_XL] > curve.xylPublicKey('x') || this[P_YL] > curve.xylPublicKey('y')) {\n      throw new Error(`Invalid x and/or y length for curve ${curve.name} - ` +\n          `expected <= X${curve.xylPublicKey('x')}:Y${curve.xylPublicKey('y')}, ` +\n          `got X${this[P_XL]}:Y${this[P_YL]}`\n      );\n    }\n  }\n\n  /**\n     * Gets the X value of the key.\n     *\n     * @returns {BC}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the y value of the key.\n     *\n     * @returns {BC}\n     */\n  get y() {\n    return this[P_Y];\n  }\n\n  /**\n     * Gets the length of X.\n     *\n     * @returns {Number}\n     */\n  get yl() {\n    return this[P_YL];\n  }\n\n  /**\n     * Gets the length of Y.\n     *\n     * @returns {Number}\n     */\n  get xl() {\n    return this[P_XL];\n  }\n\n  /**\n     * Gets the used curve.\n     *\n     * @returns {Curve}\n     */\n  get curve() {\n    return this[P_CURVE];\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ec() {\n    return BC.concat(this.x, this.y);\n  }\n\n  /**\n   * Gets the ec key.\n   *\n   * @returns {BC}\n   */\n  get ecdh() {\n    return BC.concat(BC.fromInt(4), this.x, this.y);\n  }\n\n  /**\n     * Gets an empty public key instance.\n     *\n     * @returns {PublicKey}\n     */\n  static empty() {\n    return new PublicKey(\n      BC.fromString(''),\n      BC.fromString(''),\n      new Curve(0),\n    );\n  }\n\n  /**\n   * Encodes a public key to a BC defined by PascalCoin.\n   *\n   * @returns {BC}\n   */\n  encode() {\n    const curve = BC.fromInt(this.curve.id, 2).switchEndian();\n    const xl = BC.fromInt(this.xl, 2).switchEndian();\n    const yl = BC.fromInt(this.yl, 2).switchEndian();\n\n    return BC.concat(curve, xl, this.x, yl, this.y);\n  }\n\n  /**\n   * Decodes an encoded public key.\n   *\n   * @param {BC|Buffer|Uint8Array|String} encoded\n   * @returns {PublicKey}\n   */\n  static decode(encoded) {\n    encoded = BC.from(encoded);\n    const curve = encoded.slice(0, 2).switchEndian().toInt();\n    const xl = encoded.slice(2, 4).switchEndian().toInt();\n    const x = encoded.slice(4, 4 + xl);\n    const yl = encoded.slice(4 + xl, 6 + xl).switchEndian().toInt();\n    const y = encoded.slice(6 + xl, 6 + xl + yl);\n\n    return new PublicKey(x, y, new Curve(curve));\n  }\n\n  /**\n   * Gets the base58 representation of a public key.\n   *\n   * @returns {String}\n   */\n  toBase58() {\n    const prefix = BC.fromHex('01');\n    const encoded = this.encode();\n    const aux = Sha.sha256(encoded);\n    const suffix = aux.slice(0, 4);\n\n    const raw = BC.concat(prefix, encoded, suffix);\n\n    return Base58.encode(raw);\n  }\n\n  /**\n   * Gets a public key instance from the given base58 string.\n   *\n   * @param {String} base58\n   * @returns {PublicKey}\n   */\n  static fromBase58(base58) {\n    const decoded = Base58.decode(base58);\n\n    return PublicKey.decode(decoded.slice(1, -4));\n  }\n}\n\nmodule.exports = PublicKey;\n","module.exports = {\n  Curve: require('./Curve'),\n  PrivateKey: require('./PrivateKey'),\n  PublicKey: require('./PublicKey'),\n  KeyPair: require('./KeyPair')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('../BC');\nconst AccountNumber = require('./AccountNumber');\n\nconst P_BLOCK = Symbol('block');\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_MD160 = Symbol('md160');\n\n/**\n * Holds information about an operation hash.\n */\nclass OperationHash {\n  /**\n   * Constructor\n   *\n   * @param {Number} block\n   * @param {Number} account\n   * @param {Number} nOperation\n   * @param {BC|Buffer|Uint8Array|String} md160\n   */\n  constructor(block, account, nOperation, md160) {\n    this[P_BLOCK] = block;\n    this[P_ACCOUNT] = new AccountNumber(account);\n    this[P_N_OPERATION] = nOperation;\n    this[P_MD160] = BC.from(md160);\n\n    if (md160.length !== 20) {\n      throw new Error('Invalid operation hash - md160 size !== 20 bytes.');\n    }\n  }\n\n  /**\n   * Decodes the given operation hash.\n   *\n   * @param {BC|Buffer|Uint8Array|String} opHash\n   */\n  static decode(opHash) {\n    opHash = BC.from(opHash);\n    const block = opHash.slice(0, 4).switchEndian().toInt();\n    const account = new AccountNumber(opHash.slice(4, 8).switchEndian().toInt());\n    const nOperation = opHash.slice(8, 12).switchEndian().toInt();\n    const md160 = opHash.slice(12);\n\n    return new OperationHash(block, account, nOperation, md160);\n  }\n\n  /**\n   * Creates the pascal encoding for an operation hash.\n   *\n   * @returns {BC}\n   */\n  encode() {\n    return BC.concat(\n      BC.fromInt(this[P_BLOCK], 4).switchEndian(),\n      BC.fromInt(this[P_ACCOUNT].account, 4).switchEndian(),\n      BC.fromInt(this[P_N_OPERATION], 4).switchEndian(),\n      this[P_MD160],\n    );\n  }\n\n  /**\n   * Gets the operation hash as a pending operation.\n   *\n   * @returns {BC}\n   */\n  encodeAsPending() {\n    return new OperationHash(0, this[P_ACCOUNT], this[P_N_OPERATION], this[P_MD160]).encode();\n  }\n\n  /**\n   * Gets the account that executed the operation.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the block number.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the number of operations for the executing account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the md160 of the op.\n   *\n   * @returns {BC}\n   */\n  get md160() {\n    return this[P_MD160];\n  }\n}\n\nmodule.exports = OperationHash;\n","module.exports = {\n  AccountName: require('./AccountName'),\n  AccountNumber: require('./AccountNumber'),\n  Currency: require('./Currency'),\n  OperationHash: require('./OperationHash'),\n  Keys: require('./Keys')\n};\n","class Util {\n\n  /**\n   * https://github.com/MauroJr/escape-regex/blob/master/index.js\n   *\n   * @param {String} string\n   * @returns {string}\n   */\n  static escapeRegex(string) {\n    return ('' + string).replace(/([?!${}*:()|=^[\\]\\/\\\\.+])/g, '\\\\$1');\n  }\n\n  static promiseWhile(data, condition, action) {\n    let whilst = (data) => {\n      return condition(data) ?\n        action(data).then(whilst) :\n        Promise.resolve(data);\n    };\n\n    return whilst(data);\n  };\n}\n\nmodule.exports = Util;\n","module.exports = {\n  Client: require('./src/Client'),\n  Executor: require('./src/Executor'),\n  Caller: require('./src/Caller'),\n  Actions: require('./src/Actions'),\n  Errors: require('./src/Errors'),\n  Types: require('./src/Types')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_PARAMS = Symbol('params');\nconst P_METHOD = Symbol('method');\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n * A basic action that holds the rpc method and its parameters.\n */\nclass BaseAction {\n  /**\n     * Constructor.\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {Executor} executor\n     */\n  constructor(method, params, executor) {\n    this[P_METHOD] = method;\n    this[P_PARAMS] = params;\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n     * Gets the params for the rpc call.\n     *\n   * @returns {Object}\n     */\n  get params() {\n    return this[P_PARAMS];\n  }\n\n  /**\n   * Changes a single param of the params object.\n   *\n   * @param {String} name\n   * @param {*} value\n   * @returns {BaseAction}\n   */\n  changeParam(name, value) {\n    this[P_PARAMS][name] = value;\n    return this;\n  }\n\n  /**\n     * Gets the method.\n     *\n     * @returns {*}\n     */\n  get method() {\n    return this[P_METHOD];\n  }\n\n  /**\n     * Executes the current action and returns the raw result.\n     *\n     * @returns {Promise}\n     */\n  async execute() {\n    return this[P_EXECUTOR].execute(this[P_METHOD], this[P_PARAMS]);\n  }\n\n  /**\n   * Executes the current action and transforms the result to an array\n   *  of the defined type.\n   *\n   *  @param {Object} destinationType\n   * @returns {Promise}\n   */\n  async executeTransformArray(destinationType) {\n    return this[P_EXECUTOR].executeTransformArray(\n      this[P_METHOD], this[P_PARAMS], destinationType,\n    );\n  }\n\n  /**\n     * Executes the current action and transforms the result to an object\n     *  of the defined type.\n     *\n     *  @param {Object} destinationType\n     * @returns {Promise}\n     */\n  async executeTransformItem(destinationType) {\n    return this[P_EXECUTOR].executeTransformItem(\n      this[P_METHOD], this[P_PARAMS], destinationType,\n    );\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = BaseAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\nconst Currency = require('@sbx/common').Types.Currency;\n\n/**\n * An object that holds infos about an operation action. It extends the\n * BaseAction functionality by methods which are useful for operations.\n */\nclass OperationAction extends BaseAction {\n  /**\n     * Constructor\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {Executor} executor\n     */\n  constructor(method, params, executor) {\n    super(method, params, executor);\n    this.params.fee = new Currency(0);\n    this.params.payload = '';\n    this.params.payload_method = 'none';\n  }\n\n  /**\n     * Sets the payload of the action.\n     *\n     * @param {String|BC} payload\n     * @param {String} payloadMethod\n     * @param {String} password\n     * @returns {OperationAction}\n     */\n  withPayload(payload, payloadMethod = 'none', password = null) {\n    this.params.payload = payload;\n    this.params.payload_method = payloadMethod;\n    if (password !== null) {\n      this.params.pwd = password;\n    }\n\n    return this;\n  }\n\n  /**\n     * Sets the fee.\n     *\n     * @param {Number|Currency} fee\n     * @returns {OperationAction}\n     */\n  withFee(fee) {\n    this.fee = new Currency(fee);\n    return this;\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return super.isValid();\n  }\n}\n\nmodule.exports = OperationAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BaseAction = require('./BaseAction');\n\n/**\n * Whenever a remote endpoint has paging possibilities, this action will be\n * returned.\n */\nclass PagedAction extends BaseAction {\n  /**\n     * Constructor.\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {Executor} executor\n     */\n  constructor(method, params, executor) {\n    super(method, params, executor);\n    this.changeParam('start', 0);\n    this.changeParam('max', 100);\n  }\n\n  set start(start) {\n    this.changeParam('start', start);\n    return this;\n  }\n\n  set max(max) {\n    this.changeParam('max', max);\n    return this;\n  }\n\n  /**\n   * Executes the current action and returns the raw result.\n   *\n   * @returns {Promise}\n   */\n  async executeAll() {\n    let all = [];\n\n    await this.executeAllReport(data => data.forEach(item => all.push(item)));\n    return all;\n  }\n\n  /**\n   * Executes the current action and returns the raw result.\n   *\n   * @returns {Promise}\n   */\n  async executeAllReport(reporter) {\n    let result = [];\n\n    do {\n      result = await this.execute();\n      reporter(result);\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result.length > 0 && result.length === this.params.max);\n  }\n\n  /**\n   * Executes the current action and transforms the result to an array\n   *  of the defined type.\n   *\n   *  @param {Object} destinationType\n   * @returns {Promise}\n   */\n  async executeAllTransformArray(destinationType) {\n    let all = [];\n\n    await this.executeAllTransformArrayReport(destinationType,\n      (data) => data.forEach(item => all.push(item))\n    );\n\n    return all;\n  }\n\n  /**\n   * Executes the current action and transforms the result to an array\n   *  of the defined type.\n   *\n   * @param {Object} destinationType\n   * @param {Function} reporter\n   * @returns {Promise}\n   */\n  async executeAllTransformArrayReport(destinationType, reporter) {\n    let result = [];\n\n    do {\n      result = await this.executeTransformArray(destinationType);\n      reporter(result);\n      this.changeParam('start', this.params.start + this.params.max);\n    } while (result.length > 0 && result.length === this.params.max);\n  }\n\n  /**\n     * Gets a flag indicating whether the current action is valid.\n     *\n     * @returns {boolean}\n     */\n  isValid() {\n    return true;\n  }\n}\n\nmodule.exports = PagedAction;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst RawOperations = require('../Types/RawOperations');\nconst OperationAction = require('./OperationAction');\n\n/**\n * This object derives from an operation action and extends the functionality\n * by methods shared by cold wallet signing operations.\n */\nclass SignOperationAction extends OperationAction {\n  /**\n     * Constructor.\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {Executor} executor\n     */\n  constructor(method, params, executor) {\n    super(method, params, executor);\n    this.params.last_n_operation = null;\n    this.params.rawoperations = null;\n  }\n\n  /**\n     * Sets the last n operation value.\n     *\n     * @param {Number} lastNOperation\n     * @return {SignOperationAction}\n     */\n  withLastNOperation(lastNOperation) {\n    this.params.last_n_operation = lastNOperation;\n    return this;\n  }\n\n  /**\n     * Sets the raw operations instance of a previous result.\n     *\n     * @param {RawOperations|BC|String} rawoperations\n     * @return {SignOperationAction}\n     */\n  withRawOperations(rawoperations) {\n    this.params.rawoperations = new RawOperations(rawoperations);\n  }\n\n  isValid() {\n    return super.isValid() && this.params.last_n_operation !== null;\n  }\n}\n\nmodule.exports = SignOperationAction;\n","module.exports = {\n  BaseAction: require('./BaseAction'),\n  OperationAction: require('./OperationAction'),\n  PagedAction: require('./PagedAction'),\n  SignOperationAction: require('./SignOperationAction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst jaysonBrowserClient = require('jayson/lib/client/browser');\nconst fetch = require('node-fetch');\nconst ConnectionError = require('./Errors/ConnectionError');\nconst ResultError = require('./Errors/ResultError');\n\nconst P_CLIENT = Symbol('client');\n\n/**\n * A caller object that can call JSON-RPC methods.\n */\nclass Caller {\n  /**\n     * Creates a new caller instance.\n     *\n     * @param {String} host\n     */\n  constructor(host) {\n    this[P_CLIENT] = jaysonBrowserClient((request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      return fetch(host, options)\n        .then(res => res.text())\n        .then((text) => {\n          callback(null, text);\n        })\n        .catch((err) => {\n          callback(err);\n        });\n    });\n  }\n\n  /**\n     * Calls the given method with the given params and returns a promise.\n     *\n     * @param {String}method\n     * @param {Object} params\n     * @returns {Promise<any>}\n     */\n  call(method, params) {\n    return new Promise((resolve, reject) => {\n      this[P_CLIENT].request(method, params, (err, error, result) => {\n        if (err !== null || error !== undefined || result === undefined) {\n          if (err !== null && err.constructor.name === 'FetchError') {\n            return reject(new ConnectionError(err));\n          }\n          return reject(new ResultError(error.code, error.message));\n        }\n        return resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Caller;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Executor = require('./Executor');\nconst RPCCaller = require('./Caller');\nconst BaseAction = require('./Actions/BaseAction');\nconst PagedAction = require('./Actions/PagedAction');\nconst OperationAction = require('./Actions/OperationAction');\nconst SignOperationAction = require('./Actions/SignOperationAction');\nconst AccountName = require('@sbx/common').Types.AccountName;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\n\nconst P_EXECUTOR = Symbol('executor');\n\n/**\n * A simple rpc client that will prepare an action that can be executed against\n * a node.\n */\nclass Client {\n  /**\n     * Returns a standard instance pointing to the given rpc host node.\n     *\n     * @param {String} rpcHostAddress\n     * @returns {Client}\n     */\n  static factory(rpcHostAddress) {\n    return new Client(\n      new Executor(\n        new RPCCaller(rpcHostAddress),\n      ),\n    );\n  }\n\n  /**\n     * Constructor\n     *\n     * @param {Executor} executor\n     */\n  constructor(executor) {\n    this[P_EXECUTOR] = executor;\n  }\n\n  /**\n     * Adds one or more nodes to connect to.\n     *\n     * @param {String[]} nodes\n     * @returns {BaseAction}\n     */\n  addNode(...nodes) {\n    return new BaseAction('addnode', { nodes: nodes.join(');') }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets an account.\n     *\n     * @param {Account|AccountNumber|Number|String} account\n     * @returns {BaseAction}\n     */\n  getAccount(account) {\n    return new BaseAction('getaccount', {\n      account: new AccountNumber(account)\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets a list of all accounts known by the remote node and\n     * filtered by the given params.\n     *\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} publicKey\n     * @returns {BaseAction}\n     */\n  getWalletAccounts(publicKey = null) {\n    return new PagedAction('getwalletaccounts', {\n      pubkey: publicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the number of all accounts known by the remote node and\n     * filtered by the given params.\n     *\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} publicKey\n     * @returns {BaseAction}\n     */\n  getWalletAccountsCount(publicKey = null) {\n    return new BaseAction('getwalletaccountscount', {\n      pubkey: publicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets a list of all wallet public keys.\n     *\n     * @returns {BaseAction}\n     */\n  getWalletPublicKeys() {\n    return new PagedAction('getwalletpubkeys', { }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the information about a single wallets public key.\n     *\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} publicKey\n     * @returns {BaseAction}\n     */\n  getWalletPublicKey(publicKey) {\n    return new BaseAction('getwalletpubkey', { pubkey: publicKey }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the balance of the wallet with the given keys or all keys.\n     *\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} publicKey\n     * @returns {BaseAction}\n     */\n  getWalletCoins(publicKey = null) {\n    return new BaseAction('getwalletcoins', { pubkey: publicKey }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets a block by the given block number.\n     *\n     * @param {Block|Number} block\n     * @returns {BaseAction}\n     */\n  getBlock(block) {\n    return new BaseAction('getblock', { block }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets a list of blocks.\n     *\n     * @param {Number} last\n     * @param {Number} start\n     * @param {Number} end\n     * @returns {BaseAction}\n     */\n  getBlocks({last = null, start = null, end = null}) {\n    return new BaseAction('getblocks', {\n      last,\n      start,\n      end\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {BaseAction}\n     */\n  getBlockCount() {\n    return new BaseAction('getblockcount', { }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the operation in the given block at the given position.\n     *\n     * @param {Block||Number} block\n     * @param {Number} opBlock\n     * @returns {BaseAction}\n     */\n  getBlockOperation(block, opBlock) {\n    return new BaseAction('getblockoperation', {\n      block,\n      opblock: opBlock\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets all operations of the given block.\n     *\n     * @param {Block|Number} block\n     * @returns {PagedAction}\n     */\n  getBlockOperations(block) {\n    return new PagedAction('getblockoperations', { block }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the operations of an account.\n     *\n     * @param {Account|AccountNumber|Number|String} account\n     * @param {Number} depth\n     * @returns {PagedAction}\n     */\n  getAccountOperations(account, depth = 100) {\n    return new PagedAction('getaccountoperations', {\n      account: new AccountNumber(account), depth\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the pending operations.\n     *\n     * @returns {PagedAction}\n     */\n  getPendings() {\n    return new PagedAction('getpendings', { }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the number of pending operations.\n     *\n     * @returns {BaseAction}\n     */\n  getPendingsCount() {\n    return new BaseAction('getpendingscount', { }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the operation identified by the given ophash.\n     *\n     * @param {String|BC|OperationHash} opHash\n     * @returns {BaseAction}\n     */\n  findOperation(opHash) {\n    return new BaseAction('findoperation', { ophash: opHash }, this[P_EXECUTOR]);\n  }\n\n  findAccounts({name = null, type = null, onlyAccountsForSale = null, exact = null,\n    minBalance = null, maxBalance = null, publicKey = null}) {\n    return new PagedAction('findaccounts', {\n      name: name !== null ? new AccountName(name) : name,\n      type,\n      listed: onlyAccountsForSale,\n      exact,\n      min_balance: minBalance,\n      max_balance: maxBalance,\n      pubkey: publicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Creates a new transaction.\n     *\n     * @param {Account|AccountNumber|Number|String} sender\n     * @param {Account|AccountNumber|Number|String} target\n     * @param {Currency} amount\n     * @returns {OperationAction}\n     */\n  sendTo(sender, target, amount) {\n    return new OperationAction('sendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      amount\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Changes the key of an account.\n     *\n     * @param {Account|AccountNumber|Number|String} account\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPublicKey\n     * @returns {OperationAction}\n     */\n  changeKey(account, newPublicKey) {\n    return new OperationAction('changekey', {\n      account: new AccountNumber(account),\n      new_pubkey: newPublicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Lists an account for sale.\n     *\n     * @param {Account|AccountNumber|Number|String} accountTarget\n     * @param {Account|AccountNumber|Number|String} accountSigner\n     * @param {Currency} price\n     * @param {Account|AccountNumber|Number|String} sellerAccount\n     * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPublicKey\n     * @returns {OperationAction}\n     */\n  listAccountForSale(accountTarget, accountSigner, price, sellerAccount,\n    newPublicKey = null) {\n    return new OperationAction('listaccountforsale', {\n      account_target: new AccountNumber(accountTarget),\n      account_signer: new AccountNumber(accountSigner),\n      price,\n      seller_account: new AccountNumber(sellerAccount),\n      new_pubkey: newPublicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Lists an account for sale.\n     *\n     * @param {Account|AccountNumber|Number|String} accountTarget\n     * @param {Account|AccountNumber|Number|String} accountSigner\n     * @returns {OperationAction}\n     */\n  delistAccountForSale(accountTarget, accountSigner) {\n    return new OperationAction('delistaccountforsale', {\n      account_target: new AccountNumber(accountTarget),\n      account_signer: new AccountNumber(accountSigner)\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Buys an account\n     *\n     * @param {Account|AccountNumber|Number|String} buyerAccount\n     * @param {Account|AccountNumber|Number|String} accountToPurchase\n     * @param {Currency|Number} price\n     * @param {Account|AccountNumber|Number|String} sellerAccount\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPublicKey\n     * @param {Currency|Number} amount\n     * @returns {OperationAction}\n     */\n  buyAccount(buyerAccount, accountToPurchase, price = null, sellerAccount = null,\n    newPublicKey = null, amount) {\n    return new OperationAction('buyaccount', {\n      buyer_account: new AccountNumber(buyerAccount),\n      account_to_purchase: new AccountNumber(accountToPurchase),\n      price,\n      seller_account: sellerAccount !== null ? new AccountNumber(sellerAccount) : sellerAccount,\n      new_pubkey: newPublicKey,\n      amount\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n   * Changes the info of an account.\n   *\n     * @param {Account|AccountNumber|Number|String} accountTarget\n     * @param {Account|AccountNumber|Number|String} accountSigner\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} newPublicKey\n     * @param {String} newName\n     * @param {Number} newType\n     * @returns {OperationAction}\n     */\n  changeAccountInfo(accountTarget, accountSigner, newPublicKey = null,\n    newName = null, newType = null) {\n    return new OperationAction('changeaccountinfo', {\n      account_target: new AccountNumber(accountTarget),\n      account_signer: new AccountNumber(accountSigner),\n      new_pubkey: newPublicKey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Gets the operation infos of the given raw operations string.\n   *\n     * @param {String|BC} rawOperations\n     * @returns {BaseAction}\n     */\n  operationsInfo(rawOperations) {\n    return new BaseAction('operationsinfo', { rawoperations: rawOperations }, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Executes the given raw operations\n   * @param {String|BC} rawOperations\n     * @returns {BaseAction}\n     */\n  executeOperations(rawOperations) {\n    return new BaseAction('executeoperations', {rawoperations: rawOperations}, this[P_EXECUTOR]);\n  }\n\n  /**\n     * Signs a changeaccount info\n     *\n     * @param {Account|AccountNumber|Number|String} account_target\n     * @param {Account|AccountNumber|Number|String} account_signer\n     * @param {PublicKey|WalletPublicKey|BC|String} new_enc_pubkey\n     * @param {String} new_b58_pubkey\n     * @param {String} new_name\n     * @param {Number} new_type\n     * @param {Currency} fee\n     * @param {BC|String} payload\n     * @param {String} payload_method\n     * @param {String} pwd\n     * @returns {Promise<any>}\n     */\n  signChangeAccountInfo(accountTarget, accountSigner, signerPublicKey, newPublicKey,\n    newName = null, newType = null) {\n    return new SignOperationAction('signchangeaccountinfo', {\n      account_target: new AccountNumber(accountTarget),\n      account_signer: new AccountNumber(accountSigner),\n      new_pubkey: newPublicKey,\n      new_name: newName !== null ? new AccountName(newName) : newName,\n      new_type: newType,\n      signer_pubkey: signerPublicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     *\n     * @param sender\n     * @param target\n     * @param senderPublicKey\n     * @param targetPublicKey\n     * @param amount\n     * @returns {SignOperationAction}\n     */\n  signSendTo(sender, target, senderPublicKey, targetPublicKey, amount) {\n    return new SignOperationAction('signsendto', {\n      sender: new AccountNumber(sender),\n      target: new AccountNumber(target),\n      sender_pubkey: senderPublicKey,\n      target_pubkey: targetPublicKey,\n      amount\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     *\n     * @param account\n     * @param oldPublicKey\n     * @param newPublicKey\n     * @returns {SignOperationAction}\n     */\n  signChangeKey(account, oldPublicKey, newPublicKey) {\n    return new SignOperationAction('signchangekey', {\n      account: new AccountNumber(account),\n      old_pubkey: oldPublicKey,\n      new_pubkey: newPublicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n     *\n     * @param accountTarget\n     * @param accountSigner\n     * @param price\n     * @param sellerAccount\n     * @param newPublicKey\n     * @param lockedUntilBlock\n     * @param signerPublicKey\n     * @returns {SignOperationAction}\n     */\n  signListAccountForSale(accountTarget, accountSigner, price, sellerAccount,\n    newPublicKey, lockedUntilBlock, signerPublicKey) {\n    return new SignOperationAction('signlistaccountforsale', {\n      account_target: new AccountNumber(accountTarget),\n      account_signer: new AccountNumber(accountSigner),\n      price,\n      seller_account: new AccountNumber(sellerAccount),\n      new_pubkey: newPublicKey,\n      locked_until_block: lockedUntilBlock,\n      signer_pubkey: signerPublicKey\n    }, this[P_EXECUTOR]);\n  }\n\n  /**\n   * Gets the status of the remote node.\n   *\n   * @returns {BaseAction}\n   */\n  nodeStatus() {\n    return new BaseAction('nodestatus', { }, this[P_EXECUTOR]);\n  }\n\n  /**\n   * Remotely decodes the given public key.\n   *\n   * @param {String|BC|PublicKey|WalletPublicKey|PrivateKey|KeyPair} publicKey\n   * @returns {BaseAction}\n   */\n  decodePubKey(publicKey) {\n    return new BaseAction('decodepubkey', {pubkey: publicKey}, this[P_EXECUTOR]);\n  }\n\n  payloadDecrypt(payload, passwords = []) {\n    return new BaseAction('payloaddecrypt', {\n      payload: payload,\n      pwds: passwords\n    }, this[P_EXECUTOR]);\n  }\n\n  /*\n  importpubkey\ndecodeophash\nfindnoperation\nfindnoperations\nchangekeys\nsigndelistaccountforsale\nsignbuyaccount\nsignmessage\nverifysign\noperationsdelete\nmultioperationaddoperation\nmultioperationsignoffline\nmultioperationsignonline\nencodepubkey\npayloadencrypt\ngetconnections\naddnewkey\nlock\nunlock\nsetwalletpassword\nstopnode\nstartnode\ncleanblacklist\nnode_ip_stats\n   */\n}\n\nmodule.exports = Client;\n","const P_ORIGINAL = Symbol('original');\nconst P_MESSAGE = Symbol('message');\n\nclass ConnectionError {\n  constructor(originalFetchError) {\n    this[P_ORIGINAL] = originalFetchError;\n    this[P_MESSAGE] = originalFetchError.message;\n  }\n\n  get original() {\n    return this[P_ORIGINAL];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ConnectionError;\n","const P_CODE = Symbol('code');\nconst P_MESSAGE = Symbol('message');\n\nclass ResultError {\n  constructor(code, message) {\n    this[P_CODE] = code;\n    this[P_MESSAGE] = message;\n  }\n\n  get code() {\n    return this[P_CODE];\n  }\n  get message() {\n    return this[P_MESSAGE];\n  }\n}\n\nmodule.exports = ResultError;\n","module.exports = {\n  ConnectionError: require('./ConnectionError'),\n  ResultError: require('./ResultError')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_CALLER = Symbol('caller');\n\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst AccountName = require('@sbx/common').Types.AccountName;\nconst OperationHash = require('@sbx/common').Types.OperationHash;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst KeyPair = require('@sbx/common').Types.Keys.KeyPair;\nconst Currency = require('@sbx/common').Types.Currency;\nconst BC = require('@sbx/common').BC;\n\nconst Block = require('./Types/Block');\nconst WalletPublicKey = require('./Types/WalletPublicKey');\nconst Account = require('./Types/Account');\n\n/**\n * Simple function that transforms the values of an object to make them usable\n * in rpc calls.\n *\n * @param {Object} params\n * @returns {Object}\n */\nfunction transformRpcParams(params) {\n  const newParams = {};\n\n  Object.keys(params).forEach((field) => {\n    const item = params[field];\n\n    // we weill delete fields that are null\n    if (item === null) {\n\n    } else if (field.indexOf('pubkey') !== -1) {\n      // correct the field name..\n      let newField = field.replace('pubkey', 'enc_pubkey');\n\n      // and set the value\n      if (item instanceof BC) {\n        newParams[newField] = item.toHex();\n      } else if (item instanceof PublicKey) {\n        newParams[newField] = item.encode().toHex();\n      } else if (item instanceof WalletPublicKey) {\n        newParams[newField] = item.publicKey.encode().toHex();\n      } else if (item instanceof KeyPair) {\n        newParams[newField] = item.publicKey.encode().toHex();\n      } else {\n        newField = newField.replace('enc_pubkey', 'b58_pubkey');\n        newParams[newField] = item.toString();\n      }\n    } else if (field === 'payload' && !(item instanceof BC)) {\n      newParams[field] = BC.fromString(item).toHex();\n    } else if (field === 'max' || field === 'start' || field === 'end' || field === 'depth') {\n      newParams[field] = parseInt(item, 10);\n    } else if ((field === 'fee' || field === 'amount' || field === 'price') &&\n        !(params[field] instanceof Currency)\n    ) {\n      newParams[field] = new Currency(item);\n      if (newParams[field].isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      } else {\n        newParams[field] = newParams[field].toStringOpt();\n      }\n    } else if (typeof item === 'boolean') {\n      newParams[field] = item;\n    } else if (item instanceof BC) {\n      newParams[field] = item.toHex();\n    } else if (item instanceof OperationHash) {\n      newParams[field] = item.encode().toHex();\n    } else if (item instanceof Account) {\n      newParams[field] = item.account.account; // NICE!!!!! :-D\n    } else if (item instanceof AccountNumber) {\n      newParams[field] = item.account;\n    } else if (item instanceof AccountName) {\n      newParams[field] = item.toString();\n    } else if (item instanceof Block) {\n      newParams[field] = item.block;\n    } else if (item instanceof Currency) {\n      if (item.isVague()) {\n        throw new Error('Currency value has more that 4 decimals, you need ' +\n            'to round the value by yourself. We will not round automagically.');\n      }\n      newParams[field] = item.toStringOpt();\n    } else if (typeof item === 'number') {\n      newParams[field] = item;\n    } else {\n      newParams[field] = item.toString();\n    }\n  });\n\n  return newParams;\n}\n\n/**\n * This class will execute an rpc call and returns a promise.\n */\nclass Executor {\n  /**\n     * Constructor\n     *\n     * @param {Caller} caller\n     */\n  constructor(caller) {\n    this[P_CALLER] = caller;\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {String} method\n   * @param {Object} params\n   * @param {Function} transformCallback\n   * @returns {Promise<any>}\n   */\n  async execute(method, params, transformCallback = r => r) {\n    return new Promise((resolve, reject) => {\n      this[P_CALLER].call(method, transformRpcParams(params))\n        .then(response => resolve(transformCallback(response)))\n        .catch(error => reject(error));\n    });\n  }\n\n  /**\n   * Calls the given method with the given params and returns a promise that\n   * itself will transform the returned value and resolve the promise.\n   *\n   * @param {Object} action\n   * @param {Function} transformCallback\n   * @returns {Promise<any>}\n   */\n  async executeAll(action, transformCallback = r => r) {\n    const all = [];\n    let result = [];\n\n    do {\n      result = await this.execute(action.method, action.params, transformCallback);\n      result.forEach(item => all.push(item));\n      action.changeParam('start', action.params.start + action.params.max);\n    } while (result.length > 0 && result.length === action.params.max);\n\n    return all;\n  }\n\n  /**\n     * Calls the rpc method with the given parameters and returns a promise that\n     * resolves with an array of objects of the given Destination type.\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {*} DestinationType\n     * @returns {Promise<any>}\n     */\n  async executeTransformArray(method, params, DestinationType) {\n    return this.execute(method, params, r => r.map(ri => new DestinationType(ri)));\n  }\n\n  /**\n     * Calls the rpc method with the given parameters and returns a promise that\n     * resolves with an object of the given Destination type.\n     *\n     * @param {String} method\n     * @param {Object} params\n     * @param {*} DestinationType\n     * @returns {Promise<any>}\n     */\n  async executeTransformItem(method, params, DestinationType) {\n    return this.execute(method, params, (r) => {\n      return new DestinationType(r);\n    });\n  }\n}\n\nmodule.exports = Executor;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst P_INITIALIZATION_DATA = Symbol('__initialization_data');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  /**\n     * Constructor.\n     *\n     * @param {Object} initializationData\n     */\n  constructor(initializationData) {\n    if (new.target === Abstract) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n\n    this[P_INITIALIZATION_DATA] = initializationData;\n  }\n\n  /**\n     * Gets the initialization data. This should normally not be used at all but\n     * in case there are new fields which are not implemented in the library yet,\n     * the user will still have access to it.\n     *\n     * @returns {Object}\n     */\n  get __initializationData() {\n    return this[P_INITIALIZATION_DATA];\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst AccountName = require('@sbx/common').Types.AccountName;\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst Currency = require('@sbx/common').Types.Currency;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_BALANCE = Symbol('balance');\nconst P_N_OPERATION = Symbol('n_operation');\nconst P_UPDATED_B = Symbol('updated_b');\nconst P_STATE = Symbol('state');\nconst P_NAME = Symbol('name');\nconst P_TYPE = Symbol('type');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\nconst P_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller_account');\nconst P_PRIVATE_SALE = Symbol('private_sale');\nconst P_NEW_ENC_PUBKEY = Symbol('new_enc_pubkey');\n\n/**\n * Represents an account.\n */\nclass Account extends Abstract {\n  /**\n   * The state of an account when it is listed for sale.\n   *\n   * @returns {string}\n   */\n  static get STATE_LISTED() {\n    return 'listed';\n  }\n\n  /**\n   * The state of an account when it is not listed.\n   *\n   * @returns {string}\n   */\n  static get STATE_NORMAL() {\n    return 'normal';\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_ENC_PUBKEY] = PublicKey.decode(BC.fromHex(data.enc_pubkey));\n    this[P_BALANCE] = new Currency(data.balance);\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_UPDATED_B] = parseInt(data.updated_b, 10);\n\n    if (data.state !== Account.STATE_NORMAL && data.state !== Account.STATE_LISTED) {\n      throw new Error('Invalid account state.');\n    }\n\n    this[P_STATE] = data.state;\n    this[P_NAME] = new AccountName(data.name);\n    this[P_TYPE] = data.type;\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    // when not listed\n    this[P_PRICE] = null;\n    this[P_SELLER_ACCOUNT] = null;\n    this[P_PRIVATE_SALE] = null;\n    this[P_NEW_ENC_PUBKEY] = null;\n\n    if (this[P_STATE] === Account.STATE_LISTED) {\n      this[P_PRICE] = new Currency(data.price);\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n      this[P_PRIVATE_SALE] = data.private_sale;\n      if (data.new_enc_pubkey !== '000000000000' && data.new_enc_pubkey !== undefined) {\n        this[P_NEW_ENC_PUBKEY] = PublicKey.decode(BC.fromHex(data.new_enc_pubkey));\n      }\n    }\n  }\n\n  /**\n   * Gets the account number of the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the public key of the account.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Currency}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the number of operations of this account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the block number when the account was last updated.\n   *\n   * @returns {Number}\n   */\n  get updatedB() {\n    return this[P_UPDATED_B];\n  }\n\n  /**\n   * Gets the state of the account (normal, listed).\n   *\n   * @returns {String}\n   */\n  get state() {\n    return this[P_STATE];\n  }\n\n  /**\n   * Gets the name of the account.\n   *\n   * @returns {AccountName}\n   */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n   * Gets the type of the account.\n   *\n   * @returns {Number}\n   */\n  get type() {\n    return this[P_TYPE];\n  }\n\n  /**\n   * Gets the block number until the account is locked when it's listed for\n   * sale.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the price of the account in case its listed.\n   *\n   * @returns {Currency|null}\n   */\n  get price() {\n    return this[P_PRICE];\n  }\n\n  /**\n   * Gets the account of the seller in case the account is listed for sale.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets a flag indicating whether the account is for sale. Attention:\n   * null and false = not for sale.\n   *\n   * @returns {boolean}\n   */\n  get privateSale() {\n    return !!this[P_PRIVATE_SALE];\n  }\n\n  /**\n   * Gets the new public key in case of a escrow.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets a value indicating whether the account is for sale.\n   *\n   * @returns {boolean}\n   */\n  isForSale() {\n    return this[P_STATE] === Account.STATE_LISTED;\n  }\n}\n\nmodule.exports = Account;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BigNumber = require('bignumber.js');\nconst Abstract = require('./Abstract');\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst Currency = require('@sbx/common').Types.Currency;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst BC = require('@sbx/common').BC;\n\nconst P_BLOCK = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('enc_pubkey');\nconst P_REWARD = Symbol('reward');\nconst P_FEE = Symbol('fee');\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('ver_a');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_TARGET = Symbol('target');\nconst P_NONCE = Symbol('nonce');\nconst P_PAYLOAD = Symbol('payload');\nconst P_SBH = Symbol('sbh');\nconst P_OPH = Symbol('oph');\nconst P_POW = Symbol('pow');\nconst P_HASHRATEKHS = Symbol('hashratekhs');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * Represents a block.\n */\nclass Block extends Abstract {\n  /**\n   * Creates a new instance of the Block class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_ENC_PUBKEY] = PublicKey.decode(BC.fromHex(data.enc_pubkey));\n    this[P_REWARD] = new Currency(data.reward);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_TARGET] = new BigNumber(data.target.toString());\n    this[P_NONCE] = new BigNumber(data.nonce.toString());\n    this[P_PAYLOAD] = BC.fromString(data.payload);\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_OPH] = BC.fromHex(data.oph);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_HASHRATEKHS] = new BigNumber(data.hashratekhs.toString());\n    this[P_MATURATION] = parseInt(data.maturation, 10);\n    this[P_OPERATIONS] = null;\n    if (data.operations !== undefined) {\n      this[P_OPERATIONS] = parseInt(data.operations, 10);\n    }\n  }\n\n  /**\n   * Gets the number of a block.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the public key of the miner of the block.\n   *\n   * @returns {PublicKey}\n   */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the reward.\n   *\n   * @returns {Currency}\n   */\n  get reward() {\n    return this[P_REWARD];\n  }\n\n  /**\n   * Gets the collective fee awarded to the miner.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the version of the protocol.\n   *\n   * @returns {Number}\n   */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n   * Gets the protocol version of the miner.\n   *\n   * @returns {Number}\n   */\n  get verA() {\n    return this[P_VER_A];\n  }\n\n  /**\n   * Gets the UTC timestamp of the block.\n   *\n   * @returns {Number}\n   */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n   * Gets the used target.\n   *\n   * @returns {BigNumber}\n   */\n  get target() {\n    return this[P_TARGET];\n  }\n\n  /**\n   * Gets the calculated nonce.\n   *\n   * @returns {BigNumber}\n   */\n  get nonce() {\n    return this[P_NONCE];\n  }\n\n  /**\n   * Gets the payload of the miner.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the safebox hash.\n   *\n   * @returns {BC}\n   */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {BC}\n   */\n  get oph() {\n    return this[P_OPH];\n  }\n\n  /**\n   * Gets the POW.\n   *\n   * @returns {BC}\n   */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n   * Gets the hashrate in kh/s.\n   *\n   * @returns {BigNumber}\n   */\n  get hashratekhs() {\n    return this[P_HASHRATEKHS];\n  }\n\n  /**\n   * Gets the age of the block in terms of blocks.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the number of operations in the block.\n   *\n   * @returns {Number}\n   */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n   * Gets the list of accounts created.\n   *\n   * @returns {AccountNumber[]}\n   */\n  get createdAccounts() {\n    return [\n      new AccountNumber(this[P_BLOCK] * 5),\n      new AccountNumber(this[P_BLOCK] * 5 + 1),\n      new AccountNumber(this[P_BLOCK] * 5 + 2),\n      new AccountNumber(this[P_BLOCK] * 5 + 3),\n      new AccountNumber(this[P_BLOCK] * 5 + 4)\n    ];\n  }\n}\n\nmodule.exports = Block;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst AccountName = require('@sbx/common').Types.AccountName;\nconst Currency = require('@sbx/common').Types.Currency;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst BC = require('@sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_N_OPERATION = Symbol('nOperation');\nconst P_NEW_ENC_PUBKEY = Symbol('newPublicKey');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\nconst P_SELLER_ACCOUNT = Symbol('sellerAccount');\nconst P_ACCOUNT_PRICE = Symbol('account_price');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('lockedUntilBlock');\nconst P_FEE = Symbol('fee');\n\n/**\n * Represents a Changer in an operation.\n */\nclass Changer extends Abstract {\n  /**\n   * Creates a new instance of the Changer class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_N_OPERATION] = null;\n    if (data.n_operation !== undefined) {\n      this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    }\n\n    this[P_NEW_ENC_PUBKEY] = null;\n    if (data.new_enc_pubkey !== undefined) {\n      this[P_NEW_ENC_PUBKEY] = PublicKey.decode(BC.fromHex(data.new_enc_pubkey));\n    }\n\n    this[P_NEW_NAME] = null;\n    if (data.new_name !== undefined) {\n      this[P_NEW_NAME] = new AccountName(data.new_name);\n    }\n\n    this[P_NEW_TYPE] = null;\n    if (data.new_type !== undefined) {\n      this[P_NEW_TYPE] = data.new_type;\n    }\n\n    this[P_SELLER_ACCOUNT] = null;\n    if (data.seller_account !== undefined) {\n      this[P_SELLER_ACCOUNT] = new AccountNumber(data.seller_account);\n    }\n\n    this[P_ACCOUNT_PRICE] = null;\n    if (data.account_price !== undefined) {\n      this[P_ACCOUNT_PRICE] = new Currency(data.account_price);\n    }\n\n    this[P_LOCKED_UNTIL_BLOCK] = null;\n    if (data.locked_until_block !== undefined) {\n      this[P_LOCKED_UNTIL_BLOCK] = parseInt(data.locked_until_block, 10);\n    }\n\n    this[P_FEE] = new Currency(0);\n    if (data.fee !== undefined) {\n      this[P_FEE] = new Currency(data.fee);\n    }\n  }\n\n  /**\n   * Gets the changed account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the n op of the account.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the new public key.\n   *\n   * @returns {PublicKey|null}\n   */\n  get newPublicKey() {\n    return this[P_NEW_ENC_PUBKEY];\n  }\n\n  /**\n   * Gets the new name.\n   *\n   * @returns {String|null}\n   */\n  get newName() {\n    return this[P_NEW_NAME];\n  }\n\n  /**\n   * Gets the new type.\n   *\n   * @returns {Number|null}\n   */\n  get newType() {\n    return this[P_NEW_TYPE];\n  }\n\n  /**\n   * Gets the seller account.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get sellerAccount() {\n    return this[P_SELLER_ACCOUNT];\n  }\n\n  /**\n   * Gets the sales price of the account.\n   *\n   * @returns {Currency|null}\n   */\n  get accountPrice() {\n    return this[P_ACCOUNT_PRICE];\n  }\n\n  /**\n   * Gets the block number until the account is blocked.\n   *\n   * @returns {Number|null}\n   */\n  get lockedUntilBlock() {\n    return this[P_LOCKED_UNTIL_BLOCK];\n  }\n\n  /**\n   * Gets the fee for the change operation.\n   *\n   * @returns {Currency|null}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n}\n\nmodule.exports = Changer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_VER = Symbol('ver');\nconst P_VER_A = Symbol('verA');\n\n/**\n * Holds information about a nodes version.\n */\nclass NetProtocol extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_VER] = parseInt(data.ver, 10);\n    this[P_VER_A] = parseInt(data.ver_a, 10);\n  }\n\n  /**\n     * Gets the wallets protocol version.\n     *\n     * @returns {Number}\n     */\n  get ver() {\n    return this[P_VER];\n  }\n\n  /**\n     * Gets the miners protocol version.\n     *\n     * @returns {Number}\n     */\n  get verA() {\n    return this[P_VER_A];\n  }\n}\n\nmodule.exports = NetProtocol;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_BRECEIVED = Symbol('breceived');\nconst P_SERVERS_T = Symbol('servers_t');\nconst P_TSERVERS = Symbol('tservers');\nconst P_TOTAL = Symbol('total');\nconst P_BSEND = Symbol('bsend');\nconst P_SERVERS = Symbol('servers');\nconst P_CLIENTS = Symbol('clients');\nconst P_ACTIVE = Symbol('active');\nconst P_TCLIENTS = Symbol('tclients');\n\n/**\n * Class that holds netstats of a node server.\n */\nclass NetStats extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_BRECEIVED] = parseInt(data.breceived, 10);\n    this[P_SERVERS_T] = parseInt(data.servers_t, 10);\n    this[P_TSERVERS] = parseInt(data.tservers, 10);\n    this[P_TOTAL] = parseInt(data.total, 10);\n    this[P_BSEND] = parseInt(data.bsend, 10);\n    this[P_SERVERS] = parseInt(data.servers, 10);\n    this[P_CLIENTS] = parseInt(data.clients, 10);\n    this[P_ACTIVE] = parseInt(data.active, 10);\n    this[P_TCLIENTS] = parseInt(data.tclients, 10);\n  }\n\n  /**\n     * Gets the received bytes.\n     *\n     * @returns {Number}\n     */\n  get breceived() {\n    return this[P_BRECEIVED];\n  }\n\n  /**\n     * Gets the number of server connections\n     *\n     * @returns {Number}\n     */\n  get serversT() {\n    return this[P_SERVERS_T];\n  }\n\n  /**\n     * Gets the number of server connections.\n     *\n     * @returns {Number}\n     */\n  get tservers() {\n    return this[P_TSERVERS];\n  }\n\n  /**\n     * Gets the number of total connections.\n     *\n     * @returns {Number}\n     */\n  get total() {\n    return this[P_TOTAL];\n  }\n\n  /**\n     * Gets the number of bytes sent.\n     *\n     * @returns {Number}\n     */\n  get bsend() {\n    return this[P_BSEND];\n  }\n\n  /**\n     * Gets the number of servers that responded.\n     *\n     * @returns {Number}\n     */\n  get servers() {\n    return this[P_SERVERS];\n  }\n\n  /**\n     * Gets the number of client connections.\n     *\n     * @returns {Number}\n     */\n  get clients() {\n    return this[P_CLIENTS];\n  }\n\n  /**\n     * Gets the number of active connections.\n     *\n     * @returns {Number}\n     */\n  get active() {\n    return this[P_ACTIVE];\n  }\n\n  /**\n     * Gets the number of total client connections.\n     *\n     * @returns {Number}\n     */\n  get tclients() {\n    return this[P_TCLIENTS];\n  }\n}\n\nmodule.exports = NetStats;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\n\nconst P_PORT = Symbol('port');\nconst P_LASTCON = Symbol('lastcon');\nconst P_ATTEMPTS = Symbol('attempts');\nconst P_IP = Symbol('ip');\n\n/**\n * Holds information about a single node server connection.\n */\nclass NodeServer extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LASTCON] = parseInt(data.lastcon, 10);\n    this[P_ATTEMPTS] = parseInt(data.attempts, 10);\n    this[P_IP] = data.ip;\n  }\n\n  /**\n     * Gets the port of the server.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets the timestamp of the last connection.\n     *\n     * @returns {Number}\n     */\n  get lastcon() {\n    return this[P_LASTCON];\n  }\n\n  /**\n     * Gets the number of connection attempts.\n     *\n     * @returns {Number}\n     */\n  get attempts() {\n    return this[P_ATTEMPTS];\n  }\n\n  /**\n     * Gets the IP of the node.\n     *\n     * @returns {String}\n     */\n  get ip() {\n    return this[P_IP];\n  }\n}\n\nmodule.exports = NodeServer;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@sbx/common').BC;\nconst NetProtocol = require('./NetProtocol');\nconst NetStats = require('./NetStats');\nconst NodeServer = require('./NodeServer');\n\nconst P_READY = Symbol('ready');\nconst P_READY_S = Symbol('ready_s');\nconst P_STATUS_S = Symbol('status_s');\nconst P_PORT = Symbol('port');\nconst P_LOCKED = Symbol('locked');\nconst P_TIMESTAMP = Symbol('timestamp');\nconst P_BLOCKS = Symbol('blocks');\nconst P_NODESERVERS = Symbol('nodeservers');\nconst P_NETSTATS = Symbol('netstats');\nconst P_VERSION = Symbol('version');\nconst P_NETPROTOCOL = Symbol('netprotocol');\nconst P_SBH = Symbol('sbh');\nconst P_POW = Symbol('pow');\nconst P_OPENSSL = Symbol('openssl');\n\nclass NodeStatus extends Abstract {\n  constructor(data) {\n    super(data);\n\n    this[P_READY] = !!data.ready;\n    this[P_READY_S] = data.ready_s;\n    this[P_STATUS_S] = data.status_s;\n    this[P_PORT] = parseInt(data.port, 10);\n    this[P_LOCKED] = !!data.locked;\n    this[P_TIMESTAMP] = parseInt(data.timestamp, 10);\n    this[P_BLOCKS] = parseInt(data.blocks, 10);\n    this[P_VERSION] = data.version;\n    this[P_SBH] = BC.fromHex(data.sbh);\n    this[P_POW] = BC.fromHex(data.pow);\n    this[P_OPENSSL] = BC.fromHex(data.openssl);\n    this[P_NETPROTOCOL] = new NetProtocol(data.netprotocol);\n    this[P_NETSTATS] = new NetStats(data.netstats);\n    this[P_NODESERVERS] = data.nodeservers.map(ns => new NodeServer(ns));\n  }\n\n  /**\n     * Gets a flag indicating whether the node is ready.\n     *\n     * @returns {Boolean}\n     */\n  get ready() {\n    return this[P_READY];\n  }\n\n  /**\n     * Gets a string explaining the ready status.\n     *\n     * @returns {String}\n     */\n  get readyS() {\n    return this[P_READY_S];\n  }\n\n  /**\n     * Gets a string defining the status of the node.\n     *\n     * @returns {String}\n     */\n  get statusS() {\n    return this[P_STATUS_S];\n  }\n\n  /**\n     * Gets the port of the node.\n     *\n     * @returns {Number}\n     */\n  get port() {\n    return this[P_PORT];\n  }\n\n  /**\n     * Gets a value indicating whether the wallet is locked.\n     *\n     * @returns {Boolean}\n     */\n  get locked() {\n    return this[P_LOCKED];\n  }\n\n  /**\n     * Gets the timestamp where the node runs.\n     *\n     * @returns {Number}\n     */\n  get timestamp() {\n    return this[P_TIMESTAMP];\n  }\n\n  /**\n     * Gets the number of known blocks.\n     *\n     * @returns {Number}\n     */\n  get blocks() {\n    return this[P_BLOCKS];\n  }\n\n  /**\n     * Gets the list of nodeservers.\n     *\n     * @returns {NodeServer[]}\n     */\n  get nodeservers() {\n    return this[P_NODESERVERS];\n  }\n\n  /**\n     * Gets the netstats\n     *\n     * @returns {NetStats}\n     */\n  get netstats() {\n    return this[P_NETSTATS];\n  }\n\n  /**\n     * Gets the node version info.\n     *\n     * @returns {Version}\n     */\n  get version() {\n    return this[P_VERSION];\n  }\n\n  /**\n     * Gets the info about the protocol versions.\n     *\n     * @returns {NetProtocol}\n     */\n  get netprotocol() {\n    return this[P_NETPROTOCOL];\n  }\n\n  /**\n     * Gets the last safebox hash.\n     *\n     * @returns {BC}\n     */\n  get sbh() {\n    return this[P_SBH];\n  }\n\n  /**\n     * Gets the last known POW.\n     *\n     * @returns {BC}\n     */\n  get pow() {\n    return this[P_POW];\n  }\n\n  /**\n     * Gets the openssl info.\n     *\n     * @returns {BC}\n     */\n  get openssl() {\n    return this[P_OPENSSL];\n  }\n}\n\nmodule.exports = NodeStatus;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst BC = require('@sbx/common').BC;\nconst Currency = require('@sbx/common').Types.Currency;\nconst OperationHash = require('@sbx/common').Types.OperationHash;\n\nconst Sender = require('./Sender');\nconst Receiver = require('./Receiver');\nconst Changer = require('./Changer');\n\nconst P_VALID = Symbol('valid');\nconst P_ERRORS = Symbol('errors');\nconst P_BLOCK = Symbol('block');\nconst P_TIME = Symbol('time');\nconst P_OPBLOCK = Symbol('opblock');\nconst P_PAYLOAD = Symbol('payload');\nconst P_MATURATION = Symbol('maturation');\nconst P_OPTYPE = Symbol('optype');\nconst P_ACCOUNT = Symbol('account');\nconst P_OPTXT = Symbol('optxt');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_BALANCE = Symbol('balance');\nconst P_OPHASH = Symbol('ophash');\nconst P_OLD_OPHASH = Symbol('old_ophash');\nconst P_SUBTYPE = Symbol('subtype');\nconst P_SIGNER_ACCOUNT = Symbol('signer_account');\nconst P_CHANGERS = Symbol('changers');\nconst P_SENDERS = Symbol('senders');\nconst P_RECEIVERS = Symbol('receivers');\n\n/**\n * A class thats holds the information about an operation.\n */\nclass Operation extends Abstract {\n  // The available optypes\n  static get BLOCKCHAIN_REWARD() {\n    return 0;\n  }\n\n  static get TRANSACTION() {\n    return 1;\n  }\n\n  static get CHANGE_KEY() {\n    return 2;\n  }\n\n  static get RECOVER_FUNDS() {\n    return 3;\n  }\n\n  static get LIST_FOR_SALE() {\n    return 4;\n  }\n\n  static get DELIST() {\n    return 5;\n  }\n\n  static get BUY() {\n    return 6;\n  }\n\n  static get CHANGE_KEY_ACCOUNT() {\n    return 7;\n  }\n\n  static get CHANGE_ACCOUNT_INFO() {\n    return 8;\n  }\n\n  static get MULTI_OPERATION() {\n    return 9;\n  }\n\n  static get DATA() {\n    return 10;\n  }\n\n  /**\n   * Creates a new Operation instance from an rpc response.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_VALID] = true;\n    if (data.valid !== undefined) {\n      this[P_VALID] = !!data.valid;\n    }\n\n    this[P_ERRORS] = null;\n    if (data.errors !== undefined) {\n      this[P_ERRORS] = data.errors;\n    }\n\n    if (data.payload !== undefined) {\n      this[P_PAYLOAD] = BC.fromHex(data.payload);\n    } else {\n      this[P_PAYLOAD] = BC.fromHex('');\n    }\n\n    this[P_BLOCK] = parseInt(data.block, 10);\n    this[P_TIME] = parseInt(data.time, 10);\n    this[P_OPBLOCK] = parseInt(data.opblock, 10);\n    this[P_MATURATION] = 0;\n    // pending\n    if (data.maturation !== null) {\n      this[P_MATURATION] = parseInt(data.maturation, 10);\n    }\n\n    this[P_OPTYPE] = parseInt(data.optype, 10);\n    // multi-op\n    this[P_ACCOUNT] = null;\n    if (data.account !== undefined) {\n      this[P_ACCOUNT] = new AccountNumber(data.account);\n    }\n    this[P_OPTXT] = data.optxt;\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_BALANCE] = null;\n    if (data.balance !== undefined) {\n      this[P_BALANCE] = new Currency(data.balance);\n    }\n\n    this[P_OPHASH] = null;\n    if (data.ophash !== undefined) {\n      this[P_OPHASH] = BC.fromHex(data.ophash);\n      if (this[P_OPTYPE] !== Operation.BLOCKCHAIN_REWARD) {\n        this[P_OPHASH] = OperationHash.decode(BC.fromHex(data.ophash));\n      }\n    }\n\n    this[P_OLD_OPHASH] = null;\n    if (data.old_ophash !== undefined) {\n      this[P_OLD_OPHASH] = BC.fromHex(data.old_ophash);\n    }\n\n    this[P_SUBTYPE] = data.subtype;\n    this[P_SIGNER_ACCOUNT] = null;\n    if (data.signer_account !== undefined) {\n      this[P_SIGNER_ACCOUNT] = new AccountNumber(data.signer_account);\n    }\n\n    // eslint-disable-next-line no-multi-assign\n    this[P_SENDERS] = [];\n    this[P_RECEIVERS] = [];\n    this[P_CHANGERS] = [];\n\n    // loop given data and initialize objects\n    data.senders.forEach(s => this[P_SENDERS].push(new Sender(s)));\n    data.receivers.forEach(r => this[P_RECEIVERS].push(new Receiver(r)));\n    data.changers.forEach(c => this[P_CHANGERS].push(new Changer(c)));\n  }\n\n  /**\n   * Gets an indicator whether the operation was valid.\n   *\n   * @returns {Boolean}\n   */\n  get valid() {\n    return this[P_VALID];\n  }\n\n  /**\n   * If the operation is invalid you'll get the error message.\n   *\n   * @returns {String|null}\n   */\n  get errors() {\n    return this[P_ERRORS];\n  }\n\n  /**\n   * Gets the block that is associated with the operation.\n   *\n   * @returns {Number}\n   */\n  get block() {\n    return this[P_BLOCK];\n  }\n\n  /**\n   * Gets the time of the operation.\n   *\n   * @returns {Number}\n   */\n  get time() {\n    return this[P_TIME];\n  }\n\n  /**\n   * Gets the position inside a block.\n   *\n   * @returns {Number}\n   */\n  get opblock() {\n    return this[P_OPBLOCK];\n  }\n\n  /**\n   * Gets the age in blocks of the operation.\n   *\n   * @returns {Number}\n   */\n  get maturation() {\n    return this[P_MATURATION];\n  }\n\n  /**\n   * Gets the type of the operation.\n   *\n   * @returns {Number}\n   */\n  get opType() {\n    return this[P_OPTYPE];\n  }\n\n  /**\n   * Gets the account.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets a textual representation of the operation.\n   *\n   * @returns {String}\n   */\n  get opTxt() {\n    return this[P_OPTXT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the fee.\n   *\n   * @returns {Currency}\n   */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n   * Gets the balance of the account.\n   *\n   * @returns {Number}\n   */\n  get balance() {\n    return this[P_BALANCE];\n  }\n\n  /**\n   * Gets the operation hash.\n   *\n   * @returns {OperationHash}\n   */\n  get opHash() {\n    return this[P_OPHASH];\n  }\n\n  /**\n   * Gets the <= V2 operation Hash.\n   *\n   * @returns {BC|null}\n   */\n  get oldOpHash() {\n    return this[P_OLD_OPHASH];\n  }\n\n  /**\n   * Gets the subtype.\n   *\n   * @returns {String}\n   */\n  get subtype() {\n    return this[P_SUBTYPE];\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber|null}\n   */\n  get signerAccount() {\n    return this[P_SIGNER_ACCOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n   * Gets the list of changers.\n   *\n   * @returns {Changer[]}\n   */\n  get changers() {\n    return this[P_CHANGERS];\n  }\n\n  /**\n   * Gets the list of senders.\n   *\n   * @returns {Sender[]}\n   */\n  get senders() {\n    return this[P_SENDERS];\n  }\n\n  /**\n   * Gets the list of receivers.\n   *\n   * @returns {Receiver[]}\n   */\n  get receivers() {\n    return this[P_RECEIVERS];\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BLOCKCHAIN_REWARD operation.\n   *\n   * @returns {boolean}\n   */\n  isBlockchainReward() {\n    return this[P_OPTYPE] === Operation.BLOCKCHAIN_REWARD;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a TRANSACTION operation.\n   *\n   * @returns {boolean}\n   */\n  isTransaction() {\n    return this[P_OPTYPE] === Operation.TRANSACTION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKey() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a RECOVER_FUNDS operation.\n   *\n   * @returns {boolean}\n   */\n  isRecoverFunds() {\n    return this[P_OPTYPE] === Operation.RECOVER_FUNDS;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a LIST_FOR_SALE operation.\n   *\n   * @returns {boolean}\n   */\n  isListForSale() {\n    return this[P_OPTYPE] === Operation.LIST_FOR_SALE;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DELIST operation.\n   *\n   * @returns {boolean}\n   */\n  isDelist() {\n    return this[P_OPTYPE] === Operation.DELIST;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a BUY operation.\n   *\n   * @returns {boolean}\n   */\n  isBuy() {\n    return this[P_OPTYPE] === Operation.BUY;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_KEY_ACCOUNT operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeKeyAccount() {\n    return this[P_OPTYPE] === Operation.CHANGE_KEY_ACCOUNT;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a CHANGE_ACCOUNT_INFO operation.\n   *\n   * @returns {boolean}\n   */\n  isChangeAccountInfo() {\n    return this[P_OPTYPE] === Operation.CHANGE_ACCOUNT_INFO;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a MULTI_OPERATION operation.\n   *\n   * @returns {boolean}\n   */\n  isMultiOperation() {\n    return this[P_OPTYPE] === Operation.MULTI_OPERATION;\n  }\n\n  /**\n   * Gets a value indicating whether the operation is a DATA operation.\n   *\n   * @returns {boolean}\n   */\n  isData() {\n    return this[P_OPTYPE] === Operation.DATA;\n  }\n\n  /**\n   * Gets a value indicating whether the op is pending.\n   *\n   * @returns {boolean}\n   */\n  isPending() {\n    return this[P_BLOCK] === 0;\n  }\n\n  /**\n   * Gets a value indicating whether the operation was not executed because of\n   * fees.\n   *\n   * @returns {boolean}\n   */\n  isZeroFeeError() {\n    return this.valid === false &&\n        this[P_ERRORS].indexOf('zero fee operations per block') > -1;\n  }\n}\n\nmodule.exports = Operation;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Currency = require('@sbx/common').Types.Currency;\nconst Abstract = require('./Abstract');\nconst BC = require('@sbx/common').BC;\n\nconst P_OPERATIONS = Symbol('operations');\nconst P_AMOUNT = Symbol('amount');\nconst P_FEE = Symbol('fee');\nconst P_RAWOPERATIONS = Symbol('rawoperations');\n\nclass RawOperations extends Abstract {\n  constructor(data) {\n    super(data);\n    this[P_OPERATIONS] = parseInt(data.operations, 10);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_FEE] = new Currency(data.fee);\n    this[P_RAWOPERATIONS] = BC.fromHex(data.rawoperations);\n  }\n\n  /**\n     * Gets the number of operations in this object.\n     *\n     * @returns {Number}\n     */\n  get operations() {\n    return this[P_OPERATIONS];\n  }\n\n  /**\n     * Gets the accumulated amount of all operations.\n     *\n     * @returns {Currency}\n     */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n     * Gets the accumulated amount of all operations.\n     *\n     * @returns {Currency}\n     */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n     * Gets the raw operations info.\n     *\n     * @returns {BC}\n     */\n  get rawoperations() {\n    return this[P_RAWOPERATIONS];\n  }\n}\n\nmodule.exports = RawOperations;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst Currency = require('@sbx/common').Types.Currency;\nconst BC = require('@sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\n\n/**\n * Represents a receiver in an operation.\n */\nclass Receiver extends Abstract {\n  /**\n   * Creates a new instance of the Receiver class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the account of the receiver.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Receiver;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst Currency = require('@sbx/common').Types.Currency;\nconst BC = require('@sbx/common').BC;\n\nconst P_ACCOUNT = Symbol('account');\nconst P_AMOUNT = Symbol('amount');\nconst P_PAYLOAD = Symbol('payload');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Represents a sender in an operation.\n */\nclass Sender extends Abstract {\n  /**\n   * Creates a new instance of the Sender class.\n   *\n   * @param {Object} data\n   */\n  constructor(data) {\n    super(data);\n\n    this[P_N_OPERATION] = parseInt(data.n_operation, 10);\n    this[P_ACCOUNT] = new AccountNumber(data.account);\n    this[P_AMOUNT] = new Currency(data.amount);\n    this[P_PAYLOAD] = BC.fromHex(data.payload);\n  }\n\n  /**\n   * Gets the n operation of thwe sender.\n   *\n   * @returns {Number}\n   */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets the account of the sender.\n   *\n   * @returns {AccountNumber}\n   */\n  get account() {\n    return this[P_ACCOUNT];\n  }\n\n  /**\n   * Gets the amount.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the payload.\n   *\n   * @returns {BC}\n   */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n}\n\nmodule.exports = Sender;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./Abstract');\nconst BC = require('@sbx/common').BC;\nconst Curve = require('@sbx/common').Types.Keys.Curve;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\n\nconst P_NAME = Symbol('block');\nconst P_ENC_PUBKEY = Symbol('publicKey');\nconst P_CAN_USE = Symbol('can_user');\nconst P_B58_PUBKEY = Symbol('b58_pubkey');\nconst P_EC_NID = Symbol('ec_nid');\nconst P_X = Symbol('x');\nconst P_Y = Symbol('y');\n\n/**\n * Holds information about a public key in the wallet (fetched via rpc).\n */\nclass WalletPublicKey extends Abstract {\n  /**\n     * Constructor\n     *\n     * @param {Object} data\n     */\n  constructor(data) {\n    super(data);\n    this[P_NAME] = data.name;\n    this[P_ENC_PUBKEY] = PublicKey.decode(BC.fromHex(data.publicKey));\n    this[P_CAN_USE] = !!data.can_use;\n\n    this[P_B58_PUBKEY] = null;\n    this[P_EC_NID] = null;\n    this[P_X] = null;\n    this[P_Y] = null;\n    if (data.b58_pubkey !== undefined) {\n      this[P_B58_PUBKEY] = data.b58_pubkey;\n    }\n    if (data.ec_nid !== undefined) {\n      this[P_EC_NID] = new Curve(parseInt(data.ec_nid, 10));\n    }\n    if (data.x !== undefined) {\n      this[P_X] = BC.fromHex(data.x);\n    }\n    if (data.y !== undefined) {\n      this[P_Y] = BC.fromHex(data.y);\n    }\n  }\n\n  /**\n     * Gets the name of the key.\n     *\n     * @returns {String}\n     */\n  get name() {\n    return this[P_NAME];\n  }\n\n  /**\n     * Gets the public key.\n     *\n     * @returns {BC}\n     */\n  get publicKey() {\n    return this[P_ENC_PUBKEY];\n  }\n\n  /**\n     * Gets a flag indicating whether the key can be used.\n     *\n     * @returns {Boolean}\n     */\n  get canUse() {\n    return this[P_CAN_USE];\n  }\n\n  /**\n     * Gets the base58 public key if returned by the node.\n     *\n     * @returns {String|null}\n     */\n  get base58PublicKey() {\n    return this[P_B58_PUBKEY];\n  }\n\n  /**\n     * Gets the used curve if returned by the node.\n     *\n     * @returns {Curve|null}\n     */\n  get ecNid() {\n    return this[P_EC_NID];\n  }\n\n  /**\n     * Gets the X value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get x() {\n    return this[P_X];\n  }\n\n  /**\n     * Gets the Y value of the key if returned by the node.\n     *\n     * @returns {BC|null}\n     */\n  get y() {\n    return this[P_Y];\n  }\n}\n\nmodule.exports = WalletPublicKey;\n","module.exports = {\n  Account: require('./Account'),\n  Block: require('./Block'),\n  NodeStatus: require('./NodeStatus'),\n  NetStats: require('./NetStats'),\n  NetProtocol: require('./NetProtocol'),\n  NodeServer: require('./NodeServer'),\n  Operation: require('./Operation'),\n  Changer: require('./Changer'),\n  Receiver: require('./Receiver'),\n  Sender: require('./Sender'),\n  RawOperations: require('./RawOperations'),\n  WalletPublicKey: require('./WalletPublicKey')\n};\n"],"sourceRoot":""}