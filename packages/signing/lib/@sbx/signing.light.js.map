{"version":3,"sources":["webpack://@sbx/signing/webpack/universalModuleDefinition","webpack://@sbx/signing/webpack/bootstrap","webpack://@sbx/signing/./index.js","webpack://@sbx/signing/./src/Abstract.js","webpack://@sbx/signing/./src/Operations/BuyAccount.js","webpack://@sbx/signing/./src/Operations/ChangeAccountInfo.js","webpack://@sbx/signing/./src/Operations/ChangeKey.js","webpack://@sbx/signing/./src/Operations/ChangeKeySigned.js","webpack://@sbx/signing/./src/Operations/Data.js","webpack://@sbx/signing/./src/Operations/DelistAccountForSale.js","webpack://@sbx/signing/./src/Operations/ListAccountForSale.js","webpack://@sbx/signing/./src/Operations/Transaction.js","webpack://@sbx/signing/./src/Operations/index.js","webpack://@sbx/signing/./src/OperationsBuilder.js","webpack://@sbx/signing/./src/Signer.js","webpack://@sbx/signing/external \"@sbx/common\"","webpack://@sbx/signing/external \"@sbx/crypto\""],"names":["module","exports","OperationsBuilder","require","Signer","Operations","BC","Currency","Types","P_PAYLOAD","Symbol","P_S","P_R","P_FEE","P_N_OPERATION","Abstract","constructor","fromString","withPayload","payload","withFee","fee","withMinFee","MIN_FEE","digest","Error","sign","keyPair","nOperation","useDigest","signResult","signWithDigest","signWithHash","r","s","toRaw","fromRaw","bcFromInt","value","size","fromInt","switchEndian","bcFromStringWithSize","concat","length","bcFromString","bcFromBcWithSize","readBCWithSize","offset","data","slice","toInt","bcFromSign","isSigned","PublicKey","Keys","AccountNumber","P_SENDER","P_TARGET","P_AMOUNT","P_ACCOUNT_PRICE","P_SELLER_ACCOUNT","P_NEW_PUBLIC_KEY","BuyAccount","OPTYPE","sender","target","amount","price","seller","newPublicKey","account","toMolina","empty","curve","id","encode","raw","AccountName","P_ACCOUNT_SIGNER","P_ACCOUNT_TARGET","P_NEW_NAME","P_NEW_TYPE","P_WITH_NEW_PUBKEY","P_WITH_NEW_NAME","P_WITH_NEW_TYPE","getChangeType","op","changeType","ChangeAccountInfo","accountSigner","accountTarget","withNewPublicKey","publicKey","withNewName","newName","withNewType","newType","toString","ChangeKey","ChangeKeySigned","P_ACCOUNT_SENDER","P_DATA_TYPE","P_DATA_SEQUENCE","Data","signer","withDataType","dataType","parseInt","withDataSequence","dataSequence","withAmount","from","fromMolina","P_PRICE","P_ACCOUNT_TO_PAY","P_LOCKED_UNTIL_BLOCK","DelistAccountForSale","ListAccountForSale","accountToPay","asPrivateSale","lockedUntilBlock","Transaction","P_OPERATIONS","addOperation","operation","push","build","bc","forEach","parse","Sha","hash","sha256"],"mappings":"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","file":"@sbx/signing.light.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@sbx/common\"), require(\"@sbx/crypto\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@sbx/signing\", [\"@sbx/common\", \"@sbx/crypto\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@sbx/signing\"] = factory(require(\"@sbx/common\"), require(\"@sbx/crypto\"));\n\telse\n\t\troot[\"@sbx/signing\"] = factory(root[\"@sbx/common\"], root[\"@sbx/crypto\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__sbx_common__, __WEBPACK_EXTERNAL_MODULE__sbx_crypto__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = {\n  OperationsBuilder: require('./src/OperationsBuilder'),\n  Signer: require('./src/Signer'),\n  Operations: require('./src/Operations')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// const Payload = require('../Crypto/Payload');\nconst Signer = require('./Signer');\nconst BC = require('@sbx/common').BC;\nconst Currency = require('@sbx/common').Types.Currency;\n\nconst P_PAYLOAD = Symbol('payload');\nconst P_S = Symbol('s');\nconst P_R = Symbol('r');\nconst P_FEE = Symbol('fee');\nconst P_N_OPERATION = Symbol('nOperation');\n\n/**\n * Abstract class for RPC response objects.\n */\nclass Abstract {\n  constructor() {\n    this[P_PAYLOAD] = BC.fromString('');\n    this[P_S] = null;\n    this[P_R] = null;\n    this[P_FEE] = new Currency(0);\n  }\n\n  /**\n     * Sets the payload of the transaction instance.\n     *\n     * @param {BC} payload\n     *\n     * @returns {Abstract}\n     */\n  withPayload(payload) {\n    this[P_PAYLOAD] = payload;\n    return this;\n  }\n\n  /**\n   * Sets the fee.\n   *\n   * @param {Currency} fee\n   * @returns {Abstract}\n   */\n  withFee(fee) {\n    this[P_FEE] = new Currency(fee);\n    return this;\n  }\n\n  /**\n   * Sets the fee to the minimum.\n   *\n   * @returns {Abstract}\n   */\n  withMinFee() {\n    this[P_FEE] = Currency.MIN_FEE;\n    return this;\n  }\n\n  /**\n     * Returns a BC with the digest that needs to be hashed.\n     *\n     * @return {BC}\n     */\n  // eslint-disable-next-line class-methods-use-this\n  digest() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Signs the given operation and returns a new rawoperations string.\n   *\n   * @param {KeyPair} keyPair\n   * @param {Number} nOperation\n   * @param {Boolean} useDigest\n   * @returns {Abstract}\n   */\n  sign(keyPair, nOperation, useDigest = false) {\n    this[P_N_OPERATION] = nOperation;\n    const digest = this.digest();\n\n    let signResult;\n\n    if (useDigest === true) {\n      signResult = Signer.signWithDigest(keyPair, digest);\n    } else {\n      signResult = Signer.signWithHash(keyPair, digest);\n    }\n\n    // save results\n    this[P_R] = signResult.r;\n    this[P_S] = signResult.s;\n\n    return this;\n  }\n\n  /**\n     * Returns the BC for a rawoperations info.\n     *\n     * @return {BC}\n     */\n  toRaw() { // eslint-disable-line class-methods-use-this\n    throw new Error('Not implemented');\n  }\n\n  /**\n     * Returns a new instance of the derived class based on the given raw\n     * string.\n     *\n     * @return {Abstract}\n     */\n  // eslint-disable-next-line class-methods-use-this\n  static fromRaw() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n     * Gets a BC from the given int value.\n     *\n     * @param {Number} value\n     * @param {Number|undefined} size\n     * @returns {BC}\n     */\n  // eslint-disable-next-line class-methods-use-this\n  bcFromInt(value, size = null) {\n    return (size === null ?\n      BC.fromInt(value) :\n      BC.fromInt(value, size)).switchEndian();\n  }\n\n  /**\n     * Gets the given string as a byte collection with the size of the string\n     * prepended.\n     *\n     * @param {String} value\n     * @returns {BC}\n     */\n  bcFromStringWithSize(value) {\n    return BC.concat(\n      this.bcFromInt(value.length, 2),\n      this.bcFromString(value),\n    );\n  }\n\n  /**\n   * Gets the given BC as a byte collection with the size of\n   * the BC prepended.\n   *\n   * @param {BC} value\n   * @returns {BC}\n   */\n  bcFromBcWithSize(value) {\n    return BC.concat(\n      this.bcFromInt(value.length, 2),\n      value,\n    );\n  }\n\n  /**\n   * Extracts a BC with size from the given BC.\n   *\n   * @param {BC} value\n   * @param {Number} offset\n   * @returns {BC}\n   */\n  static readBCWithSize(value, offset) {\n    const data = {\n      size: value.slice(offset, offset + 2).switchEndian().toInt()\n    };\n\n    data.value = value.slice(offset + 2, offset + 2 + data.size);\n    return data;\n  }\n\n  /**\n     * Gets the BC from the given string.\n     *\n     * @param {String} value\n     * @returns {BC}\n     */\n  bcFromString(value) { // eslint-disable-line class-methods-use-this\n    return BC.fromString(value);\n  }\n\n  /**\n     * Returns the BC for an r and s signing result.\n     *\n     * @param {BC} r\n     * @param {BC} s\n     * @returns {BC}\n     */\n  bcFromSign(r, s) {\n    return BC.concat(\n      this.bcFromBcWithSize(r),\n      this.bcFromBcWithSize(s),\n    );\n  }\n\n  /**\n     * Gets the prepared payload.\n     *\n     * @returns {BC}\n     */\n  get payload() {\n    return this[P_PAYLOAD];\n  }\n\n  /**\n     * Gets the r value of the sign result.\n     *\n     * @returns {BC|null}\n     */\n  get r() {\n    return this[P_R];\n  }\n\n  /**\n     * Gets the s value of the sign result.\n     *\n     * @returns {BC|null}\n     */\n  get s() {\n    return this[P_S];\n  }\n\n  /**\n     * Gets the fee.\n     *\n     * @returns {Currency}\n     */\n  get fee() {\n    return this[P_FEE];\n  }\n\n  /**\n     * Gets the n operation.\n     *\n     * @returns {Number}\n     */\n  get nOperation() {\n    return this[P_N_OPERATION];\n  }\n\n  /**\n   * Gets a value indicating whether the current operation is already signed.\n   *\n   * @returns {boolean}\n   */\n  get isSigned() {\n    return this[P_S] !== null && this[P_R] !== null;\n  }\n}\n\nmodule.exports = Abstract;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst Currency = require('@sbx/common').Types.Currency;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\n\nconst P_SENDER = Symbol('sender');\nconst P_TARGET = Symbol('target');\nconst P_AMOUNT = Symbol('amount');\nconst P_ACCOUNT_PRICE = Symbol('price');\nconst P_SELLER_ACCOUNT = Symbol('seller');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\n\n/**\n * A transaction object that can be signed.\n */\nclass BuyAccount extends Abstract {\n  /**\n   * Gets the optype.\n   *\n   * @returns {number}\n   */\n  static get OPTYPE() {\n    return 6;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {AccountNumber|Number} sender\n   * @param {AccountNumber|Number} target\n   * @param {Currency} amount\n   * @param {Currency} price\n   * @param {AccountNumber} seller\n   * @param {PublicKey} newPublicKey\n   */\n  constructor(sender, target, amount, price, seller, newPublicKey) {\n    super();\n    this[P_SENDER] = new AccountNumber(sender);\n    this[P_TARGET] = new AccountNumber(target);\n    this[P_AMOUNT] = new Currency(amount);\n    this[P_ACCOUNT_PRICE] = new Currency(price);\n    this[P_SELLER_ACCOUNT] = new AccountNumber(seller);\n    this[P_NEW_PUBLIC_KEY] = newPublicKey;\n  }\n\n  /**\n   * Gets the digest of the operation.\n   *\n   * @returns {BC}\n   */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_SENDER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_TARGET].account, 4),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this.bcFromInt(this[P_ACCOUNT_PRICE].toMolina(), 8),\n      this.bcFromInt(this[P_SELLER_ACCOUNT].account, 4),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      BC.fromInt(BuyAccount.OPTYPE),\n    );\n  }\n\n  /**\n   * Gets the signed raw operations.\n   *\n   * @returns {BC}\n   */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(BuyAccount.OPTYPE, 4),\n      this.bcFromInt(this[P_SENDER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_TARGET].account, 4),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(), // v2\n      this.bcFromInt(2, 1), // buy account\n      this.bcFromInt(this[P_ACCOUNT_PRICE].toMolina(), 8),\n      this.bcFromInt(this[P_SELLER_ACCOUNT].account, 4),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n\n  /**\n   * Gets a new Operation object from the given signed operation.\n   *\n   * @param {BC|Buffer|String|Uint8Array} raw\n   * @returns {BC}\n   */\n  static fromRaw(raw) {\n    /*\n    raw = BC.from(raw);\n    const sender = raw.slice(4, 8).switchEndian().toInt();\n    const target = raw.slice(12, 16).switchEndian().toInt();\n    const amount = raw.slice(16, 24).switchEndian().toInt();\n    const fee = raw.slice(24, 32).switchEndian().toInt();\n    const payload = Abstract.readBCWithSize(raw, 32).value;\n    const publicKey = Abstract.readBCWithSize(raw, 34 + payload.length).value;\n    const price = raw.slice(36 + payload.length + publicKey.length, 8).switchEndian().toInt();\n    const seller = raw.slice(44 + payload.length + publicKey.length, 4).switchEndian().toInt();\n    const newPublicKey = Abstract.readBCWithSize(raw, 48 + payload.length + publicKey.length).value;\n\n    const op = new BuyAccount(sender, target, amount, price, seller, newPublicKey);\n\n    //op.withFee(dataType, dataSequence, amount);\n    //op.withFee(fee);\n    //op.withPayload(payload);\n\n    return op;*/\n  }\n}\n\nmodule.exports = BuyAccount;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\n\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst AccountName = require('@sbx/common').Types.AccountName;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_ACCOUNT_TARGET = Symbol('account_target');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\nconst P_NEW_NAME = Symbol('new_name');\nconst P_NEW_TYPE = Symbol('new_type');\n\nconst P_WITH_NEW_PUBKEY = Symbol('with_new_pubkey');\nconst P_WITH_NEW_NAME = Symbol('with_new_name');\nconst P_WITH_NEW_TYPE = Symbol('with_new_type');\n\n/**\n * Gets the change type of the op.\n *\n * @param {ChangeAccountInfo} op\n * @returns {number}\n */\nfunction getChangeType(op) {\n  let changeType = 0;\n\n  if (op[P_WITH_NEW_PUBKEY] === true) {\n    changeType |= 1;\n  }\n  if (op[P_WITH_NEW_NAME] === true) {\n    changeType |= 2;\n  }\n  if (op[P_WITH_NEW_TYPE] === true) {\n    changeType |= 4;\n  }\n\n  return changeType;\n}\n\n/**\n * A transaction object that can be signed.\n */\nclass ChangeAccountInfo extends Abstract {\n  /**\n     * Gets the optype.\n     *\n     * @returns {number}\n     */\n  static get OPTYPE() {\n    return 8;\n  }\n\n  /**\n     * Constructor.\n     *\n     * @param {Account|AccountNumber|Number|String} accountSigner\n     * @param {Account|AccountNumber|Number|String} accountTarget\n     */\n  constructor(accountSigner, accountTarget) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(accountSigner);\n    this[P_ACCOUNT_TARGET] = new AccountNumber(accountTarget);\n    this[P_NEW_PUBLIC_KEY] = PublicKey.empty();\n    this[P_NEW_NAME] = BC.fromString('');\n    // TODO: Im not so sure if this is correct\n    this[P_NEW_TYPE] = 0;\n\n    this[P_WITH_NEW_PUBKEY] = false;\n    this[P_WITH_NEW_NAME] = false;\n    this[P_WITH_NEW_TYPE] = false;\n  }\n\n  /**\n     * Will set the new public key.\n     *\n     * @param {PublicKey} publicKey\n     * @returns {ChangeAccountInfo}\n     */\n  withNewPublicKey(publicKey) {\n    this[P_NEW_PUBLIC_KEY] = publicKey;\n    this[P_WITH_NEW_PUBKEY] = true;\n    return this;\n  }\n\n  /**\n     * Will set the new name of the account.\n     *\n     * @param {String|AccountName} newName\n     * @returns {ChangeAccountInfo}\n     */\n  withNewName(newName) {\n    this[P_NEW_NAME] = new AccountName(newName);\n    this[P_WITH_NEW_NAME] = true;\n    return this;\n  }\n\n  /**\n     * Will set the new type of the account.\n     *\n     * @param {Number} newType\n     * @returns {ChangeAccountInfo}\n     */\n  withNewType(newType) {\n    this[P_NEW_TYPE] = newType;\n    this[P_WITH_NEW_TYPE] = true;\n    return this;\n  }\n\n  /**\n     * Gets the digest of the operation.\n     *\n     * @returns {BC}\n     */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(), // v2\n      this.bcFromInt(getChangeType(this)),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromBcWithSize(BC.fromString(this[P_NEW_NAME].toString())),\n      this.bcFromInt(this[P_NEW_TYPE], 2),\n      this.bcFromInt(ChangeAccountInfo.OPTYPE),\n    );\n  }\n\n  /**\n     * Gets the raw implementation.\n     *\n     * @returns {BC}\n     */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(ChangeAccountInfo.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(), // v2\n      this.bcFromInt(getChangeType(this)),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromBcWithSize(BC.fromString(this[P_NEW_NAME].toString())),\n      this.bcFromInt(this[P_NEW_TYPE], 2),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = ChangeAccountInfo;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\n\n/**\n * A transaction object that can be signed.\n */\nclass ChangeKey extends Abstract {\n  /**\n     * Gets the optype.\n     *\n     * @returns {number}\n     */\n  static get OPTYPE() {\n    return 2;\n  }\n\n  /**\n     *\n     * @param {Account|AccountNumber|Number|String} accountSigner\n     * @param {PublicKey} newPublicKey\n     */\n  constructor(accountSigner, newPublicKey) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(accountSigner);\n    this[P_NEW_PUBLIC_KEY] = newPublicKey;\n  }\n\n  /**\n     * Gets the digest of the operation.\n     *\n     * @returns {BC}\n     */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromInt(ChangeKey.OPTYPE),\n    );\n  }\n\n  /**\n     * Gets the raw implementation.\n     *\n     * @returns {BC}\n     */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(ChangeKey.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(),\n      this.bcFromInt(this[P_NEW_PUBLIC_KEY].encode().length, 2),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = ChangeKey;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_ACCOUNT_TARGET = Symbol('account_target');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\n\n/**\n * A transaction object that can be signed.\n */\nclass ChangeKeySigned extends Abstract {\n  /**\n   * Gets the optype.\n   *\n   * @returns {number}\n   */\n  static get OPTYPE() {\n    return 7;\n  }\n\n  /**\n   *\n   * @param {Account|AccountNumber|Number|String} accountSigner\n   * @param {PublicKey} newPublicKey\n   */\n  constructor(accountSigner, accountTarget, newPublicKey) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(accountSigner);\n    this[P_ACCOUNT_TARGET] = new AccountNumber(accountTarget);\n    this[P_NEW_PUBLIC_KEY] = newPublicKey;\n  }\n\n  /**\n   * Gets the digest of the operation.\n   *\n   * @returns {BC}\n   */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromInt(ChangeKeySigned.OPTYPE),\n    );\n  }\n\n  /**\n   * Gets the raw implementation.\n   *\n   * @returns {BC}\n   */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(ChangeKeySigned.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(),\n      this.bcFromInt(this[P_NEW_PUBLIC_KEY].encode().length, 2),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = ChangeKeySigned;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst Currency = require('@sbx/common').Types.Currency;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_ACCOUNT_SENDER = Symbol('account_sender');\nconst P_ACCOUNT_TARGET = Symbol('account_target');\nconst P_DATA_TYPE = Symbol('data_type');\nconst P_DATA_SEQUENCE = Symbol('data_sequence');\nconst P_AMOUNT = Symbol('amount');\n\n/**\n * A DATA operation object that can be signed.\n */\nclass Data extends Abstract {\n  /**\n   * Gets the optype.\n   *\n   * @returns {number}\n   */\n  static get OPTYPE() {\n    return 10;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {Number|AccountNumber} signer\n   * @param {Number|AccountNumber} sender\n   * @param {Number|AccountNumber} target\n   */\n  constructor(signer, sender, target) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(signer);\n    this[P_ACCOUNT_SENDER] = new AccountNumber(sender);\n    this[P_ACCOUNT_TARGET] = new AccountNumber(target);\n    this[P_DATA_TYPE] = 0;\n    this[P_DATA_SEQUENCE] = 0;\n    this[P_AMOUNT] = new Currency(0);\n  }\n\n  /**\n   * Sets the data type.\n   *\n   * @param {Number} dataType\n   * @returns {Data}\n   */\n  withDataType(dataType) {\n    this[P_DATA_TYPE] = parseInt(dataType, 10);\n\n    return this;\n  }\n\n  /**\n   * Sets the data information.\n   *\n   * @param {Number} dataSequence\n   * @returns {Data}\n   */\n  withDataSequence(dataSequence) {\n    this[P_DATA_SEQUENCE] = parseInt(dataSequence, 10);\n\n    return this;\n  }\n\n  /**\n   * Sets the amount to transfer.\n   *\n   * @param {Currency|Number|String} amount\n   * @returns {Data}\n   */\n  withAmount(amount) {\n    this[P_AMOUNT] = new Currency(amount);\n    return this;\n  }\n\n  /**\n   * Gets the signer account number.\n   *\n   * @returns {AccountNumber}\n   */\n  get signer() {\n    return this[P_ACCOUNT_SIGNER];\n  }\n\n  /**\n   * Gets the sender account number.\n   *\n   * @returns {AccountNumber}\n   */\n  get sender() {\n    return this[P_ACCOUNT_SENDER];\n  }\n\n  /**\n   * Gets the target account number.\n   *\n   * @returns {AccountNumber}\n   */\n  get target() {\n    return this[P_ACCOUNT_TARGET];\n  }\n\n  /**\n   * Gets the data type.\n   *\n   * @returns {Number}\n   */\n  get dataType() {\n    return this[P_DATA_TYPE];\n  }\n\n  /**\n   * Gets the data sequence.\n   *\n   * @returns {Number}\n   */\n  get dataSequence() {\n    return this[P_DATA_SEQUENCE];\n  }\n\n  /**\n   * Gets the amount to send.\n   *\n   * @returns {Currency}\n   */\n  get amount() {\n    return this[P_AMOUNT];\n  }\n\n  /**\n   * Gets the digest of the operation.\n   *\n   * @returns {BC}\n   */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_SENDER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_DATA_TYPE], 2),\n      this.bcFromInt(this[P_DATA_SEQUENCE], 2),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      this.bcFromInt(Data.OPTYPE, 1),\n    );\n  }\n\n  /**\n   * Gets the raw implementation.\n   *\n   * @returns {BC}\n   */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(Data.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_SENDER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_DATA_TYPE], 2),\n      this.bcFromInt(this[P_DATA_SEQUENCE], 2),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n\n  /**\n   * Gets a new Operation object from the given signed operation.\n   *\n   * @param {BC|Buffer|String|Uint8Array} raw\n   * @returns {BC}\n   */\n  static fromRaw(raw) {\n    raw = BC.from(raw);\n    const signer = raw.slice(4, 8).switchEndian().toInt();\n    const sender = raw.slice(8, 12).switchEndian().toInt();\n    const target = raw.slice(12, 16).switchEndian().toInt();\n    const dataType = raw.slice(20, 22).switchEndian().toInt();\n    const dataSequence = raw.slice(22, 24).switchEndian().toInt();\n    const amount = raw.slice(24, 32).switchEndian().toInt();\n    const fee = raw.slice(32, 40).switchEndian().toInt();\n    const payload = Data.readBCWithSize(raw, 40).value;\n\n    const op = new Data(signer, sender, target);\n\n    op.withDataType(dataType);\n    op.withDataSequence(dataSequence);\n    op.withAmount(Currency.fromMolina(amount));\n    op.withFee(Currency.fromMolina(fee));\n    op.withPayload(payload);\n\n    return op;\n  }\n\n  /**\n   * Data ops are signed with the digest, not the hash of the digest.\n   *\n   * @param {KeyPair} keyPair\n   * @param {Number} nOperation\n   */\n  sign(keyPair, nOperation) {\n    super.sign(keyPair, nOperation, true);\n  }\n}\n\nmodule.exports = Data;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst Currency = require('@sbx/common').Types.Currency;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_ACCOUNT_TARGET = Symbol('account_target');\nconst P_PRICE = Symbol('price');\nconst P_ACCOUNT_TO_PAY = Symbol('account_to_pay');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\n\n/**\n * A transaction object that can be signed.\n */\nclass DelistAccountForSale extends Abstract {\n  /**\n   * Gets the optype.\n   *\n   * @returns {number}\n   */\n  static get OPTYPE() {\n    return 5;\n  }\n\n  /**\n   *\n   * @param accountSigner\n   * @param accountTarget\n   */\n  constructor(accountSigner, accountTarget) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(accountSigner);\n    this[P_ACCOUNT_TARGET] = new AccountNumber(accountTarget);\n    this[P_PRICE] = new Currency(0);\n    this[P_ACCOUNT_TO_PAY] = new AccountNumber(0);\n    this[P_NEW_PUBLIC_KEY] = PublicKey.empty();\n    this[P_LOCKED_UNTIL_BLOCK] = 0;\n  }\n\n  /**\n   * Gets the digest of the operation.\n   *\n   * @returns {BC}\n   */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_PRICE].toMolina(), 8),\n      this.bcFromInt(this[P_ACCOUNT_TO_PAY].account, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromInt(this[P_LOCKED_UNTIL_BLOCK], 4),\n      this.bcFromInt(DelistAccountForSale.OPTYPE),\n    );\n  }\n\n  /**\n   * Gets the raw implementation.\n   *\n   * @returns {BC}\n   */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(DelistAccountForSale.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(5, 2), // list account for sale\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = DelistAccountForSale;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\nconst Currency = require('@sbx/common').Types.Currency;\n\nconst P_ACCOUNT_SIGNER = Symbol('account_signer');\nconst P_ACCOUNT_TARGET = Symbol('account_target');\nconst P_PRICE = Symbol('price');\nconst P_ACCOUNT_TO_PAY = Symbol('account_to_pay');\nconst P_NEW_PUBLIC_KEY = Symbol('new_public_key');\nconst P_LOCKED_UNTIL_BLOCK = Symbol('locked_until_block');\n\n/**\n * A transaction object that can be signed.\n */\nclass ListAccountForSale extends Abstract {\n  /**\n     * Gets the optype.\n     *\n     * @returns {number}\n     */\n  static get OPTYPE() {\n    return 4;\n  }\n\n  /**\n   *\n   * @param accountSigner\n   * @param accountTarget\n   * @param price\n   * @param accountToPay\n   */\n  constructor(accountSigner, accountTarget, price, accountToPay) {\n    super();\n    this[P_ACCOUNT_SIGNER] = new AccountNumber(accountSigner);\n    this[P_ACCOUNT_TARGET] = new AccountNumber(accountTarget);\n    this[P_PRICE] = new Currency(price);\n    this[P_ACCOUNT_TO_PAY] = new AccountNumber(accountToPay);\n    this[P_NEW_PUBLIC_KEY] = PublicKey.empty();\n    this[P_LOCKED_UNTIL_BLOCK] = 0;\n  }\n\n  /**\n   * Will mark the operation as a private sale to a public key.\n   *\n   * @param {PublicKey} newPublicKey\n   * @param {Number} lockedUntilBlock\n   */\n  asPrivateSale(newPublicKey, lockedUntilBlock = 0) {\n    this[P_NEW_PUBLIC_KEY] = newPublicKey;\n    this[P_LOCKED_UNTIL_BLOCK] = parseInt(lockedUntilBlock, 10);\n  }\n\n  /**\n     * Gets the digest of the operation.\n     *\n     * @returns {BC}\n     */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_PRICE].toMolina(), 8),\n      this.bcFromInt(this[P_ACCOUNT_TO_PAY].account, 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromInt(this[P_LOCKED_UNTIL_BLOCK], 4),\n      this.bcFromInt(ListAccountForSale.OPTYPE),\n    );\n  }\n\n  /**\n     * Gets the raw implementation.\n     *\n     * @returns {BC}\n     */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(ListAccountForSale.OPTYPE, 4),\n      this.bcFromInt(this[P_ACCOUNT_SIGNER].account, 4),\n      this.bcFromInt(this[P_ACCOUNT_TARGET].account, 4),\n      this.bcFromInt(4, 2), // list account for sale\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_PRICE].toMolina(), 8),\n      this.bcFromInt(this[P_ACCOUNT_TO_PAY].account, 4),\n      this.bcFromInt(PublicKey.empty().curve.id, 2), // just zero as curve id\n      this.bcFromInt(0, 2), // x length\n      this.bcFromInt(0, 2), // y length\n      this.bcFromInt(this[P_NEW_PUBLIC_KEY].encode().length, 2),\n      this[P_NEW_PUBLIC_KEY].encode(),\n      this.bcFromInt(this[P_LOCKED_UNTIL_BLOCK], 4),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = ListAccountForSale;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst Abstract = require('./../Abstract');\nconst BC = require('@sbx/common').BC;\nconst PublicKey = require('@sbx/common').Types.Keys.PublicKey;\nconst Currency = require('@sbx/common').Types.Currency;\nconst AccountNumber = require('@sbx/common').Types.AccountNumber;\n\nconst P_SENDER = Symbol('sender');\nconst P_TARGET = Symbol('target');\nconst P_AMOUNT = Symbol('amount');\n\n/**\n * A transaction object that can be signed.\n */\nclass Transaction extends Abstract {\n  /**\n     * Gets the optype.\n     *\n     * @returns {number}\n     */\n  static get OPTYPE() {\n    return 1;\n  }\n\n  /**\n   * Gets the sender account.\n   * @returns {AccountNumber}\n   */\n  get sender() {\n    return this[P_SENDER];\n  }\n\n  /**\n     * Creates a new Transaction instance with the given data. The payload is\n     * empty by default and not encoded.\n     *\n   * @param {AccountNumber|Account|String|Number} sender\n   * @param {AccountNumber|Account|String|Number} target\n   * @param {Currency} amount\n     */\n  constructor(sender, target, amount) {\n    super();\n    this[P_SENDER] = new AccountNumber(sender);\n    this[P_TARGET] = new AccountNumber(target);\n    this[P_AMOUNT] = new Currency(amount);\n  }\n\n  /**\n     * Gets the digest of the operation.\n     *\n     * @returns {BC}\n     */\n  digest() {\n    return BC.concat(\n      this.bcFromInt(this[P_SENDER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_TARGET].account, 4),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.payload,\n      BC.fromInt(0, 2),\n      BC.fromInt(Transaction.OPTYPE),\n    );\n  }\n\n  /**\n     * Gets the signed raw operations.\n     *\n     * @returns {BC}\n     */\n  toRaw() {\n    return BC.concat(\n      this.bcFromInt(Transaction.OPTYPE, 4),\n      this.bcFromInt(this[P_SENDER].account, 4),\n      this.bcFromInt(this.nOperation, 4),\n      this.bcFromInt(this[P_TARGET].account, 4),\n      this.bcFromInt(this[P_AMOUNT].toMolina(), 8),\n      this.bcFromInt(this.fee.toMolina(), 8),\n      this.bcFromBcWithSize(this.payload),\n      PublicKey.empty().encode(), // v2\n      this.bcFromSign(this.r, this.s),\n    );\n  }\n}\n\nmodule.exports = Transaction;\n","module.exports = {\n  BuyAccount: require('./BuyAccount'),\n  ChangeAccountInfo: require('./ChangeAccountInfo'),\n  ChangeKey: require('./ChangeKey'),\n  ChangeKeySigned: require('./ChangeKeySigned'),\n  Data: require('./Data'),\n  DelistAccountForSale: require('./DelistAccountForSale'),\n  ListAccountForSale: require('./ListAccountForSale'),\n  Transaction: require('./Transaction')\n};\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst BC = require('@sbx/common').BC;\n\nconst P_OPERATIONS = Symbol('operations');\n\n/**\n * This class combines multiple signed operations to a string that\n * can be executed by the node.\n */\nclass OperationsBuilder {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this[P_OPERATIONS] = [];\n  }\n\n  /**\n   * Adds a single operation to the list of Operations.\n   *\n   * @param operation\n   * @returns {OperationsBuilder}\n   */\n  addOperation(operation) {\n    if (!operation.isSigned) {\n      throw new Error('Operation needs to be signed.');\n    }\n\n    this[P_OPERATIONS].push(operation);\n    return this;\n  }\n\n  /**\n   * Builds the operations.\n   *\n   * @returns {BC}\n   */\n  build() {\n    let bc = BC.fromInt(this[P_OPERATIONS].length, 4).switchEndian();\n\n    this[P_OPERATIONS].forEach((op) => {\n      bc = BC.concat(bc, op.toRaw());\n    });\n\n    return bc;\n  }\n\n  parse(raw) {\n\n    // let numOperations = raw.slice(0, 3);\n    let bc = BC.fromInt(this[P_OPERATIONS].length, 4).switchEndian();\n\n    this[P_OPERATIONS].forEach((op) => {\n      bc = BC.concat(bc, op.toRaw());\n    });\n\n    return bc;\n  }\n}\n\nmodule.exports = OperationsBuilder;\n","/**\n * Copyright (c) Benjamin Ansbach - all rights reserved.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n'use strict';\n\nconst Sha = require('@sbx/common').Sha;\nconst Keys = require('@sbx/crypto').Keys;\n\nclass Signer {\n  /**\n   * Signs the given digest with the given keypair and returns the r and s\n   * values (because thats all that is needed).\n   *\n   * @param {KeyPair} keyPair\n   * @param {BC} digest\n   */\n  static signWithHash(keyPair, digest) {\n    const hash = Sha.sha256(digest);\n\n    return Keys.sign(keyPair, hash);\n  }\n\n  static signWithDigest(keyPair, digest) {\n    return Keys.sign(keyPair, digest);\n  }\n}\n\nmodule.exports = Signer;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__sbx_common__;","module.exports = __WEBPACK_EXTERNAL_MODULE__sbx_crypto__;"],"sourceRoot":""}